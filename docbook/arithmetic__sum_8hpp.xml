<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_arithmetic__sum_8hpp" xml:lang="ja">
<title>others/arithmetic_sum.hpp ファイル</title>
<indexterm><primary>others/arithmetic_sum.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;../../kyopro_library/template.hpp&quot;<?linebreak?></programlisting><simplesect>
    <title>クラス    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_arithmetic_progression">ArithmeticProgression</link></para>

<para>等差数列 </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>関数    </title>
        <itemizedlist>
            <listitem><para><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_arithmetic__sum_8hpp_1af4f7eae51c564f55d72d097581d9867a">ArithmeticSum</link> (<link linkend="_struct_arithmetic_progression">ArithmeticProgression</link> ap)</para>

<para>等差数列の和を返す </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>関数詳解</title>
<anchor xml:id="_arithmetic__sum_8hpp_1af4f7eae51c564f55d72d097581d9867a"/><section>
    <title>ArithmeticSum()</title>
<indexterm><primary>ArithmeticSum</primary><secondary>arithmetic_sum.hpp</secondary></indexterm>
<indexterm><primary>arithmetic_sum.hpp</primary><secondary>ArithmeticSum</secondary></indexterm>
<para><computeroutput><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> ArithmeticSum (<link linkend="_struct_arithmetic_progression">ArithmeticProgression</link> ap)</computeroutput></para><para>

<para>等差数列の和を返す </para>
</para>
<para>
 <link linkend="_arithmetic__sum_8hpp_source">arithmetic_sum.hpp</link> の <link linkend="_arithmetic__sum_8hpp_source_1l00026">26</link> 行目に定義があります。</para>
<para>
参照先 <link linkend="_arithmetic__sum_8hpp_source_1l00005">ArithmeticProgression::goal</link>, <link linkend="_arithmetic__sum_8hpp_source_1l00005">ArithmeticProgression::length</link>, <link linkend="_arithmetic__sum_8hpp_source_1l00008">ArithmeticProgression::normalize()</link>, <link linkend="_arithmetic__sum_8hpp_source_1l00005">ArithmeticProgression::start</link>.</para>
</section>
</section>
</section>
