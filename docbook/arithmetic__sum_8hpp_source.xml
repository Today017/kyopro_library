<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_arithmetic__sum_8hpp_source" xml:lang="ja">
<title>arithmetic_sum.hpp</title>
<indexterm><primary>others/arithmetic_sum.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_arithmetic__sum_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00002"/>00002 
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;等差数列</emphasis>
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00004"/><link linkend="_struct_arithmetic_progression">00004</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_arithmetic_progression">ArithmeticProgression</link>&#32;{
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00005"/><link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">00005</link> &#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>=<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>,<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>=<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>,<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>=<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>,<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>=<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00006"/>00006 
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;初項、公差、末項、項数のうち、足りない情報を計算する</emphasis>
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00008"/><link linkend="_struct_arithmetic_progression_1a6723b8759541579ceaadce1af254f2fb">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_arithmetic_progression_1a6723b8759541579ceaadce1af254f2fb">normalize</link>()&#32;{
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;undef_cnt=0;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;undef_cnt++;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;undef_cnt++;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;undef_cnt++;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;undef_cnt++;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(undef_cnt&lt;=1);
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>=<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>+(<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>-1)*<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>=<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>-(<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>-1)*<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>=(<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>==<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>)?0:(<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>-<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>)/(<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>-1);
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>==<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;{
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>!=0);
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>=(<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>-<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>)/<link linkend="_struct_arithmetic_progression_1a9f43fabcce1fd4d75762729df498b4ea">step</link>+1;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00023"/>00023 };
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00024"/>00024 
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00025"/>00025 <emphasis role="comment">///&#32;@brief&#32;等差数列の和を返す</emphasis>
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00026"/><link linkend="_arithmetic__sum_8hpp_1af4f7eae51c564f55d72d097581d9867a">00026</link> ll&#32;<link linkend="_arithmetic__sum_8hpp_1af4f7eae51c564f55d72d097581d9867a">ArithmeticSum</link>(<link linkend="_struct_arithmetic_progression">ArithmeticProgression</link>&#32;ap)&#32;{
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;ap<link linkend="_struct_arithmetic_progression_1a6723b8759541579ceaadce1af254f2fb">.</link><link linkend="_struct_arithmetic_progression_1a6723b8759541579ceaadce1af254f2fb">normalize</link><link linkend="_struct_arithmetic_progression_1a6723b8759541579ceaadce1af254f2fb">(</link><link linkend="_struct_arithmetic_progression_1a6723b8759541579ceaadce1af254f2fb">)</link>;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(ap<link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">.</link><link linkend="_struct_arithmetic_progression_1a11989c11fe03b3043b66aa42a6186f02">start</link>+ap<link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">.</link><link linkend="_struct_arithmetic_progression_1abc195b71cb16a2c02740eb8f0e3bedb7">goal</link>)*ap<link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">.</link><link linkend="_struct_arithmetic_progression_1af4ea3b508dff881c66a8bfa076f2478c">length</link>/2;
<anchor xml:id="_arithmetic__sum_8hpp_source_1l00029"/>00029 }
</programlisting></section>
