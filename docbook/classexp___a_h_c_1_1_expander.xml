<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classexp___a_h_c_1_1_expander" xml:lang="ja">
<title>exp_AHC.Expander クラス</title>
<indexterm><primary>exp_AHC.Expander</primary></indexterm>
<para>

<para><link linkend="_classexp___a_h_c_1_1_expander">Expander</link> class is responsible for expanding libraries in the source code. </para>
 
</para>
<simplesect>
    <title>公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classexp___a_h_c_1_1_expander_1a2f06c5c8a096ea1d6bacb43670751399">is_ignored_line</link> (self, line)</para>

<para>Checks if a line should be ignored during expansion. </para>
</listitem>
            <listitem><para><link linkend="_classexp___a_h_c_1_1_expander_1a9754b60461b5d76a41f2b1ff325a5037">__init__</link> (self, List[Path] <link linkend="_classexp___a_h_c_1_1_expander_1ac37f8e6a4a59662ab2c01a80c94ebe33">lib_paths</link>)</para>

<para>Initializes an <link linkend="_classexp___a_h_c_1_1_expander">Expander</link> object. </para>
</listitem>
            <listitem><para>Path <link linkend="_classexp___a_h_c_1_1_expander_1a88b7a38dd0ece6deb5c2918f63619c4d">find_library</link> (self, str library_name)</para>

<para>Finds the path of a library file. </para>
</listitem>
            <listitem><para>List[str] <link linkend="_classexp___a_h_c_1_1_expander_1a3acdb0ba487cfef451ee66eb598b8185">expand_library</link> (self, Path library_file_path)</para>

<para>Expands a library file. </para>
</listitem>
            <listitem><para>str <link linkend="_classexp___a_h_c_1_1_expander_1aa1b5a3cab7b3393f6a62597a32907164">expand</link> (self, str <link linkend="_namespaceexp___a_h_c_1acf93965763ecde414f94e2c88522aa37">source</link>)</para>

<para>Expands libraries in the source code. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>公開変数類    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classexp___a_h_c_1_1_expander_1ac37f8e6a4a59662ab2c01a80c94ebe33">lib_paths</link> = lib_paths</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>静的公開変数類    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classexp___a_h_c_1_1_expander_1ad98d41b559c60f5c5566583afdbf4350">include</link> = re.compile(r&apos;#include\s*[&quot;&lt;](kyopro_library/[a-z0-9_/]*(|.hpp))[&quot;&gt;]\s*&apos;)</para>
</listitem>
            <listitem><para><link linkend="_classexp___a_h_c_1_1_expander_1a2e602d36bc1ed17bcd2b31bb17128fef">included</link> = set()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>

<para><link linkend="_classexp___a_h_c_1_1_expander">Expander</link> class is responsible for expanding libraries in the source code. </para>



<para>Attributes:<itemizedlist>
<listitem>
<para>include (re.Pattern): Regular expression pattern to match <link linkend="_classexp___a_h_c_1_1_expander_1ad98d41b559c60f5c5566583afdbf4350">include</link> statements.</para>
</listitem><listitem>
<para>lib_paths (List[Path]): List of library paths.</para>
</listitem><listitem>
<para>included (<link linkend="_struct_set">Set</link>[Path]): <link linkend="_struct_set">Set</link> of included library file paths.</para>
</listitem></itemizedlist>
</para>

<para>Methods:<itemizedlist>
<listitem>
<para>is_ignored_line(line: str) -&gt; bool: Checks if a line should be ignored during expansion.</para>
</listitem><listitem>
<para>find_library(library_name: str) -&gt; Path: Finds the path of a library file.</para>
</listitem><listitem>
<para>expand_library(library_file_path: Path) -&gt; List[str]: Expands a library file.</para>
</listitem><listitem>
<para>expand(source: str) -&gt; str: Expands libraries in the source code. </para>
</listitem></itemizedlist>
</para>
<para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00021">21</link> 行目に定義があります。</para>
</section>
<section>
<title>構築子と解体子</title>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1a9754b60461b5d76a41f2b1ff325a5037"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>exp_AHC.Expander.__init__ ( self, List[Path] lib_paths)</computeroutput></para><para>

<para>Initializes an <link linkend="_classexp___a_h_c_1_1_expander">Expander</link> object. </para>
</para>

<para>Args:<itemizedlist>
<listitem>
<para>lib_paths (List[Path]): List of library paths. </para>
</listitem></itemizedlist>
</para>
<para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00067">67</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1a2f06c5c8a096ea1d6bacb43670751399"/><section>
    <title>is_ignored_line()</title>
<indexterm><primary>is_ignored_line</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>is_ignored_line</secondary></indexterm>
<para><computeroutput> bool exp_AHC.Expander.is_ignored_line ( self,  line)</computeroutput></para><para>

<para>Checks if a line should be ignored during expansion. </para>
</para>

<para>Args:<itemizedlist>
<listitem>
<para>line (str): The line to be checked.</para>
</listitem></itemizedlist>
</para>

<para>Returns:<itemizedlist>
<listitem>
<para>bool: True if the line should be ignored, False otherwise. </para>
</listitem></itemizedlist>
</para>
<para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00040">40</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1a88b7a38dd0ece6deb5c2918f63619c4d"/><section>
    <title>find_library()</title>
<indexterm><primary>find_library</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>find_library</secondary></indexterm>
<para><computeroutput> Path exp_AHC.Expander.find_library ( self, str library_name)</computeroutput></para><para>

<para>Finds the path of a library file. </para>
</para>

<para>Args:<itemizedlist>
<listitem>
<para>library_name (str): The name of the library file.</para>
</listitem></itemizedlist>
</para>

<para>Returns:<itemizedlist>
<listitem>
<para>Path: The path of the library file.</para>
</listitem></itemizedlist>
</para>

<para>Raises:<itemizedlist>
<listitem>
<para>FileNotFoundError: If the library file cannot be found. </para>
</listitem></itemizedlist>
</para>
<para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00079">79</link> 行目に定義があります。</para>
<para>
参照先 <link linkend="_exp___a_h_c_8py_source_1l00178">exp_AHC.format</link>, <link linkend="_exp_8py_source_1l00075">exp.Expander.lib_paths</link>, <link linkend="_exp___a_h_c_8py_source_1l00075">lib_paths</link>.</para>
</section>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1a3acdb0ba487cfef451ee66eb598b8185"/><section>
    <title>expand_library()</title>
<indexterm><primary>expand_library</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>expand_library</secondary></indexterm>
<para><computeroutput> List[str] exp_AHC.Expander.expand_library ( self, Path library_file_path)</computeroutput></para><para>

<para>Expands a library file. </para>
</para>

<para>Args:<itemizedlist>
<listitem>
<para>library_file_path (Path): The path of the library file.</para>
</listitem></itemizedlist>
</para>

<para>Returns:<itemizedlist>
<listitem>
<para>List[str]: The expanded lines of the library file. </para>
</listitem></itemizedlist>
</para>
<para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00100">100</link> 行目に定義があります。</para>
<para>
参照先 <link linkend="_exp_8py_source_1l00100">exp.Expander.expand_library()</link>, <link linkend="_exp___a_h_c_8py_source_1l00100">expand_library()</link>, <link linkend="_exp_8py_source_1l00079">exp.Expander.find_library()</link>, <link linkend="_exp___a_h_c_8py_source_1l00079">find_library()</link>, <link linkend="_exp___a_h_c_8py_source_1l00178">exp_AHC.format</link>, <link linkend="_exp_8py_source_1l00038">exp.Expander.include</link>, <link linkend="_exp___a_h_c_8py_source_1l00038">include</link>, <link linkend="_exp_8py_source_1l00077">exp.Expander.included</link>, <link linkend="_exp___a_h_c_8py_source_1l00077">included</link>, <link linkend="_exp_8py_source_1l00040">exp.Expander.is_ignored_line()</link>, <link linkend="_exp___a_h_c_8py_source_1l00040">is_ignored_line()</link>.</para>
</section>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1aa1b5a3cab7b3393f6a62597a32907164"/><section>
    <title>expand()</title>
<indexterm><primary>expand</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>expand</secondary></indexterm>
<para><computeroutput> str exp_AHC.Expander.expand ( self, str source)</computeroutput></para><para>

<para>Expands libraries in the source code. </para>
</para>

<para>Args:<itemizedlist>
<listitem>
<para>source (str): The source code to be expanded.</para>
</listitem></itemizedlist>
</para>

<para>Returns:<itemizedlist>
<listitem>
<para>str: The expanded source code. </para>
</listitem></itemizedlist>
</para>
<para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00145">145</link> 行目に定義があります。</para>
<para>
参照先 <link linkend="_exp_8py_source_1l00100">exp.Expander.expand_library()</link>, <link linkend="_exp___a_h_c_8py_source_1l00100">expand_library()</link>, <link linkend="_exp_8py_source_1l00079">exp.Expander.find_library()</link>, <link linkend="_exp___a_h_c_8py_source_1l00079">find_library()</link>, <link linkend="_exp_8py_source_1l00038">exp.Expander.include</link>, <link linkend="_exp___a_h_c_8py_source_1l00038">include</link>, <link linkend="_exp_8py_source_1l00077">exp.Expander.included</link>, <link linkend="_exp___a_h_c_8py_source_1l00077">included</link>.</para>
</section>
</section>
<section>
<title>メンバ詳解</title>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1ad98d41b559c60f5c5566583afdbf4350"/><section>
    <title>include</title>
<indexterm><primary>include</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>include</secondary></indexterm>
<para><computeroutput>exp_AHC.Expander.include = re.compile(r&apos;#include\s*[&quot;&lt;](kyopro_library/[a-z0-9_/]*(|.hpp))[&quot;&gt;]\s*&apos;)<computeroutput>[static]</computeroutput></computeroutput></para><para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00038">38</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1a2e602d36bc1ed17bcd2b31bb17128fef"/><section>
    <title>included</title>
<indexterm><primary>included</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>included</secondary></indexterm>
<para><computeroutput>exp_AHC.Expander.included = set()<computeroutput>[static]</computeroutput></computeroutput></para><para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00077">77</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_classexp___a_h_c_1_1_expander_1ac37f8e6a4a59662ab2c01a80c94ebe33"/><section>
    <title>lib_paths</title>
<indexterm><primary>lib_paths</primary><secondary>exp_AHC.Expander</secondary></indexterm>
<indexterm><primary>exp_AHC.Expander</primary><secondary>lib_paths</secondary></indexterm>
<para><computeroutput>exp_AHC.Expander.lib_paths = lib_paths</computeroutput></para><para>
 <link linkend="_exp___a_h_c_8py_source">exp_AHC.py</link> の <link linkend="_exp___a_h_c_8py_source_1l00075">75</link> 行目に定義があります。</para>
</section>
<para>
このクラス詳解は次のファイルから抽出されました:</para>
kyopro_tools/<link linkend="_exp___a_h_c_8py">exp_AHC.py</link></section>
</section>
