<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_cumulative__sum__2d_8hpp_source" xml:lang="ja">
<title>cumulative_sum_2d.hpp</title>
<indexterm><primary>data_structure/cumulative_sum_2d.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00002"/>00002 
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;2次元累積和</emphasis>
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@tparam&#32;T&#32;群</emphasis>
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00005"/>00005 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00006"/><link linkend="_struct_cumulative_sum2_d">00006</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_cumulative_sum2_d">CumulativeSum2D</link>&#32;{
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00007"/><link linkend="_struct_cumulative_sum2_d_1aa68421d4767aa66b8546d90ecd602bf3">00007</link> &#32;&#32;&#32;&#32;<link linkend="_struct_cumulative_sum2_d_1aa68421d4767aa66b8546d90ecd602bf3">CumulativeSum2D</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00008"/>00008 
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;v&#32;から2次元累積和を構築する</emphasis>
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00011"/><link linkend="_struct_cumulative_sum2_d_1a0c031b219413ba2284d6c3cf4ecb5a0d">00011</link> &#32;&#32;&#32;&#32;<link linkend="_struct_cumulative_sum2_d_1a0c031b219413ba2284d6c3cf4ecb5a0d">CumulativeSum2D</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;vector&lt;U&gt;&gt;&amp;&#32;v)&#32;{
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n=v.size(),m=v.front().size();
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dat.assign(n+1,vector&lt;T&gt;(m+1));
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(j,m)&#32;dat[i+1][j+1]=dat[i][j+1]+dat[i+1][j]-dat[i][j]+v[i][j];
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00016"/>00016 
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;矩形領域&#32;[l,&#32;r)&#32;×&#32;[u,&#32;d)&#32;の和を求める</emphasis>
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00018"/><link linkend="_struct_cumulative_sum2_d_1a30ae612dead6c43be533a6bfd112a78e">00018</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_cumulative_sum2_d_1a30ae612dead6c43be533a6bfd112a78e">sum</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;<emphasis role="keywordtype">int</emphasis>&#32;u,&#32;<emphasis role="keywordtype">int</emphasis>&#32;d)&#32;{
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dat[r][d]-dat[l][d]-dat[r][u]+dat[l][u];
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00021"/>00021 
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00022"/>00022 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,m;
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;vector&lt;vector&lt;T&gt;&gt;&#32;dat;
<anchor xml:id="_cumulative__sum__2d_8hpp_source_1l00025"/>00025 };
</programlisting></section>
