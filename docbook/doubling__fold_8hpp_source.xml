<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_doubling__fold_8hpp_source" xml:lang="ja">
<title>doubling_fold.hpp</title>
<indexterm><primary>algorithm/doubling_fold.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_doubling__fold_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00002"/>00002 
<anchor xml:id="_doubling__fold_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;ダブリング（モノイド合成）</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@tparam&#32;Monoid&#32;合成するモノイド</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00005"/>00005 <emphasis role="comment">///&#32;@tparam&#32;Log&#32;ダブリングの深さ</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00006"/>00006 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Monoid,&#32;<emphasis role="keywordtype">int</emphasis>&#32;Log&gt;
<anchor xml:id="_doubling__fold_8hpp_source_1l00007"/><link linkend="_struct_doubling_fold">00007</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_doubling_fold">DoublingFold</link>&#32;{
<anchor xml:id="_doubling__fold_8hpp_source_1l00008"/><link linkend="_struct_doubling_fold_1a2fac53adf611f062e7c40d5f28a398b8">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Type=<emphasis role="keyword">typename</emphasis>&#32;Monoid::Type;
<anchor xml:id="_doubling__fold_8hpp_source_1l00009"/><link linkend="_struct_doubling_fold_1a04df85dc1028af6ecca7e1d00d60b4ed">00009</link> &#32;&#32;&#32;&#32;<link linkend="_struct_doubling_fold_1a04df85dc1028af6ecca7e1d00d60b4ed">DoublingFold</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_doubling__fold_8hpp_source_1l00010"/>00010 
<anchor xml:id="_doubling__fold_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;コンストラクタ</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@param&#32;p&#32;各頂点の遷移先</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@param&#32;v&#32;各頂点の値</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;O(N&#32;Log)</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00015"/><link linkend="_struct_doubling_fold_1a7326be1879b679c77c45571fef4d4083">00015</link> &#32;&#32;&#32;&#32;<link linkend="_struct_doubling_fold_1a7326be1879b679c77c45571fef4d4083">DoublingFold</link>(<emphasis role="keyword">const</emphasis>&#32;VI&amp;&#32;p,&#32;<emphasis role="keyword">const</emphasis>&#32;vector&lt;Type&gt;&amp;&#32;v)&#32;{
<anchor xml:id="_doubling__fold_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=p.size();
<anchor xml:id="_doubling__fold_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dat.assign(Log+1,&#32;vector&lt;Type&gt;(n,Monoid::id()));
<anchor xml:id="_doubling__fold_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nxt.assign(Log+1,&#32;VI(n));
<anchor xml:id="_doubling__fold_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&lt;n;&#32;i++)&#32;dat[0][i]=v[i],nxt[0][i]=p[i];
<anchor xml:id="_doubling__fold_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=1;&#32;i&lt;=Log;&#32;i++)&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&lt;n;&#32;j++)&#32;{
<anchor xml:id="_doubling__fold_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nxt[i][j]=nxt[i-1][nxt[i-1][j]];
<anchor xml:id="_doubling__fold_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dat[i][j]=Monoid::op(dat[i-1][j],&#32;dat[i-1][nxt[i-1][j]]);
<anchor xml:id="_doubling__fold_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_doubling__fold_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="_doubling__fold_8hpp_source_1l00025"/>00025 
<anchor xml:id="_doubling__fold_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;モノイド積</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;頂点&#32;start&#32;から&#32;k&#32;回遷移したときのモノイド積を返す</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;O(Log)</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00029"/><link linkend="_struct_doubling_fold_1a8351c3419c2041117f47e80436506010">00029</link> &#32;&#32;&#32;&#32;Type&#32;<link linkend="_struct_doubling_fold_1a8351c3419c2041117f47e80436506010">fold</link>(<emphasis role="keywordtype">int</emphasis>&#32;start,&#32;ll&#32;k)&#32;{
<anchor xml:id="_doubling__fold_8hpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;ret=&#32;Monoid::id();
<anchor xml:id="_doubling__fold_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;b=0;&#32;k&gt;0;&#32;b++,k&gt;&gt;=1)&#32;<emphasis role="keywordflow">if</emphasis>(k&amp;1)&#32;{
<anchor xml:id="_doubling__fold_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret=Monoid::op(ret,dat[b][start]);
<anchor xml:id="_doubling__fold_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;start=nxt[b][start];
<anchor xml:id="_doubling__fold_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_doubling__fold_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_doubling__fold_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="_doubling__fold_8hpp_source_1l00037"/>00037 
<anchor xml:id="_doubling__fold_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;頂点&#32;start&#32;から&#32;k&#32;回遷移した先の頂点を返す</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;O(Log)</emphasis>
<anchor xml:id="_doubling__fold_8hpp_source_1l00040"/><link linkend="_struct_doubling_fold_1afd50a59ab1f2ab56d585b7896e444e65">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_doubling_fold_1afd50a59ab1f2ab56d585b7896e444e65">next</link>(<emphasis role="keywordtype">int</emphasis>&#32;start,&#32;ll&#32;k)&#32;{
<anchor xml:id="_doubling__fold_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;b=0;&#32;k&gt;0;&#32;b++,k&gt;&gt;=1)&#32;<emphasis role="keywordflow">if</emphasis>(k&amp;1)&#32;start=nxt[b][start];
<anchor xml:id="_doubling__fold_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;start;
<anchor xml:id="_doubling__fold_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="_doubling__fold_8hpp_source_1l00044"/>00044 
<anchor xml:id="_doubling__fold_8hpp_source_1l00045"/>00045 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_doubling__fold_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;vector&lt;vector&lt;Type&gt;&gt;&#32;dat;
<anchor xml:id="_doubling__fold_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;VVI&#32;nxt;
<anchor xml:id="_doubling__fold_8hpp_source_1l00048"/>00048 };
</programlisting></section>
