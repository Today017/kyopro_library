<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_euler__tour_8hpp_source" xml:lang="ja">
<title>euler_tour.hpp</title>
<indexterm><primary>graph/tree/euler_tour.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_euler__tour_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_euler__tour_8hpp_source_1l00002"/>00002 
<anchor xml:id="_euler__tour_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;木&#32;g&#32;をオイラーツアーする</emphasis>
<anchor xml:id="_euler__tour_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@brief&#32;`(行きがけ順,&#32;深さ,&#32;入力時刻,&#32;出力時刻)`&#32;を返す</emphasis>
<anchor xml:id="_euler__tour_8hpp_source_1l00005"/>00005 <emphasis role="comment">///&#32;@details&#32;部分木のクエリを列のに対する区間クエリとして扱えるようになる</emphasis>
<anchor xml:id="_euler__tour_8hpp_source_1l00006"/>00006 <emphasis role="comment">///&#32;@details&#32;例えば、頂点&#32;v&#32;の部分木はオイラーツアー後の列の区間&#32;`[in[v],&#32;out[v])`&#32;に対応する</emphasis>
<anchor xml:id="_euler__tour_8hpp_source_1l00007"/><link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">00007</link> <link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">tuple</link>&lt;<link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">VI</link>,<link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">VI</link>,<link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">VI</link>,<link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">VI</link>&gt;&#32;<link linkend="_euler__tour_8hpp_1abc7c32c2db93c045641d59915090307c">EulerTour</link>(<emphasis role="keyword">const</emphasis>&#32;VVI&amp;&#32;g)&#32;{
<anchor xml:id="_euler__tour_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=g.size();
<anchor xml:id="_euler__tour_8hpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;VI&#32;tour,depth(n),in(n),out(n);
<anchor xml:id="_euler__tour_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;time=0;
<anchor xml:id="_euler__tour_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;dfs=[&amp;](<emphasis role="keyword">auto</emphasis>&amp;&amp;&#32;dfs,&#32;<emphasis role="keywordtype">int</emphasis>&#32;now,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pre,&#32;<emphasis role="keywordtype">int</emphasis>&#32;d)-&gt;&#32;<emphasis role="keywordtype">void</emphasis>&#32;{
<anchor xml:id="_euler__tour_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;depth[now]=d;
<anchor xml:id="_euler__tour_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in[now]=time++;
<anchor xml:id="_euler__tour_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tour.push_back(now);
<anchor xml:id="_euler__tour_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;nxt:g[now])&#32;<emphasis role="keywordflow">if</emphasis>(nxt!=pre)&#32;dfs(dfs,nxt,now,d+1);
<anchor xml:id="_euler__tour_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[now]=time;
<anchor xml:id="_euler__tour_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;};
<anchor xml:id="_euler__tour_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;dfs(dfs,0,-1,0);
<anchor xml:id="_euler__tour_8hpp_source_1l00019"/>00019 
<anchor xml:id="_euler__tour_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{tour,depth,in,out};
<anchor xml:id="_euler__tour_8hpp_source_1l00021"/>00021 }
</programlisting></section>
