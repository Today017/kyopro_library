<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_exp___a_h_c_8py_source" xml:lang="ja">
<title>exp_AHC.py</title>
<indexterm><primary>kyopro_tools/exp_AHC.py</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_exp___a_h_c_8py_source_1l00001"/><link linkend="_namespaceexp___a_h_c_1a1fa3fa2d43ea82ba06dce2ab903b6914">00001</link> HEAD&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00002"/><link linkend="_namespaceexp___a_h_c_1a046c7d4b7d969df4c762e1ce5d2df23e">00002</link> CONST&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00003"/>00003 
<anchor xml:id="_exp___a_h_c_8py_source_1l00004"/>00004 <emphasis role="comment">#!/usr/bin/env&#32;python3</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00005"/>00005 
<anchor xml:id="_exp___a_h_c_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;https://github.com/atcoder/ac-library/blob/master/expander.py&#32;のコードを元にしています。</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00007"/>00007 
<anchor xml:id="_exp___a_h_c_8py_source_1l00008"/>00008 <emphasis role="keyword">import</emphasis>&#32;re
<anchor xml:id="_exp___a_h_c_8py_source_1l00009"/>00009 <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_exp___a_h_c_8py_source_1l00010"/>00010 <emphasis role="keyword">import</emphasis>&#32;argparse
<anchor xml:id="_exp___a_h_c_8py_source_1l00011"/>00011 <emphasis role="keyword">from</emphasis>&#32;logging&#32;<emphasis role="keyword">import</emphasis>&#32;Logger,&#32;basicConfig,&#32;getLogger
<anchor xml:id="_exp___a_h_c_8py_source_1l00012"/>00012 <emphasis role="keyword">from</emphasis>&#32;os&#32;<emphasis role="keyword">import</emphasis>&#32;getenv,&#32;environ,&#32;pathsep
<anchor xml:id="_exp___a_h_c_8py_source_1l00013"/>00013 <emphasis role="keyword">from</emphasis>&#32;pathlib&#32;<emphasis role="keyword">import</emphasis>&#32;Path
<anchor xml:id="_exp___a_h_c_8py_source_1l00014"/>00014 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;List,&#32;Set,&#32;Optional
<anchor xml:id="_exp___a_h_c_8py_source_1l00015"/>00015 
<anchor xml:id="_exp___a_h_c_8py_source_1l00016"/>00016 
<anchor xml:id="_exp___a_h_c_8py_source_1l00017"/><link linkend="_namespaceexp___a_h_c_1afbeeb12428b503330c49865684d5f524">00017</link> logger&#32;=&#32;getLogger(__name__)&#32;&#32;<emphasis role="comment">#&#32;type:&#32;Logger</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00018"/>00018 
<anchor xml:id="_exp___a_h_c_8py_source_1l00019"/>00019 
<anchor xml:id="_exp___a_h_c_8py_source_1l00020"/>00020 
<anchor xml:id="_exp___a_h_c_8py_source_1l00021"/><link linkend="_classexp___a_h_c_1_1_expander">00021</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexp___a_h_c_1_1_expander">Expander</link>:
<anchor xml:id="_exp___a_h_c_8py_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Expander&#32;class&#32;is&#32;responsible&#32;for&#32;expanding&#32;libraries&#32;in&#32;the&#32;source&#32;code.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00024"/>00024 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;include&#32;(re.Pattern):&#32;Regular&#32;expression&#32;pattern&#32;to&#32;match&#32;#include&#32;statements.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;lib_paths&#32;(List[Path]):&#32;List&#32;of&#32;library&#32;paths.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00028"/>00028 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;included&#32;(Set[Path]):&#32;Set&#32;of&#32;included&#32;library&#32;file&#32;paths.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00029"/>00029 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Methods:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;is_ignored_line(line:&#32;str)&#32;-&gt;&#32;bool:&#32;Checks&#32;if&#32;a&#32;line&#32;should&#32;be&#32;ignored&#32;during&#32;expansion.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;find_library(library_name:&#32;str)&#32;-&gt;&#32;Path:&#32;Finds&#32;the&#32;path&#32;of&#32;a&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00033"/>00033 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;expand_library(library_file_path:&#32;Path)&#32;-&gt;&#32;List[str]:&#32;Expands&#32;a&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00034"/>00034 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;-&#32;expand(source:&#32;str)&#32;-&gt;&#32;str:&#32;Expands&#32;libraries&#32;in&#32;the&#32;source&#32;code.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00035"/>00035 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00036"/>00036 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00037"/>00037 
<anchor xml:id="_exp___a_h_c_8py_source_1l00038"/><link linkend="_classexp___a_h_c_1_1_expander_1ad98d41b559c60f5c5566583afdbf4350">00038</link> &#32;&#32;&#32;&#32;include&#32;=&#32;re.compile(<emphasis role="stringliteral">r&apos;#include\s*[&quot;&lt;](kyopro_library/[a-z0-9_/]*(|.hpp))[&quot;&gt;]\s*&apos;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00039"/>00039 
<anchor xml:id="_exp___a_h_c_8py_source_1l00040"/><link linkend="_classexp___a_h_c_1_1_expander_1a2f06c5c8a096ea1d6bacb43670751399">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexp___a_h_c_1_1_expander_1a2f06c5c8a096ea1d6bacb43670751399">is_ignored_line</link>(self,&#32;line)&#32;-&gt;&#32;bool:
<anchor xml:id="_exp___a_h_c_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00042"/>00042 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Checks&#32;if&#32;a&#32;line&#32;should&#32;be&#32;ignored&#32;during&#32;expansion.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00043"/>00043 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00044"/>00044 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00045"/>00045 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;line&#32;(str):&#32;The&#32;line&#32;to&#32;be&#32;checked.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00046"/>00046 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00047"/>00047 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00048"/>00048 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;bool:&#32;True&#32;if&#32;the&#32;line&#32;should&#32;be&#32;ignored,&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00049"/>00049 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00050"/>00050 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;line.strip()&#32;==&#32;<emphasis role="stringliteral">&quot;#pragma&#32;once&quot;</emphasis>:
<anchor xml:id="_exp___a_h_c_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#if&#32;line.strip().startswith(&quot;//&quot;):</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;return&#32;True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;line.strip().startswith(<emphasis role="stringliteral">&quot;using&#32;std::&quot;</emphasis>):
<anchor xml:id="_exp___a_h_c_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;line.strip()&#32;<emphasis role="keywordflow">in</emphasis>&#32;[<emphasis role="stringliteral">&quot;#ifdef&#32;LOCAL&quot;</emphasis>,<emphasis role="stringliteral">&quot;#include&#32;\&quot;./debug.hpp\&quot;&quot;</emphasis>,<emphasis role="stringliteral">&quot;#else&quot;</emphasis>,<emphasis role="stringliteral">&quot;#define&#32;debug(...)&quot;</emphasis>,<emphasis role="stringliteral">&quot;#define&#32;print_line&quot;</emphasis>,<emphasis role="stringliteral">&quot;#endif&quot;</emphasis>]&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;HEAD:
<anchor xml:id="_exp___a_h_c_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;line.strip()&#32;<emphasis role="keywordflow">in</emphasis>&#32;[<emphasis role="stringliteral">&quot;const&#32;int&#32;INF=1e9+10;&quot;</emphasis>,<emphasis role="stringliteral">&quot;const&#32;ll&#32;INFL=4e18;&quot;</emphasis>]&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;CONST:
<anchor xml:id="_exp___a_h_c_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00061"/>00061 
<anchor xml:id="_exp___a_h_c_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_exp___a_h_c_8py_source_1l00063"/>00063 
<anchor xml:id="_exp___a_h_c_8py_source_1l00064"/>00064 
<anchor xml:id="_exp___a_h_c_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00066"/>00066 
<anchor xml:id="_exp___a_h_c_8py_source_1l00067"/><link linkend="_classexp___a_h_c_1_1_expander_1a9754b60461b5d76a41f2b1ff325a5037">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexp___a_h_c_1_1_expander_1a9754b60461b5d76a41f2b1ff325a5037">__init__</link>(self,&#32;lib_paths:&#32;List[Path]):
<anchor xml:id="_exp___a_h_c_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00069"/>00069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;Expander&#32;object.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00070"/>00070 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00071"/>00071 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00072"/>00072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;lib_paths&#32;(List[Path]):&#32;List&#32;of&#32;library&#32;paths.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00073"/>00073 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00074"/>00074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00075"/><link linkend="_classexp___a_h_c_1_1_expander_1ac37f8e6a4a59662ab2c01a80c94ebe33">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1ac37f8e6a4a59662ab2c01a80c94ebe33">lib_paths</link>&#32;=&#32;lib_paths
<anchor xml:id="_exp___a_h_c_8py_source_1l00076"/>00076 
<anchor xml:id="_exp___a_h_c_8py_source_1l00077"/><link linkend="_classexp___a_h_c_1_1_expander_1a2e602d36bc1ed17bcd2b31bb17128fef">00077</link> &#32;&#32;&#32;&#32;included&#32;=&#32;set()&#32;&#32;<emphasis role="comment">#&#32;type:&#32;Set[Path]</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00078"/>00078 
<anchor xml:id="_exp___a_h_c_8py_source_1l00079"/><link linkend="_classexp___a_h_c_1_1_expander_1a88b7a38dd0ece6deb5c2918f63619c4d">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexp___a_h_c_1_1_expander_1a88b7a38dd0ece6deb5c2918f63619c4d">find_library</link>(self,&#32;library_name:&#32;str)&#32;-&gt;&#32;Path:
<anchor xml:id="_exp___a_h_c_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Finds&#32;the&#32;path&#32;of&#32;a&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00082"/>00082 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;library_name&#32;(str):&#32;The&#32;name&#32;of&#32;the&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00085"/>00085 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Path:&#32;The&#32;path&#32;of&#32;the&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00088"/>00088 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00089"/>00089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00090"/>00090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;FileNotFoundError:&#32;If&#32;the&#32;library&#32;file&#32;cannot&#32;be&#32;found.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00091"/>00091 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00092"/>00092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;lib_path&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1ac37f8e6a4a59662ab2c01a80c94ebe33">lib_paths</link>:
<anchor xml:id="_exp___a_h_c_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;path&#32;=&#32;lib_path&#32;/&#32;library_name
<anchor xml:id="_exp___a_h_c_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;path.exists():
<anchor xml:id="_exp___a_h_c_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;path
<anchor xml:id="_exp___a_h_c_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.error(<emphasis role="stringliteral">&quot;cannot&#32;find:&#32;{}&quot;</emphasis>.<link linkend="_namespaceexp___a_h_c_1a4f54ce99252ab9adf71581134b630a08">format</link>(library_name))
<anchor xml:id="_exp___a_h_c_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;FileNotFoundError()
<anchor xml:id="_exp___a_h_c_8py_source_1l00099"/>00099 
<anchor xml:id="_exp___a_h_c_8py_source_1l00100"/><link linkend="_classexp___a_h_c_1_1_expander_1a3acdb0ba487cfef451ee66eb598b8185">00100</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexp___a_h_c_1_1_expander_1a3acdb0ba487cfef451ee66eb598b8185">expand_library</link>(self,&#32;library_file_path:&#32;Path)&#32;-&gt;&#32;List[str]:
<anchor xml:id="_exp___a_h_c_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Expands&#32;a&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00103"/>00103 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00104"/>00104 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00105"/>00105 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;library_file_path&#32;(Path):&#32;The&#32;path&#32;of&#32;the&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00106"/>00106 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00107"/>00107 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00108"/>00108 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;List[str]:&#32;The&#32;expanded&#32;lines&#32;of&#32;the&#32;library&#32;file.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00109"/>00109 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00110"/>00110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;library_file_path&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1a2e602d36bc1ed17bcd2b31bb17128fef">included</link>:
<anchor xml:id="_exp___a_h_c_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&quot;already&#32;included:&#32;{}&quot;</emphasis>.<link linkend="_namespaceexp___a_h_c_1a4f54ce99252ab9adf71581134b630a08">format</link>(library_file_path.name))
<anchor xml:id="_exp___a_h_c_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[]
<anchor xml:id="_exp___a_h_c_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1a2e602d36bc1ed17bcd2b31bb17128fef">included</link>.add(library_file_path)
<anchor xml:id="_exp___a_h_c_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&quot;include:&#32;{}&quot;</emphasis>.<link linkend="_namespaceexp___a_h_c_1a4f54ce99252ab9adf71581134b630a08">format</link>(library_file_path.name))
<anchor xml:id="_exp___a_h_c_8py_source_1l00116"/>00116 
<anchor xml:id="_exp___a_h_c_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;library_source&#32;=&#32;open(str(library_file_path)).read()
<anchor xml:id="_exp___a_h_c_8py_source_1l00118"/>00118 
<anchor xml:id="_exp___a_h_c_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;[]&#32;&#32;<emphasis role="comment">#&#32;type:&#32;List[str]</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;line&#32;<emphasis role="keywordflow">in</emphasis>&#32;library_source.splitlines():
<anchor xml:id="_exp___a_h_c_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1a2f06c5c8a096ea1d6bacb43670751399">is_ignored_line</link>(line):
<anchor xml:id="_exp___a_h_c_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00123"/>00123 
<anchor xml:id="_exp___a_h_c_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line&#32;=&#32;line.replace(<emphasis role="stringliteral">&quot;../../../../&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line&#32;=&#32;line.replace(<emphasis role="stringliteral">&quot;../../../&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line&#32;=&#32;line.replace(<emphasis role="stringliteral">&quot;../../&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;line&#32;=&#32;line.replace(&quot;../&quot;,&#32;&quot;&quot;)</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00128"/>00128 
<anchor xml:id="_exp___a_h_c_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;if&#32;&quot;debug&quot;&#32;in&#32;line:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;line&#32;=&#32;&quot;//&quot;&#32;+&#32;line</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;if&#32;&quot;print_line&quot;&#32;in&#32;line:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;line&#32;=&#32;&quot;//&quot;&#32;+&#32;line</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00133"/>00133 
<anchor xml:id="_exp___a_h_c_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1ad98d41b559c60f5c5566583afdbf4350">include</link>.match(line)
<anchor xml:id="_exp___a_h_c_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;m:
<anchor xml:id="_exp___a_h_c_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;m.group(1)
<anchor xml:id="_exp___a_h_c_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.extend(self.<link linkend="_classexp___a_h_c_1_1_expander_1a3acdb0ba487cfef451ee66eb598b8185">expand_library</link>(self.<link linkend="_classexp___a_h_c_1_1_expander_1a88b7a38dd0ece6deb5c2918f63619c4d">find_library</link>(name)))
<anchor xml:id="_exp___a_h_c_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00139"/>00139 
<anchor xml:id="_exp___a_h_c_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.append(line)
<anchor xml:id="_exp___a_h_c_8py_source_1l00141"/>00141 
<anchor xml:id="_exp___a_h_c_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.append(<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result
<anchor xml:id="_exp___a_h_c_8py_source_1l00144"/>00144 
<anchor xml:id="_exp___a_h_c_8py_source_1l00145"/><link linkend="_classexp___a_h_c_1_1_expander_1aa1b5a3cab7b3393f6a62597a32907164">00145</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexp___a_h_c_1_1_expander_1aa1b5a3cab7b3393f6a62597a32907164">expand</link>(self,&#32;source:&#32;str)&#32;-&gt;&#32;str:
<anchor xml:id="_exp___a_h_c_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00147"/>00147 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Expands&#32;libraries&#32;in&#32;the&#32;source&#32;code.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00148"/>00148 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;source&#32;(str):&#32;The&#32;source&#32;code&#32;to&#32;be&#32;expanded.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00151"/>00151 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00152"/>00152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00153"/>00153 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;str:&#32;The&#32;expanded&#32;source&#32;code.</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00154"/>00154 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00155"/>00155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1a2e602d36bc1ed17bcd2b31bb17128fef">included</link>&#32;=&#32;set()
<anchor xml:id="_exp___a_h_c_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;[]&#32;&#32;<emphasis role="comment">#&#32;type:&#32;List[str]</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;line&#32;<emphasis role="keywordflow">in</emphasis>&#32;source.splitlines():
<anchor xml:id="_exp___a_h_c_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1ad98d41b559c60f5c5566583afdbf4350">include</link>.match(line)
<anchor xml:id="_exp___a_h_c_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;m:
<anchor xml:id="_exp___a_h_c_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acl_path&#32;=&#32;self.<link linkend="_classexp___a_h_c_1_1_expander_1a88b7a38dd0ece6deb5c2918f63619c4d">find_library</link>(m.group(1))
<anchor xml:id="_exp___a_h_c_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.extend(self.<link linkend="_classexp___a_h_c_1_1_expander_1a3acdb0ba487cfef451ee66eb598b8185">expand_library</link>(acl_path))
<anchor xml:id="_exp___a_h_c_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00164"/>00164 
<anchor xml:id="_exp___a_h_c_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;HEAD:
<anchor xml:id="_exp___a_h_c_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="stringliteral">&quot;debug&quot;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;line&#32;<emphasis role="keywordflow">or</emphasis>&#32;<emphasis role="stringliteral">&quot;print_line&quot;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;line:
<anchor xml:id="_exp___a_h_c_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_exp___a_h_c_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;if&#32;line.startswith(&quot;ll&#32;&quot;)&#32;or&#32;&quot;&#32;ll&#32;&quot;&#32;in&#32;line&#32;or&#32;&quot;(ll)&quot;&#32;in&#32;line&#32;or&#32;&quot;&lt;ll&gt;&quot;&#32;in&#32;line&#32;or&#32;&quot;ll,&quot;&#32;in&#32;line&#32;or&#32;&quot;,ll&quot;&#32;in&#32;line:</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;line=line.replace(&quot;ll&quot;,&quot;long&#32;long&quot;)</emphasis>
<anchor xml:id="_exp___a_h_c_8py_source_1l00171"/>00171 
<anchor xml:id="_exp___a_h_c_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.append(line)
<anchor xml:id="_exp___a_h_c_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>.join(result)
<anchor xml:id="_exp___a_h_c_8py_source_1l00174"/>00174 
<anchor xml:id="_exp___a_h_c_8py_source_1l00175"/>00175 
<anchor xml:id="_exp___a_h_c_8py_source_1l00176"/>00176 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&quot;__main__&quot;</emphasis>:
<anchor xml:id="_exp___a_h_c_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;basicConfig(
<anchor xml:id="_exp___a_h_c_8py_source_1l00178"/><link linkend="_namespaceexp___a_h_c_1a4f54ce99252ab9adf71581134b630a08">00178</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;format=<emphasis role="stringliteral">&quot;%(asctime)s&#32;[%(levelname)s]&#32;%(message)s&quot;</emphasis>,
<anchor xml:id="_exp___a_h_c_8py_source_1l00179"/><link linkend="_namespaceexp___a_h_c_1ad7c1f64571c786c0280691daca4bc579">00179</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datefmt=<emphasis role="stringliteral">&quot;%H:%M:%S&quot;</emphasis>,
<anchor xml:id="_exp___a_h_c_8py_source_1l00180"/><link linkend="_namespaceexp___a_h_c_1ad33b0eacdcbb8e8ebe1eab08c1d2e69b">00180</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;level=getenv(<emphasis role="stringliteral">&quot;LOG_LEVEL&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>),
<anchor xml:id="_exp___a_h_c_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;)
<anchor xml:id="_exp___a_h_c_8py_source_1l00182"/><link linkend="_namespaceexp___a_h_c_1ab112e54267b9174264d2a0cb26575186">00182</link> &#32;&#32;&#32;&#32;parser&#32;=&#32;argparse.ArgumentParser(description=<emphasis role="stringliteral">&quot;Expander&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00183"/><link linkend="_namespaceexp___a_h_c_1a288be580909793668e78f56c6cfedf2b">00183</link> &#32;&#32;&#32;&#32;parser.add_argument(<emphasis role="stringliteral">&quot;source&quot;</emphasis>,&#32;help=<emphasis role="stringliteral">&quot;Source&#32;File&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00184"/><link linkend="_namespaceexp___a_h_c_1a0dc89f52545ee1c7d8dc54edd2a11596">00184</link> &#32;&#32;&#32;&#32;parser.add_argument(<emphasis role="stringliteral">&quot;-c&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;--console&quot;</emphasis>,&#32;action=<emphasis role="stringliteral">&quot;store_true&quot;</emphasis>,&#32;help=<emphasis role="stringliteral">&quot;Print&#32;to&#32;Console&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;parser.add_argument(<emphasis role="stringliteral">&quot;--lib&quot;</emphasis>,&#32;help=<emphasis role="stringliteral">&quot;Path&#32;to&#32;Atcoder&#32;Library&quot;</emphasis>)
<anchor xml:id="_exp___a_h_c_8py_source_1l00186"/><link linkend="_namespaceexp___a_h_c_1a5b862bf4d73db06f61fbea47eb4191ab">00186</link> &#32;&#32;&#32;&#32;opts&#32;=&#32;parser.parse_args()
<anchor xml:id="_exp___a_h_c_8py_source_1l00187"/>00187 
<anchor xml:id="_exp___a_h_c_8py_source_1l00188"/><link linkend="_namespaceexp___a_h_c_1a11ce0b4adf63fab77f026b51f3909a7d">00188</link> &#32;&#32;&#32;&#32;lib_paths&#32;=&#32;[]
<anchor xml:id="_exp___a_h_c_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;opts.lib:
<anchor xml:id="_exp___a_h_c_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lib_paths.append(Path(opts.lib))
<anchor xml:id="_exp___a_h_c_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="stringliteral">&quot;CPLUS_INCLUDE_PATH&quot;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;environ:
<anchor xml:id="_exp___a_h_c_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lib_paths.extend(
<anchor xml:id="_exp___a_h_c_8py_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;map(Path,&#32;filter(<emphasis role="keywordtype">None</emphasis>,&#32;environ[<emphasis role="stringliteral">&quot;CPLUS_INCLUDE_PATH&quot;</emphasis>].split(pathsep)))
<anchor xml:id="_exp___a_h_c_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_exp___a_h_c_8py_source_1l00195"/>00195 &#32;&#32;&#32;&#32;lib_paths.append(Path.cwd())
<anchor xml:id="_exp___a_h_c_8py_source_1l00196"/><link linkend="_namespaceexp___a_h_c_1a5148e3153d23a86619ee6e2c4f73ce75">00196</link> &#32;&#32;&#32;&#32;expander&#32;=&#32;<link linkend="_classexp___a_h_c_1_1_expander">Expander</link>(lib_paths)
<anchor xml:id="_exp___a_h_c_8py_source_1l00197"/><link linkend="_namespaceexp___a_h_c_1acf93965763ecde414f94e2c88522aa37">00197</link> &#32;&#32;&#32;&#32;source&#32;=&#32;open(opts.source).read()
<anchor xml:id="_exp___a_h_c_8py_source_1l00198"/><link linkend="_namespaceexp___a_h_c_1a457a0d581f95d86a9f477df462790829">00198</link> &#32;&#32;&#32;&#32;output&#32;=&#32;expander.expand(source)
<anchor xml:id="_exp___a_h_c_8py_source_1l00199"/>00199 
<anchor xml:id="_exp___a_h_c_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;opts.console:
<anchor xml:id="_exp___a_h_c_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(output)
<anchor xml:id="_exp___a_h_c_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_exp___a_h_c_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(<emphasis role="stringliteral">&quot;main.cpp&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;w&quot;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;f:
<anchor xml:id="_exp___a_h_c_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f.write(output)
<anchor xml:id="_exp___a_h_c_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(<emphasis role="stringliteral">&quot;combined.cpp&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;w&quot;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;f:
<anchor xml:id="_exp___a_h_c_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f.write(output)
<anchor xml:id="_exp___a_h_c_8py_source_1l00207"/>00207 
</programlisting></section>
