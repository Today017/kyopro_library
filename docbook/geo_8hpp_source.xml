<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_geo_8hpp_source" xml:lang="ja">
<title>geo.hpp</title>
<indexterm><primary>geometry/geo.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_geo_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00002"/>00002 
<anchor xml:id="_geo_8hpp_source_1l00003"/><link linkend="_namespace_geometry">00003</link> <emphasis role="keyword">namespace</emphasis>&#32;<link linkend="_namespace_geometry">Geometry</link>{
<anchor xml:id="_geo_8hpp_source_1l00004"/><link linkend="_namespace_geometry_1aa4fd942614eba4a1561c5a22278a1bcc">00004</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Real=<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00005"/><link linkend="_namespace_geometry_1a5494489f2d60001b10aca658fedef5c5">00005</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Real&#32;<link linkend="_namespace_geometry_1a5494489f2d60001b10aca658fedef5c5">EPS</link>=1e-9;
<anchor xml:id="_geo_8hpp_source_1l00006"/>00006 
<anchor xml:id="_geo_8hpp_source_1l00007"/><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link>(Real&#32;a,Real&#32;b){<emphasis role="keywordflow">return</emphasis>&#32;abs(a-b)&lt;<link linkend="_namespace_geometry_1a5494489f2d60001b10aca658fedef5c5">EPS</link>;}
<anchor xml:id="_geo_8hpp_source_1l00008"/><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link>(Real&#32;a,Real&#32;b){<emphasis role="keywordflow">return</emphasis>&#32;a&lt;b&amp;&amp;!<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>a<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>b<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00009"/><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">00009</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">greaterThan</link>(Real&#32;a,Real&#32;b){<emphasis role="keywordflow">return</emphasis>&#32;a&gt;b&amp;&amp;!<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>a<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>b<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00010"/><link linkend="_namespace_geometry_1aaa93b6715f377d2ef8ba44c79d98641c">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1aaa93b6715f377d2ef8ba44c79d98641c">lessThanOrEqual</link>(Real&#32;a,Real&#32;b){<emphasis role="keywordflow">return</emphasis>&#32;a&lt;b||<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>a<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>b<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00011"/><link linkend="_namespace_geometry_1a48301418052e96f2270cbc235c91e9c7">00011</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a48301418052e96f2270cbc235c91e9c7">greaterThanOrEqual</link>(Real&#32;a,Real&#32;b){<emphasis role="keywordflow">return</emphasis>&#32;a&gt;b||<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>a<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>b<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00012"/>00012 
<anchor xml:id="_geo_8hpp_source_1l00013"/><link linkend="_struct_geometry_1_1_point">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>{
<anchor xml:id="_geo_8hpp_source_1l00014"/><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">00014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>;
<anchor xml:id="_geo_8hpp_source_1l00015"/><link linkend="_struct_geometry_1_1_point_1a4f13c735dc56a362ea0165cc993a5bdd">00015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point_1a4f13c735dc56a362ea0165cc993a5bdd">Point</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00016"/><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">Point</link>(Real&#32;x,Real&#32;y):<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>(x),<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>(y){}
<anchor xml:id="_geo_8hpp_source_1l00017"/><link linkend="_struct_geometry_1_1_point_1af313934c1e048db82efdaee14ab0844b">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_struct_geometry_1_1_point_1af313934c1e048db82efdaee14ab0844b">operator</link>+(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>+p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00018"/><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">operator</link>-(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00019"/><link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">operator</link>*(Real&#32;k)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*k<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*k<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00020"/><link linkend="_struct_geometry_1_1_point_1a19e7f3176a2f93c3a0347266066dfd9e">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_struct_geometry_1_1_point_1a19e7f3176a2f93c3a0347266066dfd9e">operator</link>/(Real&#32;k)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>/k<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>/k<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00021"/><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>;}
<anchor xml:id="_geo_8hpp_source_1l00022"/><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>;}
<anchor xml:id="_geo_8hpp_source_1l00023"/><link linkend="_struct_geometry_1_1_point_1af920478ca39ffd1bad37d4ede4b3c037">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1af920478ca39ffd1bad37d4ede4b3c037">cross</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p2)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>(p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)*(p2<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)-(p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(p2<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>);}
<anchor xml:id="_geo_8hpp_source_1l00024"/><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">norm</link>()<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>;}
<anchor xml:id="_geo_8hpp_source_1l00025"/><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link>()<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;sqrt(<link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">norm</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">(</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">)</link>);}
<anchor xml:id="_geo_8hpp_source_1l00026"/><link linkend="_struct_geometry_1_1_point_1a1729c4329f9453a3cd2806cafb5d54c3">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_point_1a1729c4329f9453a3cd2806cafb5d54c3">arg</link>()<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;atan2(<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>);}
<anchor xml:id="_geo_8hpp_source_1l00027"/><link linkend="_struct_geometry_1_1_point_1abceed0f8bd56215ac72a181686ef82c0">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_geometry_1_1_point_1abceed0f8bd56215ac72a181686ef82c0">operator</link>==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>&amp;&amp;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00028"/><link linkend="_struct_geometry_1_1_point_1a62a9dba76e0deead938d503015f856d3">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_struct_geometry_1_1_point_1a62a9dba76e0deead938d503015f856d3">istream</link>&amp;<link linkend="_struct_geometry_1_1_point_1a62a9dba76e0deead938d503015f856d3">operator</link>&gt;&gt;(istream&amp;is,<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){<emphasis role="keywordflow">return</emphasis>&#32;is&gt;&gt;p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>&gt;&gt;p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>;}
<anchor xml:id="_geo_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;};
<anchor xml:id="_geo_8hpp_source_1l00030"/>00030 
<anchor xml:id="_geo_8hpp_source_1l00031"/><link linkend="_struct_geometry_1_1_line">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>{
<anchor xml:id="_geo_8hpp_source_1l00032"/><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">00032</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>,<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>;
<anchor xml:id="_geo_8hpp_source_1l00033"/><link linkend="_struct_geometry_1_1_line_1adf96128626b67044e81ceefcb8200955">00033</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1adf96128626b67044e81ceefcb8200955">Line</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00034"/><link linkend="_struct_geometry_1_1_line_1adbd13c9fb4116428fb0c709b85665913">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1adbd13c9fb4116428fb0c709b85665913">Line</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;_a,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;_b):<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>(_a),<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>(_b){}
<anchor xml:id="_geo_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Ax+By=C</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00036"/><link linkend="_struct_geometry_1_1_line_1acd633e2aa86b9783a5928a4a6d0ac71d">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1acd633e2aa86b9783a5928a4a6d0ac71d">Line</link>(<emphasis role="keyword">const</emphasis>&#32;Real&amp;A,<emphasis role="keyword">const</emphasis>&#32;Real&amp;B,<emphasis role="keyword">const</emphasis>&#32;Real&amp;C){
<anchor xml:id="_geo_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>A<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(!<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>B<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>0<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>C/B<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>1<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>C/B<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>B<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>C/A<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>0<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>C/A<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>1<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>C<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>0<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>C/B<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>1<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>(C-A)/B<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>0<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>C/B<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>=<link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>C/A<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>0<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00052"/><link linkend="_struct_geometry_1_1_line_1aea48a257bc3c9bed360894873e9ead59">00052</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_geometry_1_1_line_1aea48a257bc3c9bed360894873e9ead59">operator</link>==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1abceed0f8bd56215ac72a181686ef82c0">==</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>&amp;&amp;<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1abceed0f8bd56215ac72a181686ef82c0">==</link>l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>;}
<anchor xml:id="_geo_8hpp_source_1l00053"/><link linkend="_struct_geometry_1_1_line_1a43274759669f85ec40b45733f753fd6a">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_struct_geometry_1_1_line_1a43274759669f85ec40b45733f753fd6a">istream</link>&amp;<link linkend="_struct_geometry_1_1_line_1a43274759669f85ec40b45733f753fd6a">operator</link>&gt;&gt;(istream&amp;is,<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l){<emphasis role="keywordflow">return</emphasis>&#32;is&gt;&gt;l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>&gt;&gt;l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>;}
<anchor xml:id="_geo_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;};
<anchor xml:id="_geo_8hpp_source_1l00055"/>00055 
<anchor xml:id="_geo_8hpp_source_1l00056"/><link linkend="_struct_geometry_1_1_segment">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>:<link linkend="_struct_geometry_1_1_line">Line</link>{
<anchor xml:id="_geo_8hpp_source_1l00057"/><link linkend="_struct_geometry_1_1_segment_1a6fc16db84ce3ca748da204b294135a16">00057</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_segment_1a6fc16db84ce3ca748da204b294135a16">Segment</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>::Line;
<anchor xml:id="_geo_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;};
<anchor xml:id="_geo_8hpp_source_1l00060"/>00060 
<anchor xml:id="_geo_8hpp_source_1l00061"/><link linkend="_struct_geometry_1_1_circle">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>{
<anchor xml:id="_geo_8hpp_source_1l00062"/><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link>;
<anchor xml:id="_geo_8hpp_source_1l00063"/><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00064"/><link linkend="_struct_geometry_1_1_circle_1ae2792daa2742d54317c58d62309b47db">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_circle_1ae2792daa2742d54317c58d62309b47db">Circle</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00065"/><link linkend="_struct_geometry_1_1_circle_1a0d68df3bf040a3ebc59045dd86f5e700">00065</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_circle_1a0d68df3bf040a3ebc59045dd86f5e700">Circle</link>(Real&#32;x,Real&#32;y,Real&#32;r):<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>x<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>y<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>,<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>(r){}
<anchor xml:id="_geo_8hpp_source_1l00066"/><link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">Circle</link>(<link linkend="_struct_geometry_1_1_point">Point</link>&#32;_center,Real&#32;r):<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link>(_center),<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>(r){}
<anchor xml:id="_geo_8hpp_source_1l00067"/><link linkend="_struct_geometry_1_1_circle_1a318ce8385f862858ea1c514f2e4072be">00067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle_1a318ce8385f862858ea1c514f2e4072be">operator</link>==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;C)<emphasis role="keyword">const</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1abceed0f8bd56215ac72a181686ef82c0">==</link>C<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link>&amp;&amp;<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>==C<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;}
<anchor xml:id="_geo_8hpp_source_1l00068"/><link linkend="_struct_geometry_1_1_circle_1a7e26473c97b7315692a436c83da32ed7">00068</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle_1a7e26473c97b7315692a436c83da32ed7">istream</link>&amp;<link linkend="_struct_geometry_1_1_circle_1a7e26473c97b7315692a436c83da32ed7">operator</link>&gt;&gt;(istream&amp;is,<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;C){<emphasis role="keywordflow">return</emphasis>&#32;is&gt;&gt;C<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link>&gt;&gt;C<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;}
<anchor xml:id="_geo_8hpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;};
<anchor xml:id="_geo_8hpp_source_1l00070"/>00070 
<anchor xml:id="_geo_8hpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00072"/>00072 
<anchor xml:id="_geo_8hpp_source_1l00073"/><link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7a">00073</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7a">Orientation</link>{
<anchor xml:id="_geo_8hpp_source_1l00074"/><link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa9ee68053af2b51d26deccd98f7581852">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa9ee68053af2b51d26deccd98f7581852">COUNTER_CLOCKWISE</link>,
<anchor xml:id="_geo_8hpp_source_1l00075"/><link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aafeb0cf07471b0c303bf376921b7ee74d">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aafeb0cf07471b0c303bf376921b7ee74d">CLOCKWISE</link>,
<anchor xml:id="_geo_8hpp_source_1l00076"/><link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aaaf694be04cbb5099b3ec9e09452b7f40">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aaaf694be04cbb5099b3ec9e09452b7f40">ONLINE_BACK</link>,
<anchor xml:id="_geo_8hpp_source_1l00077"/><link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aab31051d17a91a5f0c8f85661108de6ad">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aab31051d17a91a5f0c8f85661108de6ad">ONLINE_FRONT</link>,
<anchor xml:id="_geo_8hpp_source_1l00078"/><link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa7a0770b341c8bab4860005af2e32db19">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa7a0770b341c8bab4860005af2e32db19">ON_SEGMENT</link>
<anchor xml:id="_geo_8hpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;};
<anchor xml:id="_geo_8hpp_source_1l00080"/><link linkend="_namespace_geometry_1a68f1a8a27e6074ca5dae6b151a765cb3">00080</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7a">Orientation</link>&#32;<link linkend="_namespace_geometry_1a68f1a8a27e6074ca5dae6b151a765cb3">ccw</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p0,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p2){
<anchor xml:id="_geo_8hpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;a=p1<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p0;
<anchor xml:id="_geo_8hpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;b=p2<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p0;
<anchor xml:id="_geo_8hpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cross_product=a<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>b<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">greaterThan</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">(</link>cross_product<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">,</link>0<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa9ee68053af2b51d26deccd98f7581852">COUNTER_CLOCKWISE</link>;
<anchor xml:id="_geo_8hpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>cross_product<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>0<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aafeb0cf07471b0c303bf376921b7ee74d">CLOCKWISE</link>;
<anchor xml:id="_geo_8hpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>a<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>b<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>0<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aaaf694be04cbb5099b3ec9e09452b7f40">ONLINE_BACK</link>;
<anchor xml:id="_geo_8hpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>a<link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">.</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">norm</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">(</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">)</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>b<link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">.</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">norm</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">(</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">)</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aab31051d17a91a5f0c8f85661108de6ad">ONLINE_FRONT</link>;
<anchor xml:id="_geo_8hpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa7a0770b341c8bab4860005af2e32db19">ON_SEGMENT</link>;
<anchor xml:id="_geo_8hpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00090"/><link linkend="_namespace_geometry_1a9bb98900b14f9cd763b7c5e958a868c8">00090</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1a9bb98900b14f9cd763b7c5e958a868c8">string</link>&#32;<link linkend="_namespace_geometry_1a9bb98900b14f9cd763b7c5e958a868c8">orientationToString</link>(<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7a">Orientation</link>&#32;o){
<anchor xml:id="_geo_8hpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(o){
<anchor xml:id="_geo_8hpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa9ee68053af2b51d26deccd98f7581852">COUNTER_CLOCKWISE</link>:
<anchor xml:id="_geo_8hpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis><emphasis role="stringliteral">&quot;COUNTER_CLOCKWISE&quot;</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aafeb0cf07471b0c303bf376921b7ee74d">CLOCKWISE</link>:
<anchor xml:id="_geo_8hpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis><emphasis role="stringliteral">&quot;CLOCKWISE&quot;</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aaaf694be04cbb5099b3ec9e09452b7f40">ONLINE_BACK</link>:
<anchor xml:id="_geo_8hpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis><emphasis role="stringliteral">&quot;ONLINE_BACK&quot;</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aab31051d17a91a5f0c8f85661108de6ad">ONLINE_FRONT</link>:
<anchor xml:id="_geo_8hpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis><emphasis role="stringliteral">&quot;ONLINE_FRONT&quot;</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aa7a0770b341c8bab4860005af2e32db19">ON_SEGMENT</link>:
<anchor xml:id="_geo_8hpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis><emphasis role="stringliteral">&quot;ON_SEGMENT&quot;</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_geo_8hpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis><emphasis role="stringliteral">&quot;UNKNOWN&quot;</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00106"/><link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">00106</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">projection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p2,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;base=p2<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p1;
<anchor xml:id="_geo_8hpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;r=(p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p1)<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>base<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link>/base<link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">.</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">norm</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">(</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p1<link linkend="_struct_geometry_1_1_point_1af313934c1e048db82efdaee14ab0844b">+</link>base<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">*</link>r;
<anchor xml:id="_geo_8hpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00111"/><link linkend="_namespace_geometry_1a6459f2465325d059e045db0c357253a0">00111</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_namespace_geometry_1a6459f2465325d059e045db0c357253a0">projection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;base=l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;r=(p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>base<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link>/base<link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">.</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">norm</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">(</link><link linkend="_struct_geometry_1_1_point_1a81f8b8ce71c902bb0207d058920e6ef3">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1af313934c1e048db82efdaee14ab0844b">+</link>base<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">*</link>r;
<anchor xml:id="_geo_8hpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00116"/><link linkend="_namespace_geometry_1a401f2efd71755a4e3dc7cc4b3a60762e">00116</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_namespace_geometry_1a401f2efd71755a4e3dc7cc4b3a60762e">reflection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p2,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;proj=<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">projection</link><link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">(</link>p1<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">,</link>p2<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">,</link>p<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;proj<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">*</link>2<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p;
<anchor xml:id="_geo_8hpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00120"/><link linkend="_namespace_geometry_1a3cdefdb1ec92d44cf07f06dfdd4f4be8">00120</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_namespace_geometry_1a3cdefdb1ec92d44cf07f06dfdd4f4be8">reflection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;proj=<link linkend="_namespace_geometry_1a6459f2465325d059e045db0c357253a0">projection</link><link linkend="_namespace_geometry_1a6459f2465325d059e045db0c357253a0">(</link>l<link linkend="_namespace_geometry_1a6459f2465325d059e045db0c357253a0">,</link>p<link linkend="_namespace_geometry_1a6459f2465325d059e045db0c357253a0">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;proj<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">*</link>2<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p;
<anchor xml:id="_geo_8hpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00124"/>00124 
<anchor xml:id="_geo_8hpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00126"/>00126 
<anchor xml:id="_geo_8hpp_source_1l00127"/><link linkend="_namespace_geometry_1a5905c3b472de2209f9fa39119da309d0">00127</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a5905c3b472de2209f9fa39119da309d0">isParallel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00128"/><link linkend="_namespace_geometry_1abfda3f3ff79f9b2f8d6a9d7052ecb770">00128</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1abfda3f3ff79f9b2f8d6a9d7052ecb770">isOrthogonal</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00129"/><link linkend="_namespace_geometry_1ab794a4baaf90b7e2308f67ef18c8aaef">00129</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1ab794a4baaf90b7e2308f67ef18c8aaef">isParallel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00130"/><link linkend="_namespace_geometry_1a529832026f1ac3e2b14cfb6b41e9c1af">00130</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a529832026f1ac3e2b14cfb6b41e9c1af">isOrthogonal</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00131"/><link linkend="_namespace_geometry_1a205dd318a5b496f3a02afc0b026003e1">00131</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a205dd318a5b496f3a02afc0b026003e1">isParallel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00132"/><link linkend="_namespace_geometry_1a1ad29186e135cf0fe0f6e80e526882f5">00132</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a1ad29186e135cf0fe0f6e80e526882f5">isOrthogonal</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00133"/><link linkend="_namespace_geometry_1a0791c792e98411c4960aa26e165c8f21">00133</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a0791c792e98411c4960aa26e165c8f21">isParallel</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00134"/><link linkend="_namespace_geometry_1a03322a671b1a773f7de3971fdb222bd4">00134</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a03322a671b1a773f7de3971fdb222bd4">isOrthogonal</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;l1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l2){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">.</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">dot</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">(</link>l2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1ab17c1525afa5688443c09963ce5512bf">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00135"/><link linkend="_namespace_geometry_1a8613d484a8c0b5d6d603592a11190c67">00135</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a8613d484a8c0b5d6d603592a11190c67">isPointOnLine</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l){<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0.0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;}
<anchor xml:id="_geo_8hpp_source_1l00136"/><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">00136</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s){
<anchor xml:id="_geo_8hpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lessThanOrEqual(min(s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>),p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)&amp;&amp;
<anchor xml:id="_geo_8hpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lessThanOrEqual(p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,max(s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>))&amp;&amp;
<anchor xml:id="_geo_8hpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lessThanOrEqual(min(s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>),p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)&amp;&amp;
<anchor xml:id="_geo_8hpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lessThanOrEqual(p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,max(s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>))&amp;&amp;
<anchor xml:id="_geo_8hpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>(s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0.0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00143"/><link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">00143</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">isIntersecting</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s2){
<anchor xml:id="_geo_8hpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p0p1=s1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p0p2=s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p0p3=s2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p2p3=s2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p2p0=s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p2p1=s1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d1=p0p1<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p0p2<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d2=p0p1<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p0p3<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d3=p2p3<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p2p0<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d4=p2p3<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p2p1<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>d1*d2<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>0<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>&amp;&amp;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>d3*d4<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>0<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d1<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0.0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>&amp;&amp;<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">(</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">,</link>s1<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d2<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0.0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>&amp;&amp;<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">(</link>s2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">,</link>s1<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d3<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0.0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>&amp;&amp;<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">(</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">,</link>s2<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d4<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0.0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>&amp;&amp;<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">(</link>s1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">,</link>s2<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00161"/><link linkend="_namespace_geometry_1a774399dc2bebae37aabf1a46750ee6c7">00161</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;<link linkend="_namespace_geometry_1a774399dc2bebae37aabf1a46750ee6c7">getIntersection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s2){
<anchor xml:id="_geo_8hpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">isIntersecting</link><link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">(</link>s1<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">,</link>s2<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;cross=[](<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p,<link linkend="_struct_geometry_1_1_point">Point</link>&#32;q){<emphasis role="keywordflow">return</emphasis>&#32;p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*q<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*q<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>;};
<anchor xml:id="_geo_8hpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;base=s2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>;
<anchor xml:id="_geo_8hpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d1=abs(cross(base,s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>-s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>));
<anchor xml:id="_geo_8hpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d2=abs(cross(base,s1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>-s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>));
<anchor xml:id="_geo_8hpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;t=d1/(d1+d2);
<anchor xml:id="_geo_8hpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1af313934c1e048db82efdaee14ab0844b">+</link>(s1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">*</link>t;
<anchor xml:id="_geo_8hpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00170"/><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">00170</link> &#32;&#32;&#32;&#32;Real&#32;<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">distancePointToSegment</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s){
<anchor xml:id="_geo_8hpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;proj=<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">projection</link><link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">(</link>s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">,</link>s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">,</link>p<link linkend="_namespace_geometry_1a350e7c66a3052218fb10273521646a5a">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">(</link>proj<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">,</link>s<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>proj)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;min((p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>,(p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>s<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00178"/><link linkend="_namespace_geometry_1a255834d9deeba16697273e0471248c87">00178</link> &#32;&#32;&#32;&#32;Real&#32;<link linkend="_namespace_geometry_1a255834d9deeba16697273e0471248c87">distanceSegmentToSegment</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s2){
<anchor xml:id="_geo_8hpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">isIntersecting</link><link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">(</link>s1<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">,</link>s2<link linkend="_namespace_geometry_1afd1aee161954f89e741e6873568fd1d8">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;0.0;
<anchor xml:id="_geo_8hpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;min(
<anchor xml:id="_geo_8hpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">distancePointToSegment</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">(</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">,</link>s2<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">)</link>,<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">distancePointToSegment</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">(</link>s1<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">,</link>s2<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">)</link>,
<anchor xml:id="_geo_8hpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">distancePointToSegment</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">(</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">,</link>s1<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">)</link>,<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">distancePointToSegment</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">(</link>s2<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">,</link>s1<link linkend="_namespace_geometry_1a4a8de96e1f3bf3f804c773c80c2f3a25">)</link>});
<anchor xml:id="_geo_8hpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00184"/>00184 
<anchor xml:id="_geo_8hpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00186"/>00186 
<anchor xml:id="_geo_8hpp_source_1l00187"/><link linkend="_namespace_geometry_1a9c5e5ffd70ed15d3ce03c6f5b69524df">00187</link> &#32;&#32;&#32;&#32;Real&#32;<link linkend="_namespace_geometry_1a9c5e5ffd70ed15d3ce03c6f5b69524df">getPolygonArea</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;Point&gt;&amp;points){
<anchor xml:id="_geo_8hpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=points.size();
<anchor xml:id="_geo_8hpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;area=0.0;
<anchor xml:id="_geo_8hpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=(i+1)%n;
<anchor xml:id="_geo_8hpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area+=points[i].x*points[j].y;
<anchor xml:id="_geo_8hpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area-=points[i].y*points[j].x;
<anchor xml:id="_geo_8hpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;abs(area)/2.0;
<anchor xml:id="_geo_8hpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00197"/><link linkend="_namespace_geometry_1ab9bf3d0fb49fb3cccd08e2905e1ffce6">00197</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1ab9bf3d0fb49fb3cccd08e2905e1ffce6">isConvex</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;Point&gt;&amp;points){
<anchor xml:id="_geo_8hpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=points.size();
<anchor xml:id="_geo_8hpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;has_positive=<emphasis role="keyword">false</emphasis>,has_negative=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=(i+1)%n;
<anchor xml:id="_geo_8hpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k=(i+2)%n;
<anchor xml:id="_geo_8hpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;a=points[j]-points[i];
<anchor xml:id="_geo_8hpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;b=points[k]-points[j];
<anchor xml:id="_geo_8hpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cross_product=a<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>b<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">greaterThan</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">(</link>cross_product<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">,</link>0<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">)</link>)has_positive=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>cross_product<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>0<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>)has_negative=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>!(has_positive&amp;&amp;has_negative);
<anchor xml:id="_geo_8hpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00211"/><link linkend="_namespace_geometry_1ad8a7fbcb1e7ddafa0ec0d42800d90164">00211</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1ad8a7fbcb1e7ddafa0ec0d42800d90164">isPointOnPolygon</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;Point&gt;&amp;polygon,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=polygon.size();
<anchor xml:id="_geo_8hpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;a=polygon[i];
<anchor xml:id="_geo_8hpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;b=polygon[(i+1)%n];
<anchor xml:id="_geo_8hpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&#32;s(a,b);
<anchor xml:id="_geo_8hpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">isPointOnSegment</link><link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">(</link>p<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">,</link>s<link linkend="_namespace_geometry_1abcf022a48d43025f1b3f91dda172ca2b">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00221"/><link linkend="_namespace_geometry_1a48aa32d46955c3cf80e1c37676edf4a6">00221</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_geometry_1a48aa32d46955c3cf80e1c37676edf4a6">isPointInsidePolygon</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;Point&gt;&amp;polygon,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=polygon.size();
<anchor xml:id="_geo_8hpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;inPolygon=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;a=polygon[i];
<anchor xml:id="_geo_8hpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;b=polygon[(i+1)%n];
<anchor xml:id="_geo_8hpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">greaterThan</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">(</link>a<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">,</link>b<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">)</link>)swap(a,b);
<anchor xml:id="_geo_8hpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1aaa93b6715f377d2ef8ba44c79d98641c">lessThanOrEqual</link><link linkend="_namespace_geometry_1aaa93b6715f377d2ef8ba44c79d98641c">(</link>a<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1aaa93b6715f377d2ef8ba44c79d98641c">,</link>p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1aaa93b6715f377d2ef8ba44c79d98641c">)</link>&amp;&amp;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>b<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>&amp;&amp;<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">greaterThan</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">(</link>(b<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>a)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>a<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">,</link>0<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">)</link>)inPolygon=!inPolygon;
<anchor xml:id="_geo_8hpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;inPolygon;
<anchor xml:id="_geo_8hpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00232"/>00232 
<anchor xml:id="_geo_8hpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00234"/>00234 
<anchor xml:id="_geo_8hpp_source_1l00235"/><link linkend="_namespace_geometry_1af7466d8b7624193a11c59f8e0558d8ad">00235</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1af7466d8b7624193a11c59f8e0558d8ad">vector</link>&lt;<link linkend="_namespace_geometry_1af7466d8b7624193a11c59f8e0558d8ad">Point</link>&gt;<link linkend="_namespace_geometry_1af7466d8b7624193a11c59f8e0558d8ad">convexHull</link>(vector&lt;Point&gt;&amp;points,<emphasis role="keywordtype">bool</emphasis>&#32;include_collinear=<emphasis role="keyword">false</emphasis>){
<anchor xml:id="_geo_8hpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=points.size();
<anchor xml:id="_geo_8hpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n&lt;=1)<emphasis role="keywordflow">return</emphasis>&#32;points;
<anchor xml:id="_geo_8hpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sort(points.begin(),points.end(),[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;l,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;r)-&gt;<emphasis role="keywordtype">bool</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>l<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>r<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>l<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>r<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>l<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>r<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="_geo_8hpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n==2)<emphasis role="keywordflow">return</emphasis>&#32;points;
<anchor xml:id="_geo_8hpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Point&gt;upper={points[0],points[1]},lower={points[0],points[1]};
<anchor xml:id="_geo_8hpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=2;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((<emphasis role="keywordtype">int</emphasis>)upper.size()&gt;=2&amp;&amp;ccw(upper.end()[-2],upper.end()[-1],points[i])!=<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aafeb0cf07471b0c303bf376921b7ee74d">CLOCKWISE</link>){
<anchor xml:id="_geo_8hpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ccw(upper.end()[-2],upper.end()[-1],points[i])==<link linkend="_namespace_geometry_1ac6833944045520a63bc44de0c261aa7aab31051d17a91a5f0c8f85661108de6ad">ONLINE_FRONT</link>&amp;&amp;include_collinear)<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper.pop_back();
<anchor xml:id="_geo_8hpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper.push_back(points[i]);
<anchor xml:id="_geo_8hpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((<emphasis role="keywordtype">int</emphasis>)lower.size()&gt;=2&amp;&amp;ccw(lower.end()[-2],lower.end()[-1],points[i])!=COUNTER_CLOCKWISE){
<anchor xml:id="_geo_8hpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ccw(lower.end()[-2],lower.end()[-1],points[i])==ONLINE_FRONT&amp;&amp;include_collinear)<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower.pop_back();
<anchor xml:id="_geo_8hpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower.push_back(points[i]);
<anchor xml:id="_geo_8hpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reverse(upper.begin(),upper.end());
<anchor xml:id="_geo_8hpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper.pop_back();
<anchor xml:id="_geo_8hpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower.pop_back();
<anchor xml:id="_geo_8hpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower.insert(lower.end(),upper.begin(),upper.end());
<anchor xml:id="_geo_8hpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lower;
<anchor xml:id="_geo_8hpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00262"/><link linkend="_namespace_geometry_1a737b89d779a2c60bc146439342e24769">00262</link> &#32;&#32;&#32;&#32;Real&#32;<link linkend="_namespace_geometry_1a737b89d779a2c60bc146439342e24769">convexHullDiameter</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;Point&gt;&amp;hull){
<anchor xml:id="_geo_8hpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=hull.size();
<anchor xml:id="_geo_8hpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n==1)<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_geo_8hpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k=1;
<anchor xml:id="_geo_8hpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;max_dist=0;
<anchor xml:id="_geo_8hpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>){
<anchor xml:id="_geo_8hpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=(k+1)%n;
<anchor xml:id="_geo_8hpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;dist1=hull[i]-hull[j],dist2=hull[i]-hull[k];
<anchor xml:id="_geo_8hpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_dist=max(max_dist,dist1<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_dist=max(max_dist,dist2<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(dist1<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>&gt;dist2<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k=j;
<anchor xml:id="_geo_8hpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;dist=hull[i]-hull[k];
<anchor xml:id="_geo_8hpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_dist=max(max_dist,dist<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;max_dist;
<anchor xml:id="_geo_8hpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00284"/><link linkend="_namespace_geometry_1a200dbcd1585ae4b59217590a4f86c135">00284</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1a200dbcd1585ae4b59217590a4f86c135">vector</link>&lt;<link linkend="_namespace_geometry_1a200dbcd1585ae4b59217590a4f86c135">Point</link>&gt;<link linkend="_namespace_geometry_1a200dbcd1585ae4b59217590a4f86c135">cutPolygon</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;Point&gt;&amp;g,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_line">Line</link>&amp;l){
<anchor xml:id="_geo_8hpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;isLeft=[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p2,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p)-&gt;<emphasis role="keywordtype">bool</emphasis>{<emphasis role="keywordflow">return</emphasis>(p2<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p1)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>p1<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>&gt;0;};
<anchor xml:id="_geo_8hpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Point&gt;newPolygon;
<anchor xml:id="_geo_8hpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=g.size();
<anchor xml:id="_geo_8hpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;n;++i){
<anchor xml:id="_geo_8hpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;cur=g[i];
<anchor xml:id="_geo_8hpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;next=g[(i+1)%n];
<anchor xml:id="_geo_8hpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(isLeft(l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>,l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>,cur))newPolygon.push_back(cur);
<anchor xml:id="_geo_8hpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((isLeft(l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>,l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>,cur)&amp;&amp;!isLeft(l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>,l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link>b,next))||(!isLeft(l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>,l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link>,cur)&amp;&amp;isLeft(l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>,l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link>b,next))){
<anchor xml:id="_geo_8hpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;A1=(next<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>cur)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>cur<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;A2=(next<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>cur)<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">.</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">cross</link><link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">(</link>l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>cur<link linkend="_struct_geometry_1_1_point_1a0ddff0422405796c7a964360bb022f5c">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;intersection=l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1af313934c1e048db82efdaee14ab0844b">+</link>(l<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>l<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link>)<link linkend="_struct_geometry_1_1_point_1a7a98ffe237923ca61f6cc0320ab168f1">*</link>(A1/(A1-A2));
<anchor xml:id="_geo_8hpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newPolygon.push_back(intersection);
<anchor xml:id="_geo_8hpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newPolygon;
<anchor xml:id="_geo_8hpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00301"/>00301 
<anchor xml:id="_geo_8hpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00303"/>00303 
<anchor xml:id="_geo_8hpp_source_1l00304"/><link linkend="_namespace_geometry_1a5b1e16827da06a6b3f3ce3875b3f216d">00304</link> &#32;&#32;&#32;&#32;Real&#32;<link linkend="_namespace_geometry_1a5b1e16827da06a6b3f3ce3875b3f216d">closestPair</link>(vector&lt;Point&gt;&amp;points,<emphasis role="keywordtype">int</emphasis>&#32;l,<emphasis role="keywordtype">int</emphasis>&#32;r){
<anchor xml:id="_geo_8hpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(r-l&lt;=1)<emphasis role="keywordflow">return</emphasis>&#32;numeric_limits&lt;Real&gt;::max();
<anchor xml:id="_geo_8hpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mid=(l+r)&gt;&gt;1;
<anchor xml:id="_geo_8hpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x=points[mid].x;
<anchor xml:id="_geo_8hpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d=min(closestPair(points,l,mid),closestPair(points,mid,r));
<anchor xml:id="_geo_8hpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;iti=points.begin(),itl=iti+l,itm=iti+mid,itr=iti+r;
<anchor xml:id="_geo_8hpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inplace_merge(itl,itm,itr,[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;lhs,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;rhs)-&gt;<emphasis role="keywordtype">bool</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>lhs<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>rhs<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="_geo_8hpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Point&gt;nearLine;
<anchor xml:id="_geo_8hpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=l;i&lt;r;++i){
<anchor xml:id="_geo_8hpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(greaterThanOrEqual(fabs(points[i].x-x),d))<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz=nearLine.size();
<anchor xml:id="_geo_8hpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j=sz-1;j&gt;=0;--j){
<anchor xml:id="_geo_8hpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;dv=points[i]-nearLine[j];
<anchor xml:id="_geo_8hpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(dv<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>&gt;=d)<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d=min(d,dv<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>);
<anchor xml:id="_geo_8hpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nearLine.push_back(points[i]);
<anchor xml:id="_geo_8hpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d;
<anchor xml:id="_geo_8hpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00326"/>00326 
<anchor xml:id="_geo_8hpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00328"/>00328 
<anchor xml:id="_geo_8hpp_source_1l00329"/><link linkend="_namespace_geometry_1a25c84d2aafb07dd03188112b3c9b69e5">00329</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_geometry_1a25c84d2aafb07dd03188112b3c9b69e5">countIntersections</link>(vector&lt;Segment&gt;segments){
<anchor xml:id="_geo_8hpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;Event{
<anchor xml:id="_geo_8hpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x;
<anchor xml:id="_geo_8hpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;type;<emphasis role="comment">//0:horizontal&#32;start,1:vertical,2:horizontal&#32;end</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;y1,y2;
<anchor xml:id="_geo_8hpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Event(Real&#32;x,<emphasis role="keywordtype">int</emphasis>&#32;type,Real&#32;y1,Real&#32;y2):x(x),type(type),y1(y1),y2(y2){}
<anchor xml:id="_geo_8hpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&lt;(<emphasis role="keyword">const</emphasis>&#32;Event&amp;other)<emphasis role="keyword">const</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(x==other.x)<emphasis role="keywordflow">return</emphasis>&#32;type&lt;other.type;
<anchor xml:id="_geo_8hpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x&lt;other.x;
<anchor xml:id="_geo_8hpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_geo_8hpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Event&gt;events;
<anchor xml:id="_geo_8hpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sort(segments.begin(),segments.end(),[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;lhs,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;rhs)-&gt;<emphasis role="keywordtype">bool</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lessThan(min(lhs<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,lhs<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>),min(rhs<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,rhs<link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">.</link><link linkend="_struct_geometry_1_1_line_1a84c6695c3de1f9dee943074a86889359">b</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>));
<anchor xml:id="_geo_8hpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="_geo_8hpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;seg:segments){
<anchor xml:id="_geo_8hpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(seg.a.y==seg.b.y){
<anchor xml:id="_geo_8hpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Horizontal&#32;segment</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;y=seg.a.y;
<anchor xml:id="_geo_8hpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x1=min(seg.a.x,seg.b.x);
<anchor xml:id="_geo_8hpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x2=max(seg.a.x,seg.b.x);
<anchor xml:id="_geo_8hpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;events.emplace_back(x1,0,y,y);
<anchor xml:id="_geo_8hpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;events.emplace_back(x2,2,y,y);
<anchor xml:id="_geo_8hpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Vertical&#32;segment</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x=seg.a.x;
<anchor xml:id="_geo_8hpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;y1=min(seg.a.y,seg.b.y);
<anchor xml:id="_geo_8hpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;y2=max(seg.a.y,seg.b.y);
<anchor xml:id="_geo_8hpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;events.emplace_back(x,1,y1,y2);
<anchor xml:id="_geo_8hpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sort(events.begin(),events.end());
<anchor xml:id="_geo_8hpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set&lt;Real&gt;activeSegments;
<anchor xml:id="_geo_8hpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;intersectionCount=0;
<anchor xml:id="_geo_8hpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;event:events){
<anchor xml:id="_geo_8hpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(event.type==0){
<anchor xml:id="_geo_8hpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Add&#32;horizontal&#32;segment&#32;to&#32;active&#32;set</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;activeSegments.insert(event.y1);
<anchor xml:id="_geo_8hpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(event.type==2){
<anchor xml:id="_geo_8hpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Remove&#32;horizontal&#32;segment&#32;from&#32;active&#32;set</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;activeSegments.erase(event.y1);
<anchor xml:id="_geo_8hpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(event.type==1){
<anchor xml:id="_geo_8hpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Count&#32;intersections&#32;with&#32;vertical&#32;segment</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;lower=activeSegments.lower_bound(event.y1);
<anchor xml:id="_geo_8hpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;upper=activeSegments.upper_bound(event.y2);
<anchor xml:id="_geo_8hpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersectionCount+=distance(lower,upper);
<anchor xml:id="_geo_8hpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;intersectionCount;
<anchor xml:id="_geo_8hpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00379"/>00379 
<anchor xml:id="_geo_8hpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00381"/>00381 
<anchor xml:id="_geo_8hpp_source_1l00382"/><link linkend="_namespace_geometry_1a160a3cda4bb1f308ae9166489d7b2f2d">00382</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_geometry_1a160a3cda4bb1f308ae9166489d7b2f2d">countCirclesIntersection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c2){
<anchor xml:id="_geo_8hpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d=sqrt((c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)*(c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)+
<anchor xml:id="_geo_8hpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>));
<anchor xml:id="_geo_8hpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;r1=c1<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>,r2=c2<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">greaterThan</link><link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">(</link>d<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">,</link>r1+r2<link linkend="_namespace_geometry_1a85801ae240703892e050e65ebc1f97eb">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;4;
<anchor xml:id="_geo_8hpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>r1+r2<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
<anchor xml:id="_geo_8hpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(d,fabs(r1-r2))){
<anchor xml:id="_geo_8hpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="_geo_8hpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(almostEqual(d,fabs(r1-r2))){
<anchor xml:id="_geo_8hpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_geo_8hpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_geo_8hpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00398"/><link linkend="_namespace_geometry_1a6e29a04c787ae3404a41b0782b06b436">00398</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&#32;<link linkend="_namespace_geometry_1a6e29a04c787ae3404a41b0782b06b436">getInCircle</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;A,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;B,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;C){
<anchor xml:id="_geo_8hpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;a=(B<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>C)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;b=(A<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>C)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;c=(A<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>B)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;s=(a+b+c)/2;
<anchor xml:id="_geo_8hpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;area=sqrt(s*(s-a)*(s-b)*(s-c));
<anchor xml:id="_geo_8hpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;r=area/s;
<anchor xml:id="_geo_8hpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx=(a*A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+b*B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+c*C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)/(a+b+c);
<anchor xml:id="_geo_8hpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cy=(a*A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>+b*B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>+c*C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)/(a+b+c);
<anchor xml:id="_geo_8hpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link><link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">{</link><link linkend="_struct_geometry_1_1_point">Point</link><link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>cx<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>cy<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link><link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">,</link>r<link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">}</link>;
<anchor xml:id="_geo_8hpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00409"/><link linkend="_namespace_geometry_1a5f10ad69ef666ea0a18e57b09dfc1aca">00409</link> &#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&#32;<link linkend="_namespace_geometry_1a5f10ad69ef666ea0a18e57b09dfc1aca">getCircumCircle</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;A,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;B,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;C){
<anchor xml:id="_geo_8hpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;D=2*(A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*(B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)+B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*(C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)+C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*(A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>));
<anchor xml:id="_geo_8hpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;Ux=((A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)+(B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)+(C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>))/D;
<anchor xml:id="_geo_8hpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;Uy=((A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*A<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)+(B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*B<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>)+(C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>*C<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>*C<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>)*(B<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-A<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>))/D;
<anchor xml:id="_geo_8hpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;center<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>Ux<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>Uy<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;radius=(center<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>A)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link><link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">{</link>center<link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">,</link>radius<link linkend="_struct_geometry_1_1_circle_1a96003c23fef9b4bf305728137661f907">}</link>;
<anchor xml:id="_geo_8hpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00417"/><link linkend="_namespace_geometry_1aea8002cf252acca8ca329b77f17d4e5c">00417</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1aea8002cf252acca8ca329b77f17d4e5c">vector</link>&lt;<link linkend="_namespace_geometry_1aea8002cf252acca8ca329b77f17d4e5c">Point</link>&gt;<link linkend="_namespace_geometry_1aea8002cf252acca8ca329b77f17d4e5c">getCircleLineIntersection</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c,<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p1,<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p2){
<anchor xml:id="_geo_8hpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx=c<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,cy=c<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,r=c<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;dx=p2<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>;
<anchor xml:id="_geo_8hpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;dy=p2<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>;
<anchor xml:id="_geo_8hpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;a=dx*dx+dy*dy;
<anchor xml:id="_geo_8hpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;b=2*(dx*(p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-cx)+dy*(p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-cy));
<anchor xml:id="_geo_8hpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;c_const=(p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-cx)*(p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>-cx)+(p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-cy)*(p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>-cy)-r*r;
<anchor xml:id="_geo_8hpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;discriminant=b*b-4*a*c_const;
<anchor xml:id="_geo_8hpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Point&gt;intersections;
<anchor xml:id="_geo_8hpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>discriminant<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;t=-b/(2*a);
<anchor xml:id="_geo_8hpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;ix=p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+t*dx;
<anchor xml:id="_geo_8hpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;iy=p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>+t*dy;
<anchor xml:id="_geo_8hpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersections.emplace_back(ix,iy);
<anchor xml:id="_geo_8hpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersections.emplace_back(ix,iy);
<anchor xml:id="_geo_8hpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(discriminant&gt;0){
<anchor xml:id="_geo_8hpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;sqrt_discriminant=sqrt(discriminant);
<anchor xml:id="_geo_8hpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;t1=(-b+sqrt_discriminant)/(2*a);
<anchor xml:id="_geo_8hpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;t2=(-b-sqrt_discriminant)/(2*a);
<anchor xml:id="_geo_8hpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;ix1=p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+t1*dx;
<anchor xml:id="_geo_8hpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;iy1=p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>+t1*dy;
<anchor xml:id="_geo_8hpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;ix2=p1<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>+t2*dx;
<anchor xml:id="_geo_8hpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;iy2=p1<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>+t2*dy;
<anchor xml:id="_geo_8hpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersections.emplace_back(ix1,iy1);
<anchor xml:id="_geo_8hpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersections.emplace_back(ix2,iy2);
<anchor xml:id="_geo_8hpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(almostEqual(intersections[0].x,intersections[1].x)){
<anchor xml:id="_geo_8hpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(intersections[0].y,intersections[1].y))swap(intersections[0],intersections[1]);
<anchor xml:id="_geo_8hpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(intersections[0].x,intersections[1].x)){
<anchor xml:id="_geo_8hpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(intersections[0],intersections[1]);
<anchor xml:id="_geo_8hpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;intersections;
<anchor xml:id="_geo_8hpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00450"/><link linkend="_namespace_geometry_1afa467fced21597c91d88160aa368dde0">00450</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1afa467fced21597c91d88160aa368dde0">vector</link>&lt;<link linkend="_namespace_geometry_1afa467fced21597c91d88160aa368dde0">Point</link>&gt;<link linkend="_namespace_geometry_1afa467fced21597c91d88160aa368dde0">getCirclesIntersect</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c2){
<anchor xml:id="_geo_8hpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x1=c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,y1=c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,r1=c1<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x2=c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,y2=c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,r2=c2<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));
<anchor xml:id="_geo_8hpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(d&gt;r1+r2||d&lt;abs(r1-r2))<emphasis role="keywordflow">return</emphasis>{};<emphasis role="comment">//No&#32;intersection</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;a=(r1*r1-r2*r2+d*d)/(2*d);
<anchor xml:id="_geo_8hpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;h=sqrt(r1*r1-a*a);
<anchor xml:id="_geo_8hpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x0=x1+a*(x2-x1)/d;
<anchor xml:id="_geo_8hpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;y0=y1+a*(y2-y1)/d;
<anchor xml:id="_geo_8hpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;rx=-(y2-y1)*(h/d);
<anchor xml:id="_geo_8hpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;ry=(x2-x1)*(h/d);
<anchor xml:id="_geo_8hpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p1<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>x0+rx<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>y0+ry<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&#32;p2<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">(</link>x0-rx<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">,</link>y0-ry<link linkend="_struct_geometry_1_1_point_1a1d8a7f95cfd9753759f643c14db11458">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Point&gt;intersections;
<anchor xml:id="_geo_8hpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersections.push_back(p1);
<anchor xml:id="_geo_8hpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intersections.push_back(p2);
<anchor xml:id="_geo_8hpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(almostEqual(intersections[0].x,intersections[1].x)){
<anchor xml:id="_geo_8hpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(intersections[0].y,intersections[1].y))swap(intersections[0],intersections[1]);
<anchor xml:id="_geo_8hpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(intersections[0].x,intersections[1].x)){
<anchor xml:id="_geo_8hpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(intersections[0],intersections[1]);
<anchor xml:id="_geo_8hpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;intersections;
<anchor xml:id="_geo_8hpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00473"/><link linkend="_namespace_geometry_1affd43c52385e0185f55de795b049426b">00473</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1affd43c52385e0185f55de795b049426b">vector</link>&lt;<link linkend="_namespace_geometry_1affd43c52385e0185f55de795b049426b">Point</link>&gt;<link linkend="_namespace_geometry_1affd43c52385e0185f55de795b049426b">getTangentLinesFromPoint</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_point">Point</link>&amp;p){
<anchor xml:id="_geo_8hpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx=c<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,cy=c<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,r=c<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;px=p<link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,py=p<link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>;
<anchor xml:id="_geo_8hpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;dx=px-cx;
<anchor xml:id="_geo_8hpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;dy=py-cy;
<anchor xml:id="_geo_8hpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d=(p<link linkend="_struct_geometry_1_1_point_1af5c915184c8721ef6b59eee6fda6f37c">-</link>c<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link>)<link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">.</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">abs</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">(</link><link linkend="_struct_geometry_1_1_point_1a8472d95742274c7339e1f227729f8f39">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>d<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>r<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>{};<emphasis role="comment">//No&#32;tangents&#32;if&#32;the&#32;point&#32;is&#32;inside&#32;the&#32;circle</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>r<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>{p};
<anchor xml:id="_geo_8hpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;a=r*r/d;
<anchor xml:id="_geo_8hpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;h=sqrt(r*r-a*a);
<anchor xml:id="_geo_8hpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx1=cx+a*dx/d;
<anchor xml:id="_geo_8hpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cy1=cy+a*dy/d;
<anchor xml:id="_geo_8hpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Point&gt;tangents;
<anchor xml:id="_geo_8hpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tangents.emplace_back(cx1+h*dy/d,cy1-h*dx/d);
<anchor xml:id="_geo_8hpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tangents.emplace_back(cx1-h*dy/d,cy1+h*dx/d);
<anchor xml:id="_geo_8hpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(almostEqual(tangents[0].x,tangents[1].x)){
<anchor xml:id="_geo_8hpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(tangents[0].y,tangents[1].y))swap(tangents[0],tangents[1]);
<anchor xml:id="_geo_8hpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(greaterThan(tangents[0].x,tangents[1].x)){
<anchor xml:id="_geo_8hpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(tangents[0],tangents[1]);
<anchor xml:id="_geo_8hpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tangents;
<anchor xml:id="_geo_8hpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00498"/><link linkend="_namespace_geometry_1a624725fa83089bed00ea1d0fa8fc4c1e">00498</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_geometry_1a624725fa83089bed00ea1d0fa8fc4c1e">vector</link>&lt;<link linkend="_namespace_geometry_1a624725fa83089bed00ea1d0fa8fc4c1e">Segment</link>&gt;<link linkend="_namespace_geometry_1a624725fa83089bed00ea1d0fa8fc4c1e">getCommonTangentsLine</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_circle">Circle</link>&amp;c2){
<anchor xml:id="_geo_8hpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x1=c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,y1=c1<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,r1=c1<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;x2=c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link>,y2=c2<link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">.</link><link linkend="_struct_geometry_1_1_circle_1a2240114cd5d8188550d2ff3980866b63">center</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link>,r2=c2<link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">.</link><link linkend="_struct_geometry_1_1_circle_1a01c85a4e3f9ea0e7eb98825a465cd509">r</link>;
<anchor xml:id="_geo_8hpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;dx=x2-x1;
<anchor xml:id="_geo_8hpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;dy=y2-y1;
<anchor xml:id="_geo_8hpp_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;d=sqrt(dx*dx+dy*dy);
<anchor xml:id="_geo_8hpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;Segment&gt;tangents;
<anchor xml:id="_geo_8hpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Coincident&#32;circles(infinite&#32;tangents)</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>d<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>0<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>&amp;&amp;<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>r1<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>r2<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>)<emphasis role="keywordflow">return</emphasis>&#32;tangents;
<anchor xml:id="_geo_8hpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//External&#32;tangents</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a48301418052e96f2270cbc235c91e9c7">greaterThanOrEqual</link><link linkend="_namespace_geometry_1a48301418052e96f2270cbc235c91e9c7">(</link>d<link linkend="_namespace_geometry_1a48301418052e96f2270cbc235c91e9c7">,</link>r1+r2<link linkend="_namespace_geometry_1a48301418052e96f2270cbc235c91e9c7">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;a=atan2(dy,dx);
<anchor xml:id="_geo_8hpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;sign:{-1,1}){
<anchor xml:id="_geo_8hpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;theta=acos((r1+r2)/d);
<anchor xml:id="_geo_8hpp_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx1=x1+r1*cos(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cy1=y1+r1*sin(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx2=x2+r2*cos(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cy2=y2+r2*sin(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tangents.emplace_back(Segment{Point(cx1,cy1),Point(cx2,cy2)});
<anchor xml:id="_geo_8hpp_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(almostEqual(d,r1+r2))<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Internal&#32;tangents</emphasis>
<anchor xml:id="_geo_8hpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(greaterThanOrEqual(d,fabs(r1-r2))){
<anchor xml:id="_geo_8hpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;a=atan2(dy,dx);
<anchor xml:id="_geo_8hpp_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;sign:{-1,1}){
<anchor xml:id="_geo_8hpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;theta=acos((r1-r2)/d);
<anchor xml:id="_geo_8hpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx1=x1+r1*cos(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cy1=y1+r1*sin(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cx2=x2-r2*cos(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Real&#32;cy2=y2-r2*sin(a+sign*theta);
<anchor xml:id="_geo_8hpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tangents.emplace_back(Segment{Point(cx1,cy1),Point(cx2,cy2)});
<anchor xml:id="_geo_8hpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(almostEqual(d,fabs(r1-r2)))
<anchor xml:id="_geo_8hpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_geo_8hpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sort(tangents.begin(),tangents.end(),[&amp;](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s1,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_geometry_1_1_segment">Segment</link>&amp;s2){
<anchor xml:id="_geo_8hpp_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">almostEqual</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">(</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">,</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1a8c9fd2ca3dafa5ee2835f88a02667eb5">)</link>){
<anchor xml:id="_geo_8hpp_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">.</link><link linkend="_struct_geometry_1_1_point_1afeb9c1837554b44f9e87936aa17076f1">y</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_geo_8hpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">lessThan</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">(</link>s1<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">,</link>s2<link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">.</link><link linkend="_struct_geometry_1_1_line_1a1ef5574c3171eec95872ef4e4e4f170d">a</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">.</link><link linkend="_struct_geometry_1_1_point_1a4855e61b2b90a91cf1e87fc758d6201b">x</link><link linkend="_namespace_geometry_1ace43f4cd28f78a9fa79439ee8416b2e4">)</link>;
<anchor xml:id="_geo_8hpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="_geo_8hpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tangents;
<anchor xml:id="_geo_8hpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;}
<anchor xml:id="_geo_8hpp_source_1l00543"/>00543 }
</programlisting></section>
