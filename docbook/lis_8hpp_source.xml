<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lis_8hpp_source" xml:lang="ja">
<title>lis.hpp</title>
<indexterm><primary>algorithm/lis.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_lis_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_lis_8hpp_source_1l00002"/>00002 
<anchor xml:id="_lis_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;LIS</emphasis>
<anchor xml:id="_lis_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@brief&#32;配列&#32;v&#32;の最長増加部分列の長さを返す</emphasis>
<anchor xml:id="_lis_8hpp_source_1l00005"/>00005 <emphasis role="comment">///&#32;@param&#32;strict&#32;`true`&#32;のとき狭義単調増加</emphasis>
<anchor xml:id="_lis_8hpp_source_1l00006"/>00006 <emphasis role="comment">///&#32;@note&#32;O(N&#32;log(N))</emphasis>
<anchor xml:id="_lis_8hpp_source_1l00007"/><link linkend="_lis_8hpp_1a74f384a537bd222be3863dec11c5b321">00007</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lis_8hpp_1a74f384a537bd222be3863dec11c5b321">LisLength</link>(VI&amp;&#32;v,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;strict=<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_lis_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=v.size();
<anchor xml:id="_lis_8hpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;VI&#32;dp(n,<link linkend="_template_8hpp_1a14c9dbab105f1b8b8182a022d73e610c">INF</link>);
<anchor xml:id="_lis_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n){
<anchor xml:id="_lis_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itr=strict?lower_bound(dp.begin(),dp.end(),v[i]):upper_bound(dp.begin(),dp.end(),v[i]);
<anchor xml:id="_lis_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*itr=v[i];
<anchor xml:id="_lis_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;}
<anchor xml:id="_lis_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;find(dp.begin(),dp.end(),<link linkend="_template_8hpp_1a14c9dbab105f1b8b8182a022d73e610c">INF</link>)-dp.begin();
<anchor xml:id="_lis_8hpp_source_1l00015"/>00015 }
</programlisting></section>
