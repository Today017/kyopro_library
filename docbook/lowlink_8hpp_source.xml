<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lowlink_8hpp_source" xml:lang="ja">
<title>lowlink.hpp</title>
<indexterm><primary>graph/lowlink.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_lowlink_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_lowlink_8hpp_source_1l00002"/>00002 
<anchor xml:id="_lowlink_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;橋と関節点の情報</emphasis>
<anchor xml:id="_lowlink_8hpp_source_1l00004"/><link linkend="_struct_bridge_info">00004</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_bridge_info">BridgeInfo</link>&#32;{
<anchor xml:id="_lowlink_8hpp_source_1l00005"/><link linkend="_struct_bridge_info_1aaaf5c030e642505d500d0df745738c6a">00005</link> &#32;&#32;&#32;&#32;<link linkend="_struct_bridge_info_1aaaf5c030e642505d500d0df745738c6a">vector</link>&lt;<link linkend="_struct_bridge_info_1aaaf5c030e642505d500d0df745738c6a">pair</link>&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;<link linkend="_struct_bridge_info_1aaaf5c030e642505d500d0df745738c6a">bridge</link>;&#32;<emphasis role="comment">///&lt;&#32;橋</emphasis>
<anchor xml:id="_lowlink_8hpp_source_1l00006"/><link linkend="_struct_bridge_info_1a46cddefb4df5de85551aa4f07ac88fca">00006</link> &#32;&#32;&#32;&#32;<link linkend="_struct_bridge_info_1a46cddefb4df5de85551aa4f07ac88fca">VI</link>&#32;<link linkend="_struct_bridge_info_1a46cddefb4df5de85551aa4f07ac88fca">articulation</link>;&#32;<emphasis role="comment">///&lt;&#32;関節点</emphasis>
<anchor xml:id="_lowlink_8hpp_source_1l00007"/>00007 };
<anchor xml:id="_lowlink_8hpp_source_1l00008"/>00008 
<anchor xml:id="_lowlink_8hpp_source_1l00009"/>00009 <emphasis role="comment">///&#32;@brief&#32;Low&#32;Link&#32;のアルゴリズムによりグラフGの橋と関節点を求める</emphasis>
<anchor xml:id="_lowlink_8hpp_source_1l00010"/>00010 <emphasis role="comment">///&#32;@note&#32;O(V+E)</emphasis>
<anchor xml:id="_lowlink_8hpp_source_1l00011"/><link linkend="_lowlink_8hpp_1a59a26db5c8cd0030144236cefd65603d">00011</link> <link linkend="_struct_bridge_info">BridgeInfo</link>&#32;<link linkend="_lowlink_8hpp_1a59a26db5c8cd0030144236cefd65603d">LowLink</link>(<emphasis role="keyword">const</emphasis>&#32;VVI&amp;&#32;g)&#32;{
<anchor xml:id="_lowlink_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=g.size();
<anchor xml:id="_lowlink_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;VI&#32;ord(n,-1),low(n,-1),articulation,seen(n,<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_lowlink_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;bridge;
<anchor xml:id="_lowlink_8hpp_source_1l00015"/>00015 
<anchor xml:id="_lowlink_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;dfs=[&amp;](<emphasis role="keyword">auto</emphasis>&amp;&amp;&#32;dfs,&#32;<emphasis role="keywordtype">int</emphasis>&#32;now,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pre,&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;cnt)-&gt;&#32;<emphasis role="keywordtype">void</emphasis>&#32;{
<anchor xml:id="_lowlink_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seen[now]=<emphasis role="keyword">true</emphasis>;&#32;ord[now]=low[now]=cnt++;
<anchor xml:id="_lowlink_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_articulation=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_lowlink_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;child=0;
<anchor xml:id="_lowlink_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;nxt:g[now])&#32;{
<anchor xml:id="_lowlink_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!seen[nxt])&#32;{
<anchor xml:id="_lowlink_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;child++;
<anchor xml:id="_lowlink_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dfs(dfs,nxt,now,cnt);
<anchor xml:id="_lowlink_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;low[now]=min(low[now],low[nxt]);
<anchor xml:id="_lowlink_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(pre!=-1&amp;&amp;ord[now]&lt;=low[nxt])&#32;is_articulation=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_lowlink_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ord[now]&lt;low[nxt])&#32;bridge.push_back(minmax(now,nxt));
<anchor xml:id="_lowlink_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_lowlink_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(nxt!=pre)&#32;low[now]=min(low[now],ord[nxt]);
<anchor xml:id="_lowlink_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_lowlink_8hpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(pre==-1&amp;&amp;child&gt;1)&#32;is_articulation=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_lowlink_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(is_articulation)&#32;articulation.push_back(now);
<anchor xml:id="_lowlink_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;};
<anchor xml:id="_lowlink_8hpp_source_1l00033"/>00033 
<anchor xml:id="_lowlink_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt=0;
<anchor xml:id="_lowlink_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<emphasis role="keywordflow">if</emphasis>(!seen[i])&#32;dfs(dfs,i,-1,cnt);
<anchor xml:id="_lowlink_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;sort(<link linkend="_template_8hpp_1a7ab29d3bd6e8d66e320f4224e75f6cea">ALL</link>(bridge));
<anchor xml:id="_lowlink_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;sort(<link linkend="_template_8hpp_1a7ab29d3bd6e8d66e320f4224e75f6cea">ALL</link>(articulation));
<anchor xml:id="_lowlink_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{bridge,articulation};
<anchor xml:id="_lowlink_8hpp_source_1l00039"/>00039 }
</programlisting></section>
