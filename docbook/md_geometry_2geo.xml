<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md_geometry_2geo" xml:lang="ja">
<title>geo</title>
<indexterm><primary>geo</primary></indexterm>

<para><link linkend="_md__r_e_a_d_m_e">top</link></para>
<section xml:id="_md_geometry_2geo_1autotoc_md1">
<title><link xlink:href="./geo.hpp">Template</link></title>
<para>このライブラリのドキュメント・実装は ICPC のために、チーム HokkaidoDekkaido のメンバーによって verify の上、提供されました。</para>
<section xml:id="_md_geometry_2geo_1autotoc_md2">
<title>Inequality</title>
<para><computeroutput>bool almostEqual(long double a, long double b)</computeroutput></para>

<para><computeroutput>bool lessThan(long double a, long double b)</computeroutput></para>

<para><computeroutput>bool greaterThan(long double a, long double b)</computeroutput></para>

<para><computeroutput>bool lessThanOrEqual(long double a, long double b)</computeroutput></para>

<para><computeroutput>bool greaterThanOrEqual(long double a, long double b)</computeroutput><itemizedlist>
<listitem>
<para>EPSを用いた不等式評価</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md3">
<title>Structure</title><section xml:id="_md_geometry_2geo_1autotoc_md4">
<title>Point</title>
<para><computeroutput>Point(long double x, long double y)</computeroutput><itemizedlist>
<listitem>
<para>二次元平面状の位置ベクトル $(x, y)$</para>
</listitem></itemizedlist>
</para>

<para><computeroutput>Point::dot(Point p)</computeroutput><itemizedlist>
<listitem>
<para>$p$ との内積を返す。</para>
</listitem></itemizedlist>
</para>

<para><computeroutput>Point::cross(Point p)</computeroutput><itemizedlist>
<listitem>
<para>$p$ との外積を返す。</para>
</listitem></itemizedlist>
</para>

<para><computeroutput>Point::cross(Point p1, Point p2)</computeroutput><itemizedlist>
<listitem>
<para>$p1$ と $p2$ を端点とするベクトルとの外積を返す。</para>
</listitem></itemizedlist>
</para>

<para><computeroutput>Point::norm()</computeroutput><itemizedlist>
<listitem>
<para>ベクトルの長さの二乗を返す。</para>
</listitem></itemizedlist>
</para>

<para><computeroutput>Point::abs()</computeroutput><itemizedlist>
<listitem>
<para>ベクトルの長さを返す。</para>
</listitem></itemizedlist>
</para>

<para><computeroutput>Point::arg()</computeroutput><itemizedlist>
<listitem>
<para>ベクトルの偏角を返す。</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md5">
<title>Segment</title>
<para><computeroutput>Segment(Point a, Point b)</computeroutput></para>

<para><computeroutput>Segment(long double A, long double B, long double C)</computeroutput><itemizedlist>
<listitem>
<para>線分</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md6">
<title>Line</title>
<para><computeroutput>Line(Point a, Point b)</computeroutput></para>

<para><computeroutput>Line(long double A, long double B, long double C)</computeroutput><itemizedlist>
<listitem>
<para>直線</para>
</listitem></itemizedlist>
</para>

<para>(一般には==が壊れるので注意)</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md7">
<title>Circle</title>
<para><computeroutput>Circle(long double x, long double y, long double r)</computeroutput></para>

<para><computeroutput>Circle(Point _center, long double r)</computeroutput><itemizedlist>
<listitem>
<para>円</para>
</listitem></itemizedlist>
</para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md8">
<title>Point and Vector</title><section xml:id="_md_geometry_2geo_1autotoc_md9">
<title>Counter Clockwise</title>
<para><computeroutput>Orientation ccw(Point p0, Point p1, Point p2)</computeroutput><itemizedlist>
<listitem>
<para>点の進行方向</para>
</listitem></itemizedlist>
</para>

<para><literallayout><computeroutput>enum&#32;Orientation&#32;{
&#32;&#32;&#32;&#32;COUNTER_CLOCKWISE,
&#32;&#32;&#32;&#32;CLOCKWISE,
&#32;&#32;&#32;&#32;ONLINE_BACK,
&#32;&#32;&#32;&#32;ONLINE_FRONT,
&#32;&#32;&#32;&#32;ON_SEGMENT
};
</computeroutput></literallayout></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md10">
<title>射影</title>
<para><computeroutput>Point projection(Point p1, Point p2, Point p)</computeroutput></para>

<para><computeroutput>Point projection(Line l, Point p)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md11">
<title>反射</title>
<para><computeroutput>Point reflection(Point p1, Point p2, Point p)</computeroutput></para>

<para><computeroutput>Point reflection(Line l, Point p)</computeroutput></para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md12">
<title>Segment and Line</title><section xml:id="_md_geometry_2geo_1autotoc_md13">
<title>平行判定</title>
<para><computeroutput>bool isParallel(Line(Segment) l1, Line(Segment) l2)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md14">
<title>垂直判定</title>
<para><computeroutput>bool isOrthogonal(Line(Segment) l1, Line(Segment) l2)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md16">
<title>直線上に点が存在するか判定</title>
<para><computeroutput>bool isPointOnLine(Point p, Line l)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md17">
<title>線分上に点が存在するか判定</title>
<para><computeroutput>bool isPointOnSegment(Point p, Line l)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md18">
<title>線分と線分の交差</title>
<para><computeroutput>bool isIntersecting(Segment s1, Segment s2)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md19">
<title>線分と線分の交点</title>
<para><computeroutput>Point getIntersection(Segment s1, Segment s2)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md21">
<title>点と直線の距離</title>
<para><computeroutput>long double distancePointToSegment(Point p, Segment s)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md22">
<title>線分と線分の距離</title>
<para><computeroutput>long double distanceSegmentToSegment(Segment s1, Segment s2)</computeroutput></para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md23">
<title>Polygon</title><section xml:id="_md_geometry_2geo_1autotoc_md24">
<title>多角形の面積</title>
<para><computeroutput>long double getPolygonArea(vector&lt;Point&gt; points)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md26">
<title>凸多角形の判定</title>
<para><computeroutput>bool isConvex(vector&lt;Point&gt; points)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md28">
<title>点が凸多角形の辺上に存在するか判定</title>
<para><computeroutput>bool isPointOnPolygon(vector&lt;Point&gt; polygon, Point p)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md29">
<title>点が凸多角形の内部に存在するか判定</title>
<para><computeroutput>bool isPointInsidePolygon(vector&lt;Point&gt; polygon, Point p)</computeroutput><itemizedlist>
<listitem>
<para>たまに↑を包含</para>
</listitem></itemizedlist>
</para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md30">
<title>Convex Polygon</title><section xml:id="_md_geometry_2geo_1autotoc_md31">
<title>凸包</title>
<para><computeroutput>vector&lt;Point&gt; convexHull(vector&lt;Point&gt; points, bool include_collinear = false)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md33">
<title>凸包の直径</title>
<para><computeroutput>long double convexHullDiameter(vector&lt;Point&gt; hull)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md35">
<title>凸包をカットして左側を返す</title>
<para><computeroutput>vector&lt;Point&gt; cutPolygon(vector&lt;Point&gt; g, Point p1, Point p2)</computeroutput></para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md36">
<title>Point Set</title><section xml:id="_md_geometry_2geo_1autotoc_md37">
<title>最近点対</title>
<para><computeroutput>long double closestPair(vector&lt;Point&gt; points, int l, int r)</computeroutput><itemizedlist>
<listitem>
<para>x座標の値でソートされた点列を渡す</para>
</listitem></itemizedlist>
</para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md38">
<title>Segment Set</title><section xml:id="_md_geometry_2geo_1autotoc_md39">
<title>線分集合の交点の個数</title>
<para><computeroutput>int countIntersections(vector&lt;Segment&gt; segments)</computeroutput></para>
</section>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md40">
<title>Circle</title><section xml:id="_md_geometry_2geo_1autotoc_md41">
<title>2つの円の交点の個数</title>
<para><computeroutput>int countCirclesIntersection(Circle c1, Circle c2)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md43">
<title>内接円</title>
<para><computeroutput>Circle getInCircle(Point A, Point B, Point C)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md45">
<title>外接円</title>
<para><computeroutput>Circle getCircumCircle(Point A, Point B, Point C)</computeroutput></para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md47">
<title>円と直線の交点</title>
<para><computeroutput>vector&lt;Point&gt; getCircleLineIntersection(Circle c, Point p1, Point p2)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md48">
<title>2つの円の交点</title>
<para><computeroutput>vector&lt;Point&gt; getCirclesIntersect(Circle c1, Circle c2)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md49">
<title>点 $p$ を通る接線との接点</title>
<para><computeroutput>vector&lt;Point&gt; getTangentLinesFromPoint(Circle c, Point p)</computeroutput></para>
</section>
<section xml:id="_md_geometry_2geo_1autotoc_md50">
<title>2つの円の共通接線</title>
<para><computeroutput>vector&lt;Segment&gt; getCommonTangentsLine(Circle c1, Circle c2)</computeroutput> </para>
</section>
</section>
</section>
</section>
