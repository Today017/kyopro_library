<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_modint_8hpp_source" xml:lang="ja">
<title>modint.hpp</title>
<indexterm><primary>mod/modint.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_modint_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">pragma</emphasis>&#32;<emphasis role="preprocessor">once</emphasis>
<anchor xml:id="_modint_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_modint_8hpp_source_1l00003"/>00003 
<anchor xml:id="_modint_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@brief&#32;ModInt</emphasis>
<anchor xml:id="_modint_8hpp_source_1l00005"/>00005 <emphasis role="keyword">template</emphasis>&lt;ll&#32;MOD&gt;
<anchor xml:id="_modint_8hpp_source_1l00006"/><link linkend="_struct_mod_int">00006</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;{
<anchor xml:id="_modint_8hpp_source_1l00007"/><link linkend="_struct_mod_int_1a08a1301149cd7efb6d5944167950785a">00007</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int_1a08a1301149cd7efb6d5944167950785a">ModInt</link>(ll&#32;x=0){&#32;value=(x&gt;=0?x%MOD:MOD-(-x)%MOD);&#32;}
<anchor xml:id="_modint_8hpp_source_1l00008"/>00008 
<anchor xml:id="_modint_8hpp_source_1l00009"/><link linkend="_struct_mod_int_1a2a7d668875266bfd2fe17cc836597603">00009</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1a2a7d668875266bfd2fe17cc836597603">operator</link>-()&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>(-value);&#32;}
<anchor xml:id="_modint_8hpp_source_1l00010"/><link linkend="_struct_mod_int_1a9aee9a9ff83c64adb4bdf774258f4850">00010</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1a9aee9a9ff83c64adb4bdf774258f4850">operator</link>+()&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
<anchor xml:id="_modint_8hpp_source_1l00011"/><link linkend="_struct_mod_int_1a5249b67fb197e68610eab2636b7a333f">00011</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;<link linkend="_struct_mod_int_1a5249b67fb197e68610eab2636b7a333f">operator</link>+=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;{
<anchor xml:id="_modint_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value+=other.value;
<anchor xml:id="_modint_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(value&gt;=MOD)&#32;value-=MOD;
<anchor xml:id="_modint_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="_modint_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00016"/><link linkend="_struct_mod_int_1a8a315af2621f2f9b566fdc7c9dc992fe">00016</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;<link linkend="_struct_mod_int_1a8a315af2621f2f9b566fdc7c9dc992fe">operator</link>-=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;{
<anchor xml:id="_modint_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value+=MOD-other.value;
<anchor xml:id="_modint_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(value&gt;=MOD)&#32;value-=MOD;
<anchor xml:id="_modint_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="_modint_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00021"/><link linkend="_struct_mod_int_1a0e9287889960cab1e08a7b6e528adb23">00021</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;<link linkend="_struct_mod_int_1a0e9287889960cab1e08a7b6e528adb23">operator</link>*=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;other)&#32;{
<anchor xml:id="_modint_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value=value*other.value%MOD;
<anchor xml:id="_modint_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="_modint_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00025"/><link linkend="_struct_mod_int_1a96078358d334d2352bc93718741f5cc6">00025</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;<link linkend="_struct_mod_int_1a96078358d334d2352bc93718741f5cc6">operator</link>/=(<link linkend="_struct_mod_int">ModInt</link>&#32;other)&#32;{
<anchor xml:id="_modint_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*<emphasis role="keyword">this</emphasis>)*=other<link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">.</link><link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">inv</link><link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">(</link><link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">)</link>;
<anchor xml:id="_modint_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="_modint_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00029"/><link linkend="_struct_mod_int_1aec96e1870fe596b4425267e977be7528">00029</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1aec96e1870fe596b4425267e977be7528">operator</link>+(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>(*<emphasis role="keyword">this</emphasis>)+=other;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00030"/><link linkend="_struct_mod_int_1aeed29e8004b071baf5f2bd0516e68fcf">00030</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1aeed29e8004b071baf5f2bd0516e68fcf">operator</link>-(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>(*<emphasis role="keyword">this</emphasis>)-=other;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00031"/><link linkend="_struct_mod_int_1a549ff9eaef1ee925bff71ecaaaa21a2a">00031</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1a549ff9eaef1ee925bff71ecaaaa21a2a">operator</link>*(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>(*<emphasis role="keyword">this</emphasis>)*=other;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00032"/><link linkend="_struct_mod_int_1ac624a8f8b7290c295ca265bbf8f07e17">00032</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1ac624a8f8b7290c295ca265bbf8f07e17">operator</link>/(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>(*<emphasis role="keyword">this</emphasis>)/=other;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00033"/><link linkend="_struct_mod_int_1ad98d5a5c762d0d1662f9df246fa13ebd">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_mod_int_1ad98d5a5c762d0d1662f9df246fa13ebd">operator</link>==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;value==other.value;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00034"/><link linkend="_struct_mod_int_1a964f2f06ec3cb7823ca13cb21c0e0b22">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_mod_int_1a964f2f06ec3cb7823ca13cb21c0e0b22">operator</link>!=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;other)&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;value!=other.value;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00035"/><link linkend="_struct_mod_int_1a0781c38bd75eafd6bcb5e0ad2f2146b9">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_struct_mod_int_1a0781c38bd75eafd6bcb5e0ad2f2146b9">ostream</link>&amp;&#32;<link linkend="_struct_mod_int_1a0781c38bd75eafd6bcb5e0ad2f2146b9">operator</link>&lt;&lt;(ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;x)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;os&lt;&lt;x.value;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00036"/><link linkend="_struct_mod_int_1aae4982d90889904faefcab6ee63356dc">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_struct_mod_int_1aae4982d90889904faefcab6ee63356dc">istream</link>&amp;&#32;<link linkend="_struct_mod_int_1aae4982d90889904faefcab6ee63356dc">operator</link>&gt;&gt;(istream&amp;&#32;is,&#32;<link linkend="_struct_mod_int">ModInt</link>&amp;&#32;x)&#32;{
<anchor xml:id="_modint_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;v;
<anchor xml:id="_modint_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&gt;&gt;v;
<anchor xml:id="_modint_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x=<link linkend="_struct_mod_int">ModInt</link>&lt;MOD&gt;(v);
<anchor xml:id="_modint_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;is;
<anchor xml:id="_modint_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00042"/>00042 
<anchor xml:id="_modint_8hpp_source_1l00043"/><link linkend="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b">00043</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b">pow</link>(ll&#32;x)&#32;<emphasis role="keyword">const</emphasis>&#32;{
<anchor xml:id="_modint_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;ret(1),mul(value);
<anchor xml:id="_modint_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(x)&#32;{
<anchor xml:id="_modint_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(x&amp;1)&#32;ret*=mul;
<anchor xml:id="_modint_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mul*=mul;
<anchor xml:id="_modint_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&gt;&gt;=1;
<anchor xml:id="_modint_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_modint_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00052"/><link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">00052</link> &#32;&#32;&#32;&#32;<link linkend="_struct_mod_int">ModInt</link>&#32;<link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">inv</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b">pow</link><link linkend="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b">(</link>MOD-2<link linkend="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b">)</link>;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00053"/><link linkend="_struct_mod_int_1ac1b44a18ac974f3f34f7ec40edb97761">00053</link> &#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_mod_int_1ac1b44a18ac974f3f34f7ec40edb97761">val</link>()&#32;{<emphasis role="keywordflow">return</emphasis>&#32;value;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00054"/><link linkend="_struct_mod_int_1ab93584e36749073a116d76ead3e8b602">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;ll&#32;<link linkend="_struct_mod_int_1ab93584e36749073a116d76ead3e8b602">get_mod</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;MOD;&#32;}
<anchor xml:id="_modint_8hpp_source_1l00055"/>00055 
<anchor xml:id="_modint_8hpp_source_1l00056"/>00056 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_modint_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;ll&#32;value;
<anchor xml:id="_modint_8hpp_source_1l00058"/>00058 };
<anchor xml:id="_modint_8hpp_source_1l00059"/>00059 
<anchor xml:id="_modint_8hpp_source_1l00060"/><link linkend="_modint_8hpp_1a8be746e3dd283ea2f2c0e96ba064724d">00060</link> <emphasis role="keyword">using</emphasis>&#32;Mod998=<link linkend="_struct_mod_int">ModInt</link>&lt;998244353&gt;;
<anchor xml:id="_modint_8hpp_source_1l00061"/><link linkend="_modint_8hpp_1a9b38c2f1bf6ce7683c4d432248fc986b">00061</link> <emphasis role="keyword">using</emphasis>&#32;Mod107=<link linkend="_struct_mod_int">ModInt</link>&lt;1000000007&gt;;
<anchor xml:id="_modint_8hpp_source_1l00062"/><link linkend="_modint_8hpp_1a0eb658589b1f818b4f88deb2ae419aab">00062</link> <emphasis role="keyword">using</emphasis>&#32;VM=vector&lt;Mod998&gt;;
</programlisting></section>
