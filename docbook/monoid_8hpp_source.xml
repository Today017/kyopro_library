<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_monoid_8hpp_source" xml:lang="ja">
<title>monoid.hpp</title>
<indexterm><primary>others/monoid.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_monoid_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">pragma</emphasis>&#32;<emphasis role="preprocessor">once</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00003"/>00003 
<anchor xml:id="_monoid_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@brief&#32;モノイド</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00005"/><link linkend="_namespace_monoid">00005</link> <emphasis role="keyword">namespace</emphasis>&#32;<link linkend="_namespace_monoid">Monoid</link>&#32;{
<anchor xml:id="_monoid_8hpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;Minモノイド</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@tparam&#32;max_value&#32;単位元</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;T&#32;max_value=<link linkend="_template_8hpp_1a14c9dbab105f1b8b8182a022d73e610c">INF</link>&gt;
<anchor xml:id="_monoid_8hpp_source_1l00009"/><link linkend="_struct_monoid_1_1_min">00009</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_monoid_1_1_min">Min</link>&#32;{
<anchor xml:id="_monoid_8hpp_source_1l00010"/><link linkend="_struct_monoid_1_1_min_1a506ab40a8c7083fa3d07b8f704e7d7a0">00010</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Type=T;
<anchor xml:id="_monoid_8hpp_source_1l00011"/><link linkend="_struct_monoid_1_1_min_1a1751a1c69ded28e92cfd6f9c4b42f3ee">00011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;<link linkend="_struct_monoid_1_1_min_1a1751a1c69ded28e92cfd6f9c4b42f3ee">id</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;max_value;&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00012"/><link linkend="_struct_monoid_1_1_min_1a8d87574bd7b422b6411c6d0f7b5ac85d">00012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;<link linkend="_struct_monoid_1_1_min_1a8d87574bd7b422b6411c6d0f7b5ac85d">op</link>(<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;b)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;min(a,b);&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;};
<anchor xml:id="_monoid_8hpp_source_1l00014"/>00014 
<anchor xml:id="_monoid_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;Maxモノイド</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@tparam&#32;min_value&#32;単位元</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;T&#32;min_value=-<link linkend="_template_8hpp_1a14c9dbab105f1b8b8182a022d73e610c">INF</link>&gt;
<anchor xml:id="_monoid_8hpp_source_1l00018"/><link linkend="_struct_monoid_1_1_max">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_monoid_1_1_max">Max</link>&#32;{
<anchor xml:id="_monoid_8hpp_source_1l00019"/><link linkend="_struct_monoid_1_1_max_1a14108b8557485a8c7daf0ebcbe4f09cf">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Type=T;
<anchor xml:id="_monoid_8hpp_source_1l00020"/><link linkend="_struct_monoid_1_1_max_1a5137dcf5aacd39b21f6ae23605136831">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;<link linkend="_struct_monoid_1_1_max_1a5137dcf5aacd39b21f6ae23605136831">id</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;min_value;&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00021"/><link linkend="_struct_monoid_1_1_max_1ae4461f8a7ccddd3063cc6e250d1d0dfe">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;<link linkend="_struct_monoid_1_1_max_1ae4461f8a7ccddd3063cc6e250d1d0dfe">op</link>(<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;b)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;max(a,b);&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;};
<anchor xml:id="_monoid_8hpp_source_1l00023"/>00023 
<anchor xml:id="_monoid_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;和</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_monoid_8hpp_source_1l00026"/><link linkend="_struct_monoid_1_1_sum">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_monoid_1_1_sum">Sum</link>&#32;{
<anchor xml:id="_monoid_8hpp_source_1l00027"/><link linkend="_struct_monoid_1_1_sum_1a90fa95e8ff9c566c69a9f047e0c94ff6">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Type=T;
<anchor xml:id="_monoid_8hpp_source_1l00028"/><link linkend="_struct_monoid_1_1_sum_1a23a7ab3898ae4b224d00d724b9cb09d1">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;<link linkend="_struct_monoid_1_1_sum_1a23a7ab3898ae4b224d00d724b9cb09d1">id</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00029"/><link linkend="_struct_monoid_1_1_sum_1a30038b90764b16f6f2c3438e915e759f">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;<link linkend="_struct_monoid_1_1_sum_1a30038b90764b16f6f2c3438e915e759f">op</link>(<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;b)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;a+b;&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;};
<anchor xml:id="_monoid_8hpp_source_1l00031"/>00031 
<anchor xml:id="_monoid_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;（和，区間の長さ）</emphasis>
<anchor xml:id="_monoid_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_monoid_8hpp_source_1l00034"/><link linkend="_struct_monoid_1_1_sum_pair">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_monoid_1_1_sum_pair">SumPair</link>&#32;{
<anchor xml:id="_monoid_8hpp_source_1l00035"/><link linkend="_struct_monoid_1_1_sum_pair_1adf2046f6a597d0567fe570aebe22df2a">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_struct_monoid_1_1_sum_pair">Type</link>=<link linkend="_struct_monoid_1_1_sum_pair">pair</link>&lt;<link linkend="_struct_monoid_1_1_sum_pair">T</link>,<emphasis role="keywordtype">int</emphasis>&gt;;
<anchor xml:id="_monoid_8hpp_source_1l00036"/><link linkend="_struct_monoid_1_1_sum_pair_1a043585d89c5f6298c87a3555669a03a7">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_monoid_1_1_sum_pair_1a043585d89c5f6298c87a3555669a03a7">Type</link>&#32;<link linkend="_struct_monoid_1_1_sum_pair_1a043585d89c5f6298c87a3555669a03a7">id</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;make_pair(T(0),0);&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00037"/><link linkend="_struct_monoid_1_1_sum_pair_1a4b65ab6fcc84c3c1b653de30db3d5dbc">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_monoid_1_1_sum_pair_1a4b65ab6fcc84c3c1b653de30db3d5dbc">Type</link>&#32;<link linkend="_struct_monoid_1_1_sum_pair_1a4b65ab6fcc84c3c1b653de30db3d5dbc">op</link>(<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;Type&amp;&#32;b)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;{a.first+b.first,a.second+b.second};&#32;}
<anchor xml:id="_monoid_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;};
<anchor xml:id="_monoid_8hpp_source_1l00039"/>00039 }
</programlisting></section>
