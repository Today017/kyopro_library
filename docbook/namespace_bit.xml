<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_bit" xml:lang="ja">
<title>Bit 名前空間</title>
<indexterm><primary>Bit</primary></indexterm>
<para>

<para>ビット演算 </para>
 
</para>
<simplesect>
    <title>関数    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_namespace_bit_1a1c596333431a2b9557848add9aaec912">PopCount</link> (int n)</para>

<para>1であるビットの個数を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a72c1df96643f535ccb12e866f1022726">PopCount</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</para>

<para>1であるビットの個数を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a39936fdc1d9e615dd4cffc483c1dca8c">Parity</link> (int n)</para>

<para>popcountの偶奇を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a7d701e06b98bd3273126ccb3bb8bba5b">Parity</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</para>

<para>popcountの偶奇を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a385f3d9f37540986c5af0dea755fbfdb">TopBit</link> (int n)</para>

<para>最上位ビットの位置を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a38f7f49874426ffdda91602476c71396">TopBit</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</para>

<para>最上位ビットの位置を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a870a0bc19f2526f8179a4da45dc52efc">BitLength</link> (int n)</para>

<para>2進表現の長さを返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1a489e2250c1755c4b0efe77c8b27f116c">BitLength</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1af393abef4ae81565dcf932bceafec533">LowBit</link> (int n)</para>

<para>最下位ビットの位置を返す </para>
</listitem>
            <listitem><para>int <link linkend="_namespace_bit_1adfb65c7d7cafdb482df24671d93f7a74">LowBit</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</para>

<para>最下位ビットの位置を返す </para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_bit_1a40cfacaf824921dc87de6a5297491fde">IsPowerOfTwo</link> (int n)</para>

<para>2のべき乗か否かを返す </para>
</listitem>
            <listitem><para><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_namespace_bit_1acd8e1799dd385e69d34df3bea530b920">Mask</link> (int n)</para>

<para>0~n-1 ビットを立てたビットマスクを返す </para>
</listitem>
            <listitem><para>bool <link linkend="_namespace_bit_1a0af6dce857ec8aa6cef9e6ac1d4410e6">HasBit</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n, int i)</para>

<para>iビット目が立っているか否かを返す </para>
</listitem>
            <listitem><para>string <link linkend="_namespace_bit_1ab14c175590d01b3c7a01971de3218c7a">ToBinary</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n, int len=32, bool rev=false)</para>

<para>整数　ｎ の2進表現を返す </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>

<para>ビット演算 </para>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_namespace_bit_1a1c596333431a2b9557848add9aaec912"/><section>
    <title>PopCount()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PopCount</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>PopCount</secondary></indexterm>
<para><computeroutput>int Bit::PopCount (int n)</computeroutput></para><para>

<para>1であるビットの個数を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00006">6</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a72c1df96643f535ccb12e866f1022726"/><section>
    <title>PopCount()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PopCount</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>PopCount</secondary></indexterm>
<para><computeroutput>int Bit::PopCount (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</computeroutput></para><para>

<para>1であるビットの個数を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00009">9</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a39936fdc1d9e615dd4cffc483c1dca8c"/><section>
    <title>Parity()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Parity</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>Parity</secondary></indexterm>
<para><computeroutput>int Bit::Parity (int n)</computeroutput></para><para>

<para>popcountの偶奇を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00012">12</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a7d701e06b98bd3273126ccb3bb8bba5b"/><section>
    <title>Parity()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Parity</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>Parity</secondary></indexterm>
<para><computeroutput>int Bit::Parity (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</computeroutput></para><para>

<para>popcountの偶奇を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00015">15</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a385f3d9f37540986c5af0dea755fbfdb"/><section>
    <title>TopBit()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TopBit</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>TopBit</secondary></indexterm>
<para><computeroutput>int Bit::TopBit (int n)</computeroutput></para><para>

<para>最上位ビットの位置を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00018">18</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a38f7f49874426ffdda91602476c71396"/><section>
    <title>TopBit()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TopBit</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>TopBit</secondary></indexterm>
<para><computeroutput>int Bit::TopBit (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</computeroutput></para><para>

<para>最上位ビットの位置を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00021">21</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a870a0bc19f2526f8179a4da45dc52efc"/><section>
    <title>BitLength()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>BitLength</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>BitLength</secondary></indexterm>
<para><computeroutput>int Bit::BitLength (int n)</computeroutput></para><para>

<para>2進表現の長さを返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00024">24</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a489e2250c1755c4b0efe77c8b27f116c"/><section>
    <title>BitLength()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>BitLength</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>BitLength</secondary></indexterm>
<para><computeroutput>int Bit::BitLength (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</computeroutput></para><para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00027">27</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1af393abef4ae81565dcf932bceafec533"/><section>
    <title>LowBit()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LowBit</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>LowBit</secondary></indexterm>
<para><computeroutput>int Bit::LowBit (int n)</computeroutput></para><para>

<para>最下位ビットの位置を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00030">30</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1adfb65c7d7cafdb482df24671d93f7a74"/><section>
    <title>LowBit()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LowBit</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>LowBit</secondary></indexterm>
<para><computeroutput>int Bit::LowBit (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n)</computeroutput></para><para>

<para>最下位ビットの位置を返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00033">33</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a40cfacaf824921dc87de6a5297491fde"/><section>
    <title>IsPowerOfTwo()</title>
<indexterm><primary>IsPowerOfTwo</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>IsPowerOfTwo</secondary></indexterm>
<para><computeroutput>bool Bit::IsPowerOfTwo (int n)</computeroutput></para><para>

<para>2のべき乗か否かを返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00036">36</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1acd8e1799dd385e69d34df3bea530b920"/><section>
    <title>Mask()</title>
<indexterm><primary>Mask</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>Mask</secondary></indexterm>
<para><computeroutput><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> Bit::Mask (int n)</computeroutput></para><para>

<para>0~n-1 ビットを立てたビットマスクを返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00039">39</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1a0af6dce857ec8aa6cef9e6ac1d4410e6"/><section>
    <title>HasBit()</title>
<indexterm><primary>HasBit</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>HasBit</secondary></indexterm>
<para><computeroutput>bool Bit::HasBit (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n, int i)</computeroutput></para><para>

<para>iビット目が立っているか否かを返す </para>
</para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00042">42</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_namespace_bit_1ab14c175590d01b3c7a01971de3218c7a"/><section>
    <title>ToBinary()</title>
<indexterm><primary>ToBinary</primary><secondary>Bit</secondary></indexterm>
<indexterm><primary>Bit</primary><secondary>ToBinary</secondary></indexterm>
<para><computeroutput>string Bit::ToBinary (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> n, int len = <computeroutput>32</computeroutput>
, bool rev = <computeroutput>false</computeroutput>
)</computeroutput></para><para>

<para>整数　ｎ の2進表現を返す </para>
</para>

<para>
                <formalpara>
                    <title>
引数</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>len</entry><entry>
<para>ビット数 </para>
</entry>
                            </row>
                            <row>
<entry>rev</entry><entry>
<para>反転するか否か </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
 <link linkend="_bit_8hpp_source">bit.hpp</link> の <link linkend="_bit_8hpp_source_1l00047">47</link> 行目に定義があります。</para>
<para>
参照先 <link linkend="_bit_8hpp_source_1l00042">HasBit()</link>.</para>
</section>
</section>
</section>
