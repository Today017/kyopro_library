<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ntt_8hpp_source" xml:lang="ja">
<title>ntt.hpp</title>
<indexterm><primary>math/ntt.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_ntt_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_ntt_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/others/modcal.hpp&quot;</emphasis>
<anchor xml:id="_ntt_8hpp_source_1l00003"/>00003 
<anchor xml:id="_ntt_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@brief&#32;NTT&#32;Friendly&#32;素数用&#32;NTT&#32;構造体</emphasis>
<anchor xml:id="_ntt_8hpp_source_1l00005"/>00005 <emphasis role="keyword">template</emphasis>&lt;ll&#32;MOD,&#32;ll&#32;primitive_root&gt;
<anchor xml:id="_ntt_8hpp_source_1l00006"/><link linkend="_class_n_t_t">00006</link> <emphasis role="keyword">class</emphasis>&#32;<link linkend="_class_n_t_t">NTT</link>&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;divide_max,n;
<anchor xml:id="_ntt_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;VL&#32;roots,inv_roots,tmp;
<anchor xml:id="_ntt_8hpp_source_1l00009"/>00009 
<anchor xml:id="_ntt_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ntt(VL&amp;&#32;a,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;inv=<emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mask=n-1,p=0;
<anchor xml:id="_ntt_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=n&gt;&gt;1;&#32;i&gt;=1;&#32;i&gt;&gt;=1)&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;cur=(p&amp;1)?tmp:a;
<anchor xml:id="_ntt_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;nxt=(p&amp;1)?a:tmp;
<anchor xml:id="_ntt_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;e=inv?roots[p+1]:inv_roots[p+1];
<anchor xml:id="_ntt_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;w=1;
<anchor xml:id="_ntt_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&lt;n;&#32;j+=i)&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(k,i)&#32;nxt[j+k]=(cur[((j&lt;&lt;1)&amp;mask)+k]+w*cur[(((j&lt;&lt;1)+i)&amp;mask)+k])%MOD;
<anchor xml:id="_ntt_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(w*=e)%=MOD;
<anchor xml:id="_ntt_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p++;
<anchor xml:id="_ntt_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(p&amp;1)&#32;swap(a,tmp);
<anchor xml:id="_ntt_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(inv)&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;inv_sz=<link linkend="_modcal_8hpp_1a8fbaf043a7918c3ee026482c69f79bdc">ModInv</link><link linkend="_modcal_8hpp_1a8fbaf043a7918c3ee026482c69f79bdc">(</link>n<link linkend="_modcal_8hpp_1a8fbaf043a7918c3ee026482c69f79bdc">,</link>MOD<link linkend="_modcal_8hpp_1a8fbaf043a7918c3ee026482c69f79bdc">)</link>;
<anchor xml:id="_ntt_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;(a[i]*=inv_sz)%=MOD;
<anchor xml:id="_ntt_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00029"/>00029 
<anchor xml:id="_ntt_8hpp_source_1l00030"/>00030 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_ntt_8hpp_source_1l00031"/><link linkend="_class_n_t_t_1a08f7a88ab5d843873769c894112766ec">00031</link> &#32;&#32;&#32;&#32;<link linkend="_class_n_t_t_1a08f7a88ab5d843873769c894112766ec">NTT</link>()&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;divide_max=1;
<anchor xml:id="_ntt_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;n=MOD-1;
<anchor xml:id="_ntt_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(n%2==0)&#32;n&gt;&gt;=1,divide_max++;
<anchor xml:id="_ntt_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roots=VL(divide_max+1);
<anchor xml:id="_ntt_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inv_roots=VL(divide_max+1);
<anchor xml:id="_ntt_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roots[0]=inv_roots[0]=1;
<anchor xml:id="_ntt_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a9af2de86c4be813e9c60ede438bb4cd7">FOR</link>(i,1,divide_max+1)&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roots[i]=ModPow(primitive_root,(MOD-1)/(1&lt;&lt;i),MOD);
<anchor xml:id="_ntt_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inv_roots[i]=ModInv(roots[i],MOD);
<anchor xml:id="_ntt_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00043"/>00043 
<anchor xml:id="_ntt_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;a,&#32;b&#32;の畳み込み&#32;mod&#32;M&#32;を求める</emphasis>
<anchor xml:id="_ntt_8hpp_source_1l00045"/><link linkend="_class_n_t_t_1af7d5dac5eee3af11ecf0c361f5fbe581">00045</link> &#32;&#32;&#32;&#32;<link linkend="_class_n_t_t_1af7d5dac5eee3af11ecf0c361f5fbe581">VL</link>&#32;<link linkend="_class_n_t_t_1af7d5dac5eee3af11ecf0c361f5fbe581">convolve</link>(VL&#32;a,&#32;VL&#32;b)&#32;{
<anchor xml:id="_ntt_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n=1;
<anchor xml:id="_ntt_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(n+1&lt;a.size()+b.size())&#32;n&lt;&lt;=1;
<anchor xml:id="_ntt_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp=VL(n);
<anchor xml:id="_ntt_8hpp_source_1l00049"/>00049 
<anchor xml:id="_ntt_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VL&#32;fa(n),&#32;fb(n);
<anchor xml:id="_ntt_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,a.size())&#32;fa[i]=a[i];&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,b.size())&#32;fb[i]=b[i];
<anchor xml:id="_ntt_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ntt(fa);&#32;ntt(fb);
<anchor xml:id="_ntt_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;(fa[i]*=fb[i])%=MOD;
<anchor xml:id="_ntt_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ntt(fa,<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_ntt_8hpp_source_1l00055"/>00055 
<anchor xml:id="_ntt_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(fa.size()+1&gt;a.size()+b.size())&#32;fa.pop_back();
<anchor xml:id="_ntt_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fa;
<anchor xml:id="_ntt_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="_ntt_8hpp_source_1l00059"/>00059 };
</programlisting></section>
