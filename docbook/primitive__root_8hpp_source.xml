<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_primitive__root_8hpp_source" xml:lang="ja">
<title>primitive_root.hpp</title>
<indexterm><primary>math/primitive_root.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_primitive__root_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">pragma</emphasis>&#32;<emphasis role="preprocessor">once</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00003"/>00003 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/others/modcal.hpp&quot;</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00004"/>00004 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/math/prime_factorize.hpp&quot;</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/others/xor128.hpp&quot;</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00006"/>00006 
<anchor xml:id="_primitive__root_8hpp_source_1l00007"/>00007 <emphasis role="comment">///&#32;@brief&#32;n&#32;の原始根を求める</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00008"/>00008 <emphasis role="comment">///&#32;@ref&#32;https://37zigen.com/primitive-root/</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00009"/>00009 <emphasis role="comment">///&#32;@ref&#32;verify:&#32;https://judge.yosupo.jp/problem/primitive_root</emphasis>
<anchor xml:id="_primitive__root_8hpp_source_1l00010"/><link linkend="_primitive__root_8hpp_1adec91ba45a107da3aa0f218785b8df98">00010</link> ll&#32;<link linkend="_primitive__root_8hpp_1adec91ba45a107da3aa0f218785b8df98">PrimitiveRoot</link>(ll&#32;n)&#32;{
<anchor xml:id="_primitive__root_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_primality__test_8hpp_1a50c80146bd471b603303181ec724eaf9">PrimalityTest</link><link linkend="_primality__test_8hpp_1a50c80146bd471b603303181ec724eaf9">(</link>n<link linkend="_primality__test_8hpp_1a50c80146bd471b603303181ec724eaf9">)</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_primitive__root_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n==2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_primitive__root_8hpp_source_1l00013"/>00013 
<anchor xml:id="_primitive__root_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;pf=PrimeFactorize(n-1);
<anchor xml:id="_primitive__root_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_primitive__root_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;i=<link linkend="_xor128_8hpp_1a1769a3e4e9794ae293252dc65f5c2425">Xor128</link><link linkend="_xor128_8hpp_1a1769a3e4e9794ae293252dc65f5c2425">(</link>2<link linkend="_xor128_8hpp_1a1769a3e4e9794ae293252dc65f5c2425">,</link>n<link linkend="_xor128_8hpp_1a1769a3e4e9794ae293252dc65f5c2425">)</link>;
<anchor xml:id="_primitive__root_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ok=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_primitive__root_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">auto</emphasis>&#32;[p,_]:pf)&#32;{
<anchor xml:id="_primitive__root_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ModPow(i,(n-1)/p,n)==1)&#32;{
<anchor xml:id="_primitive__root_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_primitive__root_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_primitive__root_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_primitive__root_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_primitive__root_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ok)&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
<anchor xml:id="_primitive__root_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="_primitive__root_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>-1;
<anchor xml:id="_primitive__root_8hpp_source_1l00027"/>00027 }
</programlisting></section>
