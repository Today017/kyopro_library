<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_random_8hpp_source" xml:lang="ja">
<title>random.hpp</title>
<indexterm><primary>others/random.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_random_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">pragma</emphasis>&#32;<emphasis role="preprocessor">once</emphasis>
<anchor xml:id="_random_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_random_8hpp_source_1l00003"/>00003 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/others/xor128.hpp&quot;</emphasis>
<anchor xml:id="_random_8hpp_source_1l00004"/>00004 
<anchor xml:id="_random_8hpp_source_1l00005"/>00005 <emphasis role="comment">///&#32;@brief&#32;ランダムテストケース生成</emphasis>
<anchor xml:id="_random_8hpp_source_1l00006"/><link linkend="_namespace_random_generator">00006</link> <emphasis role="keyword">namespace</emphasis>&#32;<link linkend="_namespace_random_generator">RandomGenerator</link>&#32;{
<anchor xml:id="_random_8hpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;0&#32;以上&#32;n&#32;未満のランダムな整数を返す</emphasis>
<anchor xml:id="_random_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_random_8hpp_source_1l00009"/><link linkend="_namespace_random_generator_1a5c4e7572d2ceb965e8dcf64536f641c8">00009</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_namespace_random_generator_1a5c4e7572d2ceb965e8dcf64536f641c8">RandomInt</link>(T&#32;n)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Xor128(n);&#32;}
<anchor xml:id="_random_8hpp_source_1l00010"/>00010 
<anchor xml:id="_random_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;[l,&#32;r)&#32;の範囲からランダムな整数を返す</emphasis>
<anchor xml:id="_random_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_random_8hpp_source_1l00013"/><link linkend="_namespace_random_generator_1a0656f0daed147f1b93f12ec860e36cb8">00013</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_namespace_random_generator_1a0656f0daed147f1b93f12ec860e36cb8">RandomInt</link>(T&#32;l,&#32;T&#32;r)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Xor128(l,r);&#32;}
<anchor xml:id="_random_8hpp_source_1l00014"/>00014 
<anchor xml:id="_random_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;配列&#32;a&#32;からランダムな要素を取得し、削除する</emphasis>
<anchor xml:id="_random_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_random_8hpp_source_1l00017"/><link linkend="_namespace_random_generator_1a3c98b920805fef522e251eefc9d34240">00017</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_namespace_random_generator_1a3c98b920805fef522e251eefc9d34240">GetRandomElement</link>(vector&lt;T&gt;&amp;&#32;a)&#32;{
<anchor xml:id="_random_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=a.size();
<anchor xml:id="_random_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx=RandomInt(0,n);
<anchor xml:id="_random_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swap(a[n-1],a[idx]);
<anchor xml:id="_random_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ret=a.back();
<anchor xml:id="_random_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.pop_back();
<anchor xml:id="_random_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00025"/>00025 
<anchor xml:id="_random_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;長さ&#32;n&#32;の&#32;[lo,&#32;hi)&#32;の要素からなるランダムな数列を返す</emphasis>
<anchor xml:id="_random_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@param&#32;no_dup&#32;false&#32;の場合、重複要素を許容する</emphasis>
<anchor xml:id="_random_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_random_8hpp_source_1l00029"/><link linkend="_namespace_random_generator_1af3b9b6bd498d184de06d2b0bb1a93a9a">00029</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1af3b9b6bd498d184de06d2b0bb1a93a9a">vector</link>&lt;<link linkend="_namespace_random_generator_1af3b9b6bd498d184de06d2b0bb1a93a9a">T</link>&gt;<link linkend="_namespace_random_generator_1af3b9b6bd498d184de06d2b0bb1a93a9a">RandomArray</link>(<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;T&#32;lo,&#32;T&#32;hi,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;no_dup=<emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="_random_8hpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;T&gt;ret(n);
<anchor xml:id="_random_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!no_dup)&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;ret[i]=RandomInt(lo,hi);
<anchor xml:id="_random_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_random_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set&lt;T&gt;&#32;st;
<anchor xml:id="_random_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;{
<anchor xml:id="_random_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r=RandomInt(lo,hi);
<anchor xml:id="_random_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(st.count(r))&#32;r=RandomInt(lo,hi);
<anchor xml:id="_random_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[i]=r;
<anchor xml:id="_random_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;st.insert(r);
<anchor xml:id="_random_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00043"/>00043 
<anchor xml:id="_random_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;ランダムなアルファベット文字列を返す</emphasis>
<anchor xml:id="_random_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@param&#32;lower&#32;小文字</emphasis>
<anchor xml:id="_random_8hpp_source_1l00046"/><link linkend="_namespace_random_generator_1a6ce4fc238b4b61e84e9adc79169e674a">00046</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1a6ce4fc238b4b61e84e9adc79169e674a">string</link>&#32;<link linkend="_namespace_random_generator_1a6ce4fc238b4b61e84e9adc79169e674a">RandomAlphabet</link>(<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lower=<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_random_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;string&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;{
<anchor xml:id="_random_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx=RandomInt(26);
<anchor xml:id="_random_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(<emphasis role="keywordtype">char</emphasis>((lower?<emphasis role="stringliteral">&apos;a&apos;</emphasis>:<emphasis role="stringliteral">&apos;A&apos;</emphasis>)+idx));
<anchor xml:id="_random_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00054"/>00054 
<anchor xml:id="_random_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;文字列&#32;s&#32;の要素からなるランダムな文字列を返す</emphasis>
<anchor xml:id="_random_8hpp_source_1l00056"/><link linkend="_namespace_random_generator_1a9725e25be389f5954ba66413f8bb47f6">00056</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1a9725e25be389f5954ba66413f8bb47f6">string</link>&#32;<link linkend="_namespace_random_generator_1a9725e25be389f5954ba66413f8bb47f6">RandomString</link>(<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;string&#32;s)&#32;{
<anchor xml:id="_random_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;string&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m=s.size();
<anchor xml:id="_random_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;{
<anchor xml:id="_random_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx=RandomInt(m);
<anchor xml:id="_random_8hpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(s[idx]);
<anchor xml:id="_random_8hpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00065"/>00065 
<anchor xml:id="_random_8hpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_random_8hpp_source_1l00067"/><link linkend="_namespace_random_generator_1ad40c0778feabd51ed2096289659efcf1">00067</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1ad40c0778feabd51ed2096289659efcf1">vector</link>&lt;<link linkend="_namespace_random_generator_1ad40c0778feabd51ed2096289659efcf1">vector</link>&lt;<link linkend="_namespace_random_generator_1ad40c0778feabd51ed2096289659efcf1">T</link>&gt;&gt;&#32;<link linkend="_namespace_random_generator_1ad40c0778feabd51ed2096289659efcf1">RandomArray2D</link>(<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;w,&#32;T&#32;lo,&#32;T&#32;hi)&#32;{
<anchor xml:id="_random_8hpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;vector&lt;T&gt;&gt;&#32;ret(h,vector&lt;T&gt;(w));
<anchor xml:id="_random_8hpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,h)&#32;ret[i]=RandomArray(w,lo,hi);
<anchor xml:id="_random_8hpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00072"/>00072 
<anchor xml:id="_random_8hpp_source_1l00073"/><link linkend="_namespace_random_generator_1a767667e603fdf0e6b5de453536be74ac">00073</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1a767667e603fdf0e6b5de453536be74ac">vector</link>&lt;<link linkend="_namespace_random_generator_1a767667e603fdf0e6b5de453536be74ac">string</link>&gt;&#32;<link linkend="_namespace_random_generator_1a767667e603fdf0e6b5de453536be74ac">RandomAlphabet2D</link>(<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;<emphasis role="keywordtype">int</emphasis>&#32;w,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lower=<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_random_8hpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;string&gt;&#32;ret(h);
<anchor xml:id="_random_8hpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,h)&#32;ret[i]=RandomAlphabet(w,lower);
<anchor xml:id="_random_8hpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00078"/>00078 
<anchor xml:id="_random_8hpp_source_1l00079"/><link linkend="_namespace_random_generator_1a41a864cbf95c867c8a14293bee4208bf">00079</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1a41a864cbf95c867c8a14293bee4208bf">vector</link>&lt;<link linkend="_namespace_random_generator_1a41a864cbf95c867c8a14293bee4208bf">pair</link>&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;<link linkend="_namespace_random_generator_1a41a864cbf95c867c8a14293bee4208bf">RandomTree</link>(<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
<anchor xml:id="_random_8hpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VI&#32;a=RandomArray&lt;<emphasis role="keywordtype">int</emphasis>&gt;(n-2,1,n+1);
<anchor xml:id="_random_8hpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VI&#32;d(n+1);&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n-2)&#32;d[a[i]]++;&#32;<link linkend="_template_8hpp_1a9af2de86c4be813e9c60ede438bb4cd7">FOR</link>(i,1,n+1)&#32;d[i]++;
<anchor xml:id="_random_8hpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set&lt;<emphasis role="keywordtype">int</emphasis>&gt;&#32;pq;
<anchor xml:id="_random_8hpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a9af2de86c4be813e9c60ede438bb4cd7">FOR</link>(i,1,n+1)&#32;<emphasis role="keywordflow">if</emphasis>(d[i]==1)&#32;pq.insert(i);
<anchor xml:id="_random_8hpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n-2)&#32;{
<anchor xml:id="_random_8hpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;v=(*pq.begin());
<anchor xml:id="_random_8hpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pq.erase(v);
<anchor xml:id="_random_8hpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(make_pair(v,a[i]));
<anchor xml:id="_random_8hpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d[v]--;&#32;d[a[i]]--;
<anchor xml:id="_random_8hpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(d[a[i]]==1)&#32;pq.insert(a[i]);
<anchor xml:id="_random_8hpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(d[a[i]]==0)&#32;pq.erase(a[i]);
<anchor xml:id="_random_8hpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a9af2de86c4be813e9c60ede438bb4cd7">FOR</link>(i,1,n+1)&#32;{
<anchor xml:id="_random_8hpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(d[i]==1)&#32;{
<anchor xml:id="_random_8hpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j=i+1;&#32;j&lt;=n;&#32;j++)&#32;<emphasis role="keywordflow">if</emphasis>(d[j]==1)&#32;{
<anchor xml:id="_random_8hpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(make_pair(i,j));
<anchor xml:id="_random_8hpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_random_8hpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_random_8hpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00104"/>00104 
<anchor xml:id="_random_8hpp_source_1l00105"/><link linkend="_namespace_random_generator_1a628c11cd40bf1a876969eefeea03dcec">00105</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1a628c11cd40bf1a876969eefeea03dcec">vector</link>&lt;<link linkend="_namespace_random_generator_1a628c11cd40bf1a876969eefeea03dcec">pair</link>&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;<link linkend="_namespace_random_generator_1a628c11cd40bf1a876969eefeea03dcec">RandomBinaryTree</link>(<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
<anchor xml:id="_random_8hpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VL&#32;roots={RandomInt(1,n+1)},leaves;
<anchor xml:id="_random_8hpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a9af2de86c4be813e9c60ede438bb4cd7">FOR</link>(i,1,n+1)&#32;<emphasis role="keywordflow">if</emphasis>(i!=roots.back())&#32;leaves.push_back(i);
<anchor xml:id="_random_8hpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(!leaves.empty())&#32;{
<anchor xml:id="_random_8hpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;root=GetRandomElement(roots);
<anchor xml:id="_random_8hpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf=GetRandomElement(leaves);
<anchor xml:id="_random_8hpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(make_pair(root,leaf));
<anchor xml:id="_random_8hpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roots.push_back(leaf);
<anchor xml:id="_random_8hpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!leaves.empty())&#32;{
<anchor xml:id="_random_8hpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leaf=GetRandomElement(leaves);
<anchor xml:id="_random_8hpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(make_pair(root,leaf));
<anchor xml:id="_random_8hpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roots.push_back(leaf);
<anchor xml:id="_random_8hpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00122"/>00122 
<anchor xml:id="_random_8hpp_source_1l00123"/><link linkend="_namespace_random_generator_1a722b56d2093f36cfaf6b2b30929af07d">00123</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_random_generator_1a722b56d2093f36cfaf6b2b30929af07d">vector</link>&lt;<link linkend="_namespace_random_generator_1a722b56d2093f36cfaf6b2b30929af07d">pair</link>&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;<link linkend="_namespace_random_generator_1a722b56d2093f36cfaf6b2b30929af07d">RandomUndirectedGraph</link>(<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;connected=<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_random_8hpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;edges;
<anchor xml:id="_random_8hpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j=i+1;&#32;j&lt;n;&#32;j++)&#32;edges.push_back(make_pair(i+1,j+1));
<anchor xml:id="_random_8hpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ed=edges.size();
<anchor xml:id="_random_8hpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!connected)&#32;{
<anchor xml:id="_random_8hpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VI&#32;idxs=RandomArray&lt;<emphasis role="keywordtype">int</emphasis>&gt;(m,0,ed,<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_random_8hpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;idx:idxs)&#32;ret.push_back(edges[idx]);
<anchor xml:id="_random_8hpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_random_8hpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_random_8hpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.clear();
<anchor xml:id="_random_8hpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VI&#32;idxs=RandomArray&lt;<emphasis role="keywordtype">int</emphasis>&gt;(m,0,ed,<emphasis role="keyword">true</emphasis>),parent(n);
<anchor xml:id="_random_8hpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VVI&#32;sets(n);
<anchor xml:id="_random_8hpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;{
<anchor xml:id="_random_8hpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parent[i]=i;
<anchor xml:id="_random_8hpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sets[i].push_back(i);
<anchor xml:id="_random_8hpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;idx:idxs)&#32;{
<anchor xml:id="_random_8hpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(edges[idx]);
<anchor xml:id="_random_8hpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;[a,b]=edges[idx];
<anchor xml:id="_random_8hpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a--;&#32;b--;
<anchor xml:id="_random_8hpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(parent[a]!=parent[b])&#32;{
<anchor xml:id="_random_8hpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(sets[parent[a]].size()&lt;sets[parent[b]].size())&#32;swap(a,b);
<anchor xml:id="_random_8hpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x:sets[parent[b]])&#32;{
<anchor xml:id="_random_8hpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parent[x]=parent[a];
<anchor xml:id="_random_8hpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sets[parent[a]].push_back(x);
<anchor xml:id="_random_8hpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sets[parent[b]].clear();
<anchor xml:id="_random_8hpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ok=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_random_8hpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<emphasis role="keywordflow">if</emphasis>(parent[i]!=parent[0])&#32;{
<anchor xml:id="_random_8hpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_random_8hpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_random_8hpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ok)&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_random_8hpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;}
<anchor xml:id="_random_8hpp_source_1l00164"/>00164 };
</programlisting></section>
