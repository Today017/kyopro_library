<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_range__set_8hpp_source" xml:lang="ja">
<title>range_set.hpp</title>
<indexterm><primary>data_structure/range_set.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_range__set_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00002"/>00002 
<anchor xml:id="_range__set_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;区間を&#32;set&#32;で管理するデータ構造</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@ref&#32;verify:https://yukicoder.me/submissions/1021763</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00005"/><link linkend="_struct_range_set">00005</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_range_set">RangeSet</link>&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00006"/><link linkend="_struct_range_set_1a5f516de3fe3aafe273e7a6dc62f949ff">00006</link> &#32;&#32;&#32;&#32;<link linkend="_struct_range_set_1a5f516de3fe3aafe273e7a6dc62f949ff">set</link>&lt;<link linkend="_struct_range_set_1a5f516de3fe3aafe273e7a6dc62f949ff">PL</link>&gt;&#32;<link linkend="_struct_range_set_1a5f516de3fe3aafe273e7a6dc62f949ff">dat</link>;
<anchor xml:id="_range__set_8hpp_source_1l00007"/><link linkend="_struct_range_set_1a92262ebd91d5cea9b4c43ffa491232d9">00007</link> &#32;&#32;&#32;&#32;<link linkend="_struct_range_set_1a92262ebd91d5cea9b4c43ffa491232d9">RangeSet</link>()&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dat.insert({-INFL,-INFL});
<anchor xml:id="_range__set_8hpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dat.insert({INFL,INFL});
<anchor xml:id="_range__set_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00011"/>00011 
<anchor xml:id="_range__set_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;区間&#32;[l,&#32;r)&#32;を追加する</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00013"/><link linkend="_struct_range_set_1a2f309dc243b842cc7e0b4d4f57fe0806">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_range_set_1a2f309dc243b842cc7e0b4d4f57fe0806">insert</link>(ll&#32;l,&#32;ll&#32;r)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(l&lt;r);
<anchor xml:id="_range__set_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;it=dat.lower_bound({l,0});
<anchor xml:id="_range__set_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(it!=dat.begin())&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it--;
<anchor xml:id="_range__set_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(it-&gt;second&gt;=l)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l=it-&gt;first;
<anchor xml:id="_range__set_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r=max(r,it-&gt;second);
<anchor xml:id="_range__set_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it=dat.erase(it);
<anchor xml:id="_range__set_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it++;
<anchor xml:id="_range__set_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(it!=dat.end()&amp;&amp;it-&gt;first&lt;=r)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r=max(r,it-&gt;second);
<anchor xml:id="_range__set_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it=dat.erase(it);
<anchor xml:id="_range__set_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dat.insert({l,r});
<anchor xml:id="_range__set_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00032"/>00032 
<anchor xml:id="_range__set_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;区間&#32;[l,&#32;r)&#32;を削除する</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00034"/><link linkend="_struct_range_set_1ada98ff9e07cffbd288efd85c87b1f77f">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_range_set_1ada98ff9e07cffbd288efd85c87b1f77f">erase</link>(ll&#32;l,&#32;ll&#32;r)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(l&lt;r);
<anchor xml:id="_range__set_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;it=dat.lower_bound({l,0});
<anchor xml:id="_range__set_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(it!=dat.begin())&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it--;
<anchor xml:id="_range__set_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(it-&gt;second&gt;l)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;L=it-&gt;first,R=it-&gt;second;
<anchor xml:id="_range__set_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it=dat.erase(it);
<anchor xml:id="_range__set_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(L&lt;l)&#32;dat.insert({L,l});
<anchor xml:id="_range__set_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(r&lt;R)&#32;dat.insert({r,R});
<anchor xml:id="_range__set_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_range__set_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it++;
<anchor xml:id="_range__set_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(it!=dat.end()&amp;&amp;it-&gt;first&lt;r)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;L=it-&gt;first,R=it-&gt;second;
<anchor xml:id="_range__set_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it=dat.erase(it);
<anchor xml:id="_range__set_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(L&lt;l)&#32;dat.insert({L,l});
<anchor xml:id="_range__set_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(r&lt;R)&#32;dat.insert({r,R});
<anchor xml:id="_range__set_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00055"/>00055 
<anchor xml:id="_range__set_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;区間&#32;[l,&#32;r)&#32;が完全に被覆されているかどうかを判定する</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@attention&#32;unverified</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00058"/><link linkend="_struct_range_set_1ae210a109dde6a0646562b2970f9c7447">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_range_set_1ae210a109dde6a0646562b2970f9c7447">is_covered</link>(ll&#32;l,&#32;ll&#32;r)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;it=dat.upper_bound({l,INFL});
<anchor xml:id="_range__set_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(it==dat.begin())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_range__set_8hpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it--;
<anchor xml:id="_range__set_8hpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;it-&gt;first&lt;=l&amp;&amp;r&lt;=it-&gt;second;
<anchor xml:id="_range__set_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00064"/>00064 
<anchor xml:id="_range__set_8hpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;点&#32;x&#32;を含む区間を返す</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;存在しない場合は&#32;`{-INFL,&#32;-INFL}`&#32;を返す</emphasis>
<anchor xml:id="_range__set_8hpp_source_1l00067"/><link linkend="_struct_range_set_1afd40a872558d702201c77783aa73889b">00067</link> &#32;&#32;&#32;&#32;<link linkend="_struct_range_set_1afd40a872558d702201c77783aa73889b">PL</link>&#32;<link linkend="_struct_range_set_1afd40a872558d702201c77783aa73889b">covering_range</link>(ll&#32;x)&#32;{
<anchor xml:id="_range__set_8hpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_struct_range_set_1ae210a109dde6a0646562b2970f9c7447">is_covered</link><link linkend="_struct_range_set_1ae210a109dde6a0646562b2970f9c7447">(</link>x<link linkend="_struct_range_set_1ae210a109dde6a0646562b2970f9c7447">,</link>x+1<link linkend="_struct_range_set_1ae210a109dde6a0646562b2970f9c7447">)</link>)&#32;<emphasis role="keywordflow">return</emphasis>{-<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>,-<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>};
<anchor xml:id="_range__set_8hpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;it=dat.upper_bound({x,INFL});
<anchor xml:id="_range__set_8hpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it--;
<anchor xml:id="_range__set_8hpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*it;
<anchor xml:id="_range__set_8hpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}
<anchor xml:id="_range__set_8hpp_source_1l00073"/>00073 };
</programlisting></section>
