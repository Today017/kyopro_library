<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_segtree__beats_8hpp_source" xml:lang="ja">
<title>segtree_beats.hpp</title>
<indexterm><primary>data_structure/segtree_beats.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_segtree__beats_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis>&#32;<emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00002"/>00002 
<anchor xml:id="_segtree__beats_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;Segment&#32;Tree&#32;Beat!</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00004"/>00004 <emphasis role="comment">///&#32;@ref&#32;https://nyaannyaan.github.io/library/segment-tree/segment-tree-beats.hpp</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00005"/><link linkend="_struct_angel_beats">00005</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_angel_beats">AngelBeats</link>&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00006"/><link linkend="_struct_angel_beats_1_1_node">00006</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<emphasis role="keyword">alignas</emphasis>(32)&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00007"/><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">00007</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>&#32;=&#32;0,&#32;<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;=&#32;0,&#32;<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;=&#32;0;
<anchor xml:id="_segtree__beats_8hpp_source_1l00008"/><link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">00008</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;=&#32;-<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>,&#32;<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>&#32;=&#32;1,&#32;<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;=&#32;<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>,&#32;<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>&#32;=&#32;1,&#32;<link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">add</link>&#32;=&#32;0;
<anchor xml:id="_segtree__beats_8hpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;};
<anchor xml:id="_segtree__beats_8hpp_source_1l00010"/><link linkend="_struct_angel_beats_1a3790c7a7422fd2ea41dad7d913b51f15">00010</link> &#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1a3790c7a7422fd2ea41dad7d913b51f15">vector</link>&lt;<link linkend="_struct_angel_beats_1a3790c7a7422fd2ea41dad7d913b51f15">Node</link>&gt;&#32;<link linkend="_struct_angel_beats_1a3790c7a7422fd2ea41dad7d913b51f15">v</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00011"/><link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">00011</link> &#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>,&#32;<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00012"/><link linkend="_struct_angel_beats_1a443bd6b7add01f16c232edb11c465827">00012</link> &#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1a443bd6b7add01f16c232edb11c465827">AngelBeats</link>()&#32;{}
<anchor xml:id="_segtree__beats_8hpp_source_1l00013"/><link linkend="_struct_angel_beats_1a19aaeeed7af8b469583441d70c54b959">00013</link> &#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1a19aaeeed7af8b469583441d70c54b959">AngelBeats</link>(<emphasis role="keywordtype">int</emphasis>&#32;_n)&#32;:&#32;<link linkend="_struct_angel_beats">AngelBeats</link>(vector&lt;ll&gt;(_n))&#32;{}
<anchor xml:id="_segtree__beats_8hpp_source_1l00014"/><link linkend="_struct_angel_beats_1a125a96bbf7f72c40fc69a7e13443e8dc">00014</link> &#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1a125a96bbf7f72c40fc69a7e13443e8dc">AngelBeats</link>(<emphasis role="keyword">const</emphasis>&#32;vector&lt;ll&gt;&amp;&#32;vc)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>&#32;=&#32;1,&#32;<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>&#32;=&#32;0;
<anchor xml:id="_segtree__beats_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>&#32;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)vc.size())&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>&#32;&lt;&lt;=&#32;1,&#32;<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>++;
<anchor xml:id="_segtree__beats_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v.resize(2&#32;*&#32;n);
<anchor xml:id="_segtree__beats_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ll&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)vc.size();&#32;++i)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v[i&#32;+&#32;n].sum&#32;=&#32;v[i&#32;+&#32;n].g1&#32;=&#32;v[i&#32;+&#32;n].l1&#32;=&#32;vc[i];
<anchor xml:id="_segtree__beats_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ll&#32;i&#32;=&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>&#32;-&#32;1;&#32;i;&#32;--i)&#32;update(i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;[l,&#32;r)&#32;に対し、v[i]&#32;&lt;-&#32;min(v[i],&#32;x)</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00024"/><link linkend="_struct_angel_beats_1a67c2e44c754b5dd0673b2030b4030e85">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_angel_beats_1a67c2e44c754b5dd0673b2030b4030e85">range_chmin</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;ll&#32;x)&#32;{&#32;inner_apply&lt;1&gt;(l,&#32;r,&#32;x);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;[l,&#32;r)&#32;に対し、v[i]&#32;&lt;-&#32;max(v[i],&#32;x)</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00026"/><link linkend="_struct_angel_beats_1ac9b00c11a8c9d6233ad0a4c82517c738">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_angel_beats_1ac9b00c11a8c9d6233ad0a4c82517c738">range_chmax</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;ll&#32;x)&#32;{&#32;inner_apply&lt;2&gt;(l,&#32;r,&#32;x);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;[l,&#32;r)&#32;に対し、v[i]&#32;&lt;-&#32;v[i]&#32;+&#32;x</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00028"/><link linkend="_struct_angel_beats_1aa15c52a208f93f199177ba9dcd4075ad">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_angel_beats_1aa15c52a208f93f199177ba9dcd4075ad">range_add</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;ll&#32;x)&#32;{&#32;inner_apply&lt;3&gt;(l,&#32;r,&#32;x);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;[l,&#32;r)&#32;に対し、v[i]&#32;&lt;-&#32;x</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00030"/><link linkend="_struct_angel_beats_1a000ae625539fb25bd1fa22407a78893d">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_angel_beats_1a000ae625539fb25bd1fa22407a78893d">range_update</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;ll&#32;x)&#32;{&#32;inner_apply&lt;4&gt;(l,&#32;r,&#32;x);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;min[l,&#32;r)(v[i])&#32;を返す</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00032"/><link linkend="_struct_angel_beats_1a4fcefcfbe67f6b936d04c466517cc82f">00032</link> &#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_angel_beats_1a4fcefcfbe67f6b936d04c466517cc82f">range_min</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;inner_fold&lt;1&gt;(l,&#32;r);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;max[l,&#32;r)(v[i])&#32;を返す</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00034"/><link linkend="_struct_angel_beats_1a697f138772500873140fbf1e220be15a">00034</link> &#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_angel_beats_1a697f138772500873140fbf1e220be15a">range_max</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;inner_fold&lt;2&gt;(l,&#32;r);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;sum[l,&#32;r)(v[i])&#32;を返す</emphasis>
<anchor xml:id="_segtree__beats_8hpp_source_1l00036"/><link linkend="_struct_angel_beats_1a3ac7d0122289b20297f73e5bdb848f58">00036</link> &#32;&#32;&#32;&#32;ll&#32;<link linkend="_struct_angel_beats_1a3ac7d0122289b20297f73e5bdb848f58">range_sum</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;inner_fold&lt;3&gt;(l,&#32;r);&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00037"/>00037 
<anchor xml:id="_segtree__beats_8hpp_source_1l00038"/>00038 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_segtree__beats_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;update(<emphasis role="keywordtype">int</emphasis>&#32;k)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;p&#32;=&#32;v[k];
<anchor xml:id="_segtree__beats_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;l&#32;=&#32;v[k&#32;*&#32;2&#32;+&#32;0];
<anchor xml:id="_segtree__beats_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;r&#32;=&#32;v[k&#32;*&#32;2&#32;+&#32;1];
<anchor xml:id="_segtree__beats_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>&#32;+&#32;r<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;==&#32;r<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;=&#32;max(l<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>,&#32;r<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>&#32;+&#32;r<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;f&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;&gt;&#32;r<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;=&#32;f&#32;?&#32;l<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;:&#32;r<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>&#32;=&#32;f&#32;?&#32;l<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>&#32;:&#32;r<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;=&#32;max(f&#32;?&#32;r<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;:&#32;l<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>,&#32;f&#32;?&#32;l<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;:&#32;r<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;==&#32;r<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;=&#32;min(l<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>,&#32;r<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>&#32;+&#32;r<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;f&#32;=&#32;l<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;&lt;&#32;r<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;=&#32;f&#32;?&#32;l<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;:&#32;r<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>&#32;=&#32;f&#32;?&#32;l<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>&#32;:&#32;r<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;=&#32;min(f&#32;?&#32;r<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;:&#32;l<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>,&#32;f&#32;?&#32;l<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;:&#32;r<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;push_add(<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;p&#32;=&#32;v[k];
<anchor xml:id="_segtree__beats_8hpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>&#32;+=&#32;x&#32;&lt;&lt;&#32;(<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>&#32;+&#32;__builtin_clz(k)&#32;-&#32;31);
<anchor xml:id="_segtree__beats_8hpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;+=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;+=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;!=&#32;-<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;+=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;!=&#32;<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>)&#32;p<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;+=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">.</link><link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">add</link>&#32;+=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;push_min(<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;p&#32;=&#32;v[k];
<anchor xml:id="_segtree__beats_8hpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>&#32;+=&#32;(x&#32;-&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>)&#32;*&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">.</link><link linkend="_struct_angel_beats_1_1_node_1a7c76fb2c5a8885ca554d01dd16c3d5ed">gc</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;==&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>)&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;==&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>)&#32;p<link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">.</link><link linkend="_struct_angel_beats_1_1_node_1aedeeba19f51211a2faca5e56dd36c13d">l2</link>&#32;=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;push_max(<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;p&#32;=&#32;v[k];
<anchor xml:id="_segtree__beats_8hpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>&#32;+=&#32;(x&#32;-&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>)&#32;*&#32;p<link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">.</link><link linkend="_struct_angel_beats_1_1_node_1af657172f336a00556d3c037e340f6a00">lc</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;==&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>)&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>&#32;=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;==&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>)&#32;p<link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">.</link><link linkend="_struct_angel_beats_1_1_node_1a7f13ab81ba13f72912b303ef84174ccd">g2</link>&#32;=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>&#32;=&#32;x;
<anchor xml:id="_segtree__beats_8hpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;push(<emphasis role="keywordtype">int</emphasis>&#32;k)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;p&#32;=&#32;v[k];
<anchor xml:id="_segtree__beats_8hpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p<link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">.</link><link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">add</link>&#32;!=&#32;0)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;push_add(k&#32;*&#32;2&#32;+&#32;0,&#32;p<link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">.</link><link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">add</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;push_add(k&#32;*&#32;2&#32;+&#32;1,&#32;p<link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">.</link><link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">add</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p<link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">.</link><link linkend="_struct_angel_beats_1_1_node_1a077eb8bcd44334f40d1ab75bb38a09ea">add</link>&#32;=&#32;0;
<anchor xml:id="_segtree__beats_8hpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.g1&#32;&lt;&#32;v[k&#32;*&#32;2&#32;+&#32;0].g1)&#32;push_min(k&#32;*&#32;2&#32;+&#32;0,&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.l1&#32;&gt;&#32;v[k&#32;*&#32;2&#32;+&#32;0].l1)&#32;push_max(k&#32;*&#32;2&#32;+&#32;0,&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.g1&#32;&lt;&#32;v[k&#32;*&#32;2&#32;+&#32;1].g1)&#32;push_min(k&#32;*&#32;2&#32;+&#32;1,&#32;p<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.l1&#32;&gt;&#32;v[k&#32;*&#32;2&#32;+&#32;1].l1)&#32;push_max(k&#32;*&#32;2&#32;+&#32;1,&#32;p<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;subtree_chmin(<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v[k].g1&#32;&lt;=&#32;x)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v[k].g2&#32;&lt;&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;push_min(k,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;push(k);
<anchor xml:id="_segtree__beats_8hpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subtree_chmin(k&#32;*&#32;2&#32;+&#32;0,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subtree_chmin(k&#32;*&#32;2&#32;+&#32;1,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update(k);
<anchor xml:id="_segtree__beats_8hpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;subtree_chmax(<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;=&#32;v[k].l1)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;&#32;v[k].l2)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;push_max(k,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;push(k);
<anchor xml:id="_segtree__beats_8hpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subtree_chmax(k&#32;*&#32;2&#32;+&#32;0,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subtree_chmax(k&#32;*&#32;2&#32;+&#32;1,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update(k);
<anchor xml:id="_segtree__beats_8hpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">int</emphasis>&#32;cmd&gt;
<anchor xml:id="_segtree__beats_8hpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_apply(<emphasis role="keywordtype">int</emphasis>&#32;k,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;1)&#32;subtree_chmin(k,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;2)&#32;subtree_chmax(k,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;3)&#32;push_add(k,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;4)&#32;subtree_chmin(k,&#32;x),&#32;subtree_chmax(k,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">int</emphasis>&#32;cmd&gt;
<anchor xml:id="_segtree__beats_8hpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;inner_apply(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r,&#32;ll&#32;x)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l&#32;==&#32;r)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;+=&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>,&#32;r&#32;+=&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>;&#32;i&#32;&gt;=&#32;1;&#32;i--)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((l&#32;&gt;&gt;&#32;i)&#32;&lt;&lt;&#32;i)&#32;!=&#32;l)&#32;push(l&#32;&gt;&gt;&#32;i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((r&#32;&gt;&gt;&#32;i)&#32;&lt;&lt;&#32;i)&#32;!=&#32;r)&#32;push((r&#32;-&#32;1)&#32;&gt;&gt;&#32;i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;l2&#32;=&#32;l,&#32;r2&#32;=&#32;r;
<anchor xml:id="_segtree__beats_8hpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;&#32;r)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l&#32;&amp;&#32;1)&#32;_apply&lt;cmd&gt;(l++,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&amp;&#32;1)&#32;_apply&lt;cmd&gt;(--r,&#32;x);
<anchor xml:id="_segtree__beats_8hpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_segtree__beats_8hpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_segtree__beats_8hpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;l2;
<anchor xml:id="_segtree__beats_8hpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;r2;
<anchor xml:id="_segtree__beats_8hpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>;&#32;i++)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((l&#32;&gt;&gt;&#32;i)&#32;&lt;&lt;&#32;i)&#32;!=&#32;l)&#32;update(l&#32;&gt;&gt;&#32;i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((r&#32;&gt;&gt;&#32;i)&#32;&lt;&lt;&#32;i)&#32;!=&#32;r)&#32;update((r&#32;-&#32;1)&#32;&gt;&gt;&#32;i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">int</emphasis>&#32;cmd&gt;
<anchor xml:id="_segtree__beats_8hpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;ll&#32;e()&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;2)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_segtree__beats_8hpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">int</emphasis>&#32;cmd&gt;
<anchor xml:id="_segtree__beats_8hpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;op(ll&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_angel_beats_1_1_node">Node</link>&amp;&#32;b)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;1)&#32;a&#32;=&#32;min(a,&#32;b<link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">.</link><link linkend="_struct_angel_beats_1_1_node_1a64c12f1ec41eb116ba8da61caa2f289d">l1</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;2)&#32;a&#32;=&#32;max(a,&#32;b<link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">.</link><link linkend="_struct_angel_beats_1_1_node_1ade719cc35abcc5af6424fa1d599e48a2">g1</link>);
<anchor xml:id="_segtree__beats_8hpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;3)&#32;a&#32;+=&#32;b<link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">.</link><link linkend="_struct_angel_beats_1_1_node_1afbadfe98296c9dafbc8d47f76f510fba">sum</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">int</emphasis>&#32;cmd&gt;
<anchor xml:id="_segtree__beats_8hpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;ll&#32;inner_fold(<emphasis role="keywordtype">int</emphasis>&#32;l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;r)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l&#32;==&#32;r)&#32;<emphasis role="keywordflow">return</emphasis>&#32;e&lt;cmd&gt;();
<anchor xml:id="_segtree__beats_8hpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;+=&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>,&#32;r&#32;+=&#32;<link linkend="_struct_angel_beats_1a3b15aa0697428b129b15307fa5b6e363">n</link>;
<anchor xml:id="_segtree__beats_8hpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;<link linkend="_struct_angel_beats_1a125d02f83e433d4be2724d5d5e0e982f">log</link>;&#32;i&#32;&gt;=&#32;1;&#32;i--)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((l&#32;&gt;&gt;&#32;i)&#32;&lt;&lt;&#32;i)&#32;!=&#32;l)&#32;push(l&#32;&gt;&gt;&#32;i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((r&#32;&gt;&gt;&#32;i)&#32;&lt;&lt;&#32;i)&#32;!=&#32;r)&#32;push((r&#32;-&#32;1)&#32;&gt;&gt;&#32;i);
<anchor xml:id="_segtree__beats_8hpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ll&#32;lx&#32;=&#32;e&lt;cmd&gt;(),&#32;rx&#32;=&#32;e&lt;cmd&gt;();
<anchor xml:id="_segtree__beats_8hpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(l&#32;&lt;&#32;r)&#32;{
<anchor xml:id="_segtree__beats_8hpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l&#32;&amp;&#32;1)&#32;op&lt;cmd&gt;(lx,&#32;v[l++]);
<anchor xml:id="_segtree__beats_8hpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&amp;&#32;1)&#32;op&lt;cmd&gt;(rx,&#32;v[--r]);
<anchor xml:id="_segtree__beats_8hpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_segtree__beats_8hpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_segtree__beats_8hpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;1)&#32;lx&#32;=&#32;min(lx,&#32;rx);
<anchor xml:id="_segtree__beats_8hpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;2)&#32;lx&#32;=&#32;max(lx,&#32;rx);
<anchor xml:id="_segtree__beats_8hpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(cmd&#32;==&#32;3)&#32;lx&#32;+=&#32;rx;
<anchor xml:id="_segtree__beats_8hpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lx;
<anchor xml:id="_segtree__beats_8hpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;}
<anchor xml:id="_segtree__beats_8hpp_source_1l00185"/>00185 };
</programlisting></section>
