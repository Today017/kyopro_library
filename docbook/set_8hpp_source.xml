<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_set_8hpp_source" xml:lang="ja">
<title>set.hpp</title>
<indexterm><primary>data_structure/set.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_set_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_set_8hpp_source_1l00002"/>00002 
<anchor xml:id="_set_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;std::set&#32;ラッパー</emphasis>
<anchor xml:id="_set_8hpp_source_1l00004"/>00004 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_set_8hpp_source_1l00005"/><link linkend="_struct_set">00005</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_set">Set</link>:<link linkend="_struct_set">set</link>&lt;<link linkend="_struct_set">T</link>&gt;&#32;{
<anchor xml:id="_set_8hpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_struct_set">set</link>&lt;<link linkend="_struct_set">T</link>&gt;::<link linkend="_struct_set">set</link>;
<anchor xml:id="_set_8hpp_source_1l00007"/><link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">00007</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00008"/><link linkend="_struct_set_1ad50edd8c655871b6fbe7280b2d29e673">00008</link> &#32;&#32;&#32;&#32;<link linkend="_struct_set_1ad50edd8c655871b6fbe7280b2d29e673">Set</link>()=<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_set_8hpp_source_1l00009"/>00009 
<anchor xml:id="_set_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;コンストラクタ</emphasis>
<anchor xml:id="_set_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@param&#32;not_found&#32;指定の値が見つからなかったときに返す値</emphasis>
<anchor xml:id="_set_8hpp_source_1l00012"/><link linkend="_struct_set_1a58491814e28dcd2876bc6ce87f3cc809">00012</link> &#32;&#32;&#32;&#32;<link linkend="_struct_set_1a58491814e28dcd2876bc6ce87f3cc809">Set</link>(T&#32;not_found=-1)&#32;{&#32;<emphasis role="keyword">this</emphasis><link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">-&gt;</link><link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>=not_found;&#32;}
<anchor xml:id="_set_8hpp_source_1l00013"/>00013 
<anchor xml:id="_set_8hpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;最小値を返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00015"/><link linkend="_struct_set_1a9625ca33788f09648b240f98c0eb33a7">00015</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a9625ca33788f09648b240f98c0eb33a7">min</link>()&#32;{
<anchor xml:id="_set_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>-&gt;empty())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*<emphasis role="keyword">this</emphasis>-&gt;begin();
<anchor xml:id="_set_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00019"/>00019 
<anchor xml:id="_set_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;最大値を返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00021"/><link linkend="_struct_set_1ab1cbe6674e6ec706e07d03e13bf20dcd">00021</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1ab1cbe6674e6ec706e07d03e13bf20dcd">max</link>()&#32;{
<anchor xml:id="_set_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>-&gt;empty())<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*<emphasis role="keyword">this</emphasis>-&gt;rbegin();
<anchor xml:id="_set_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00025"/>00025 
<anchor xml:id="_set_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;最小値を返し、削除する</emphasis>
<anchor xml:id="_set_8hpp_source_1l00027"/><link linkend="_struct_set_1a77887906e2020e72f3d99af29e98db67">00027</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a77887906e2020e72f3d99af29e98db67">pop_min</link>()&#32;{
<anchor xml:id="_set_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>-&gt;empty())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;ret=<link linkend="_struct_set_1a9625ca33788f09648b240f98c0eb33a7">min</link><link linkend="_struct_set_1a9625ca33788f09648b240f98c0eb33a7">(</link><link linkend="_struct_set_1a9625ca33788f09648b240f98c0eb33a7">)</link>;
<anchor xml:id="_set_8hpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>-&gt;erase(ret);
<anchor xml:id="_set_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_set_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00033"/>00033 
<anchor xml:id="_set_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;最大値を返し、削除する</emphasis>
<anchor xml:id="_set_8hpp_source_1l00035"/><link linkend="_struct_set_1a5a23b8d407841f11cff0d6a19f4a9faf">00035</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a5a23b8d407841f11cff0d6a19f4a9faf">pop_max</link>()&#32;{
<anchor xml:id="_set_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>-&gt;empty())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;ret=<link linkend="_struct_set_1ab1cbe6674e6ec706e07d03e13bf20dcd">max</link><link linkend="_struct_set_1ab1cbe6674e6ec706e07d03e13bf20dcd">(</link><link linkend="_struct_set_1ab1cbe6674e6ec706e07d03e13bf20dcd">)</link>;
<anchor xml:id="_set_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>-&gt;erase(ret);
<anchor xml:id="_set_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_set_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00041"/>00041 
<anchor xml:id="_set_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;が含まれているか否かを返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00043"/><link linkend="_struct_set_1ab53c8f03bd84270af37c399351e085fa">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_set_1ab53c8f03bd84270af37c399351e085fa">contains</link>(T&#32;x)&#32;{
<anchor xml:id="_set_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>-&gt;find(x)!=<emphasis role="keyword">this</emphasis>-&gt;end();
<anchor xml:id="_set_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00046"/>00046 
<anchor xml:id="_set_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;を削除する</emphasis>
<anchor xml:id="_set_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;が含まれていたか否かを返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00049"/><link linkend="_struct_set_1ad1f6464e4c982ea6ec2846fc33ccd86e">00049</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_set_1ad1f6464e4c982ea6ec2846fc33ccd86e">discard</link>(T&#32;x)&#32;{
<anchor xml:id="_set_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itr=<emphasis role="keyword">this</emphasis>-&gt;find(x);
<anchor xml:id="_set_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(itr==<emphasis role="keyword">this</emphasis>-&gt;end())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_set_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>-&gt;erase(itr);
<anchor xml:id="_set_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_set_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00055"/>00055 
<anchor xml:id="_set_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;より大きい最小の値を返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00057"/><link linkend="_struct_set_1a5f67dcbc5701f7af323117f7473329a6">00057</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a5f67dcbc5701f7af323117f7473329a6">gt</link>(T&#32;x)&#32;{
<anchor xml:id="_set_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itr=<emphasis role="keyword">this</emphasis>-&gt;upper_bound(x);
<anchor xml:id="_set_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(itr==<emphasis role="keyword">this</emphasis>-&gt;end())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*itr;
<anchor xml:id="_set_8hpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00062"/>00062 
<anchor xml:id="_set_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;以上の最小の値を返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00064"/><link linkend="_struct_set_1a7e8d9363142571d7b1866bc9241c3b01">00064</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a7e8d9363142571d7b1866bc9241c3b01">ge</link>(T&#32;x)&#32;{
<anchor xml:id="_set_8hpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itr=<emphasis role="keyword">this</emphasis>-&gt;lower_bound(x);
<anchor xml:id="_set_8hpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(itr==<emphasis role="keyword">this</emphasis>-&gt;end())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*itr;
<anchor xml:id="_set_8hpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00069"/>00069 
<anchor xml:id="_set_8hpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;以下の最大の値を返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00071"/><link linkend="_struct_set_1a9dc583428486cda3dfc0b16beb4a2981">00071</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a9dc583428486cda3dfc0b16beb4a2981">le</link>(T&#32;x)&#32;{
<anchor xml:id="_set_8hpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itr=<emphasis role="keyword">this</emphasis>-&gt;upper_bound(x);
<anchor xml:id="_set_8hpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(itr==<emphasis role="keyword">this</emphasis>-&gt;begin())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*prev(itr);
<anchor xml:id="_set_8hpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00076"/>00076 
<anchor xml:id="_set_8hpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;x&#32;未満の最大値の値を返す</emphasis>
<anchor xml:id="_set_8hpp_source_1l00078"/><link linkend="_struct_set_1a08ba7ca11b7433208e0c8ad341964542">00078</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_set_1a08ba7ca11b7433208e0c8ad341964542">lt</link>(T&#32;x)&#32;{
<anchor xml:id="_set_8hpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itr=<emphasis role="keyword">this</emphasis>-&gt;lower_bound(x);
<anchor xml:id="_set_8hpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(itr==<emphasis role="keyword">this</emphasis>-&gt;begin())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_set_1a970a07f6923c83c2fa1195803edb6364">not_found</link>;
<anchor xml:id="_set_8hpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>*prev(itr);
<anchor xml:id="_set_8hpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}
<anchor xml:id="_set_8hpp_source_1l00083"/>00083 };
</programlisting></section>
