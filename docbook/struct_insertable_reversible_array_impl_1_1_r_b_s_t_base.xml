<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base" xml:lang="ja">
<title>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt; 構造体テンプレート</title>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary></indexterm>
<para>
<computeroutput>#include &quot;insert_reverse_array.hpp&quot;</computeroutput>
</para>
<simplesect>
    <title>公開型    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> = Node*</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename... Args&gt; </para><para><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1aa8b6128c8a3a8fefe6919c8068788f5e">my_new</link> (Args...args)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ad3073c30f3809a630a7a90ae2a877c74">my_del</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t)</para>
</listitem>
            <listitem><para><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a9337a3fcb64ce0db1512ab250b0776b5">make_tree</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a61257b4dedade09e42d6f79c48b3938c">size</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t) const</para>
</listitem>
            <listitem><para><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a786a13ae117b5d6a66e4fdee580da88e">merge</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> l, <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> r)</para>
</listitem>
            <listitem><para>pair&lt; <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link>, <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> &gt; <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a09ee6014e81276efd5df9af49f61e735">split</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t, int k)</para>
</listitem>
            <listitem><para><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ae1c4c75a693123736e99ff1ab285f4bc">build</link> (int l, int r, const vector&lt; decltype(Node::key)&gt; &amp;v)</para>
</listitem>
            <listitem><para><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1acf244c4471e356a85278e993db8201b3">build</link> (const vector&lt; decltype(Node::key)&gt; &amp;v)</para>
</listitem>
            <listitem><para>template&lt;typename... Args&gt; </para><para>void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a6b8d4d3825b9d530359ee07fc0a51b30">insert</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> &amp;t, int k, const Args &amp;...args)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a8fe3d734da7206c01b3598bde497dd83">erase</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> &amp;t, int k)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>限定公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ab3be2623dd83bcea2293de98495a848a">count</link> (const <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t) const</para>
</listitem>
            <listitem><para>virtual void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ae6287f00bdcec7ba70119cf3eabed5c8">push</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link>)=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1afc27924b11d50cb74621f223c1f5408d">update</link> (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link>)=0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>静的限定公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>static uint64_t <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1af5b7726452c97a737444c3281ddc7749">rng</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>
<simplesect><title>template&lt;typename Node&gt;<?linebreak?>struct InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</title></simplesect>
<para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00005">5</link> 行目に定義があります。</para>
</section>
<section>
<title>型定義メンバ詳解</title>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64"/><section>
    <title>Ptr</title>
<indexterm><primary>Ptr</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>Ptr</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::Ptr = Node*</computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00006">6</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1aa8b6128c8a3a8fefe6919c8068788f5e"/><section>
    <title>my_new()</title>
<indexterm><primary>my_new</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>my_new</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><computeroutput>template&lt;typename... Args&gt; </computeroutput><para><computeroutput><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::my_new (Args... args)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00008">8</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ad3073c30f3809a630a7a90ae2a877c74"/><section>
    <title>my_del()</title>
<indexterm><primary>my_del</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>my_del</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::my_del (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00009">9</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a9337a3fcb64ce0db1512ab250b0776b5"/><section>
    <title>make_tree()</title>
<indexterm><primary>make_tree</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>make_tree</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::make_tree ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00010">10</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a61257b4dedade09e42d6f79c48b3938c"/><section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>size</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::size (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00011">11</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a786a13ae117b5d6a66e4fdee580da88e"/><section>
    <title>merge()</title>
<indexterm><primary>merge</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>merge</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::merge (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> l, <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> r)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00012">12</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a09ee6014e81276efd5df9af49f61e735"/><section>
    <title>split()</title>
<indexterm><primary>split</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>split</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>pair&lt; <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link>, <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> &gt; <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::split (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t, int k)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00024">24</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ae1c4c75a693123736e99ff1ab285f4bc"/><section>
    <title>build()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>build</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>build</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::build (int l, int r, const vector&lt; decltype(Node::key)&gt; &amp; v)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00037">37</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1acf244c4471e356a85278e993db8201b3"/><section>
    <title>build()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>build</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>build</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput><link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::build (const vector&lt; decltype(Node::key)&gt; &amp; v)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00045">45</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a6b8d4d3825b9d530359ee07fc0a51b30"/><section>
    <title>insert()</title>
<indexterm><primary>insert</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>insert</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><computeroutput>template&lt;typename... Args&gt; </computeroutput><para><computeroutput>void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::insert (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> &amp; t, int k, const Args &amp;... args)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00049">49</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a8fe3d734da7206c01b3598bde497dd83"/><section>
    <title>erase()</title>
<indexterm><primary>erase</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>erase</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::erase (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> &amp; t, int k)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00053">53</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1af5b7726452c97a737444c3281ddc7749"/><section>
    <title>rng()</title>
<indexterm><primary>rng</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>rng</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>static uint64_t <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::rng ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00061">61</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ab3be2623dd83bcea2293de98495a848a"/><section>
    <title>count()</title>
<indexterm><primary>count</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>count</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>int <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::count (const <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> t) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
 <link linkend="_insert__reverse__array_8hpp_source">insert_reverse_array.hpp</link> の <link linkend="_insert__reverse__array_8hpp_source_1l00065">65</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1ae6287f00bdcec7ba70119cf3eabed5c8"/><section>
    <title>push()</title>
<indexterm><primary>push</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>push</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>virtual void <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::push (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
<link linkend="_struct_insertable_reversible_array_impl_1_1_lazy_reversible_r_b_s_t_1ac8db7d48192fd143cf9c100bc8ca1a04">InsertableReversibleArrayImpl::LazyReversibleRBST&lt; T, E, f, g, h, ts &gt;</link>, <link linkend="_struct_insertable_reversible_array_impl_1_1_lazy_reversible_r_b_s_t_1ac8db7d48192fd143cf9c100bc8ca1a04">InsertableReversibleArrayImpl::LazyReversibleRBST&lt; T, T, InsertableReversibleArrayImpl::op&lt; T &gt;, InsertableReversibleArrayImpl::op&lt; T &gt;, InsertableReversibleArrayImpl::op&lt; T &gt;, InsertableReversibleArrayImpl::e&lt; T &gt; &gt;</link>で実装されています。</para>
</section>
<anchor xml:id="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1afc27924b11d50cb74621f223c1f5408d"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</secondary></indexterm>
<indexterm><primary>InsertableReversibleArrayImpl::RBSTBase&lt; Node &gt;</primary><secondary>update</secondary></indexterm>
<computeroutput>template&lt;typename Node&gt; </computeroutput><para><computeroutput>virtual <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> <link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base">InsertableReversibleArrayImpl::RBSTBase</link>&lt; Node &gt;::update (<link linkend="_struct_insertable_reversible_array_impl_1_1_r_b_s_t_base_1a180ae88301ad385924163bd074675c64">Ptr</link> )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
<link linkend="_struct_insertable_reversible_array_impl_1_1_lazy_reversible_r_b_s_t_1a10c534293743a5329c0fc6f66b9135ae">InsertableReversibleArrayImpl::LazyReversibleRBST&lt; T, E, f, g, h, ts &gt;</link>, <link linkend="_struct_insertable_reversible_array_impl_1_1_lazy_reversible_r_b_s_t_1a10c534293743a5329c0fc6f66b9135ae">InsertableReversibleArrayImpl::LazyReversibleRBST&lt; T, T, InsertableReversibleArrayImpl::op&lt; T &gt;, InsertableReversibleArrayImpl::op&lt; T &gt;, InsertableReversibleArrayImpl::op&lt; T &gt;, InsertableReversibleArrayImpl::e&lt; T &gt; &gt;</link>で実装されています。</para>
</section>
<para>
この構造体詳解は次のファイルから抽出されました:</para>
data_structure/<link linkend="_insert__reverse__array_8hpp">insert_reverse_array.hpp</link></section>
</section>
