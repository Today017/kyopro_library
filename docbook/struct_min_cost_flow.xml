<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_min_cost_flow" xml:lang="ja">
<title>MinCostFlow 構造体</title>
<indexterm><primary>MinCostFlow</primary></indexterm>
<para>

<para>最小費用流 </para>
 
</para>
<para>
<computeroutput>#include &quot;min_cost_flow.hpp&quot;</computeroutput>
</para>
<simplesect>
    <title>クラス    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_min_cost_flow_1_1_edge">Edge</link></para>

<para>辺構造体 </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_min_cost_flow_1a127b5fdc43378b741da7f935770e4a7c">MinCostFlow</link> (int n)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_min_cost_flow_1a5430122987ebfe40c88c82b50012df30">add_edge</link> (int from, int to, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> cap, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> cost)</para>

<para>s -&gt; t に容量 cap, コスト cost の辺を追加する </para>
</listitem>
            <listitem><para>vector&lt; <link linkend="_struct_min_cost_flow_1_1_edge">Edge</link> &gt; <link linkend="_struct_min_cost_flow_1a54a6053fe01e39bc1a54a28864982d9e">get_edges</link> ()</para>

<para>全ての辺を返す </para>
</listitem>
            <listitem><para><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_min_cost_flow_1ad73724ca7ad68fef33e7e1c1f4271ccf">flow</link> (int s, int t, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> f)</para>

<para>s から t へ流量 f の最小費用流のコストを求める </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>

<para>最小費用流 </para>



<para><note><title>覚え書き</title>

<para>コスト負の辺を許容する。負の閉路はダメ。 </para>
</note>
</para>
<para>
 <link linkend="_min__cost__flow_8hpp_source">min_cost_flow.hpp</link> の <link linkend="_min__cost__flow_8hpp_source_1l00005">5</link> 行目に定義があります。</para>
</section>
<section>
<title>構築子と解体子</title>
<anchor xml:id="_struct_min_cost_flow_1a127b5fdc43378b741da7f935770e4a7c"/><section>
    <title>MinCostFlow()</title>
<indexterm><primary>MinCostFlow</primary><secondary>MinCostFlow</secondary></indexterm>
<indexterm><primary>MinCostFlow</primary><secondary>MinCostFlow</secondary></indexterm>
<para><computeroutput>MinCostFlow::MinCostFlow (int n)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_min__cost__flow_8hpp_source">min_cost_flow.hpp</link> の <link linkend="_min__cost__flow_8hpp_source_1l00017">17</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_struct_min_cost_flow_1a5430122987ebfe40c88c82b50012df30"/><section>
    <title>add_edge()</title>
<indexterm><primary>add_edge</primary><secondary>MinCostFlow</secondary></indexterm>
<indexterm><primary>MinCostFlow</primary><secondary>add_edge</secondary></indexterm>
<para><computeroutput>void MinCostFlow::add_edge (int from, int to, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> cap, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> cost)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>s -&gt; t に容量 cap, コスト cost の辺を追加する </para>
</para>

<para><note><title>覚え書き</title>

<para>cost は負でも良い </para>
</note>
</para>
<para>
 <link linkend="_min__cost__flow_8hpp_source">min_cost_flow.hpp</link> の <link linkend="_min__cost__flow_8hpp_source_1l00021">21</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_min_cost_flow_1a54a6053fe01e39bc1a54a28864982d9e"/><section>
    <title>get_edges()</title>
<indexterm><primary>get_edges</primary><secondary>MinCostFlow</secondary></indexterm>
<indexterm><primary>MinCostFlow</primary><secondary>get_edges</secondary></indexterm>
<para><computeroutput>vector&lt; <link linkend="_struct_min_cost_flow_1_1_edge">Edge</link> &gt; MinCostFlow::get_edges ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>全ての辺を返す </para>
</para>

<para><note><title>覚え書き</title>

<para>O(V+E) </para>

<para>直前に流した flow による残余であることに注意 </para>
</note>
</para>
<para>
 <link linkend="_min__cost__flow_8hpp_source">min_cost_flow.hpp</link> の <link linkend="_min__cost__flow_8hpp_source_1l00029">29</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_min_cost_flow_1ad73724ca7ad68fef33e7e1c1f4271ccf"/><section>
    <title>flow()</title>
<indexterm><primary>flow</primary><secondary>MinCostFlow</secondary></indexterm>
<indexterm><primary>MinCostFlow</primary><secondary>flow</secondary></indexterm>
<para><computeroutput><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MinCostFlow::flow (int s, int t, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> f)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>s から t へ流量 f の最小費用流のコストを求める </para>
</para>

<para>流せない場合は INFL を返す <note><title>覚え書き</title>

<para>O(FE log V) </para>
</note>
</para>
<para>
 <link linkend="_min__cost__flow_8hpp_source">min_cost_flow.hpp</link> の <link linkend="_min__cost__flow_8hpp_source_1l00038">38</link> 行目に定義があります。</para>
<para>
参照先 <link linkend="_template_8hpp_source_1l00015">INFL</link>.</para>
</section>
<para>
この構造体詳解は次のファイルから抽出されました:</para>
graph/flow/<link linkend="_min__cost__flow_8hpp">min_cost_flow.hpp</link></section>
</section>
