<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_mod_int" xml:lang="ja">
<title>ModInt&lt; MOD &gt; 構造体テンプレート</title>
<indexterm><primary>ModInt&lt; MOD &gt;</primary></indexterm>
<para>

<para><link linkend="_struct_mod_int">ModInt</link> </para>
 
</para>
<para>
<computeroutput>#include &quot;modint.hpp&quot;</computeroutput>
</para>
<simplesect>
    <title>公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_mod_int_1a08a1301149cd7efb6d5944167950785a">ModInt</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> x=0)</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1a2a7d668875266bfd2fe17cc836597603">operator-</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1a9aee9a9ff83c64adb4bdf774258f4850">operator+</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int_1a5249b67fb197e68610eab2636b7a333f">operator+=</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int_1a8a315af2621f2f9b566fdc7c9dc992fe">operator-=</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int_1a0e9287889960cab1e08a7b6e528adb23">operator*=</link> (const <link linkend="_struct_mod_int">ModInt</link> other)</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int_1a96078358d334d2352bc93718741f5cc6">operator/=</link> (<link linkend="_struct_mod_int">ModInt</link> other)</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1aec96e1870fe596b4425267e977be7528">operator+</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1aeed29e8004b071baf5f2bd0516e68fcf">operator-</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1a549ff9eaef1ee925bff71ecaaaa21a2a">operator*</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1ac624a8f8b7290c295ca265bbf8f07e17">operator/</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other) const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_mod_int_1ad98d5a5c762d0d1662f9df246fa13ebd">operator==</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other) const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_mod_int_1a964f2f06ec3cb7823ca13cb21c0e0b22">operator!=</link> (const <link linkend="_struct_mod_int">ModInt</link> &amp;other) const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b">pow</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> x) const</para>
</listitem>
            <listitem><para><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf">inv</link> () const</para>
</listitem>
            <listitem><para><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_mod_int_1ac1b44a18ac974f3f34f7ec40edb97761">val</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>静的公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>static constexpr <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_mod_int_1ab93584e36749073a116d76ead3e8b602">get_mod</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>フレンド    </title>
        <itemizedlist>
            <listitem><para>ostream &amp; <link linkend="_struct_mod_int_1a0781c38bd75eafd6bcb5e0ad2f2146b9">operator&lt;&lt;</link> (ostream &amp;os, const <link linkend="_struct_mod_int">ModInt</link> &amp;x)</para>
</listitem>
            <listitem><para>istream &amp; <link linkend="_struct_mod_int_1aae4982d90889904faefcab6ee63356dc">operator&gt;&gt;</link> (istream &amp;is, <link linkend="_struct_mod_int">ModInt</link> &amp;x)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>
<simplesect><title>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt;<?linebreak?>struct ModInt&lt; MOD &gt;</title></simplesect>

<para><link linkend="_struct_mod_int">ModInt</link> </para>
<para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00006">6</link> 行目に定義があります。</para>
</section>
<section>
<title>構築子と解体子</title>
<anchor xml:id="_struct_mod_int_1a08a1301149cd7efb6d5944167950785a"/><section>
    <title>ModInt()</title>
<indexterm><primary>ModInt</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>ModInt</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;<link linkend="_struct_mod_int">::ModInt</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> x = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00007">7</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_struct_mod_int_1a2a7d668875266bfd2fe17cc836597603"/><section>
    <title>operator-()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator- ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00009">9</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a9aee9a9ff83c64adb4bdf774258f4850"/><section>
    <title>operator+()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator+ ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00010">10</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a5249b67fb197e68610eab2636b7a333f"/><section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator+= (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00011">11</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a8a315af2621f2f9b566fdc7c9dc992fe"/><section>
    <title>operator-=()</title>
<indexterm><primary>operator-=</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator-= (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00016">16</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a0e9287889960cab1e08a7b6e528adb23"/><section>
    <title>operator*=()</title>
<indexterm><primary>operator*=</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator*= (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00021">21</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a96078358d334d2352bc93718741f5cc6"/><section>
    <title>operator/=()</title>
<indexterm><primary>operator/=</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> &amp; <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator/= (<link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; other)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00025">25</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1aec96e1870fe596b4425267e977be7528"/><section>
    <title>operator+()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator+ (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00029">29</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1aeed29e8004b071baf5f2bd0516e68fcf"/><section>
    <title>operator-()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator- (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00030">30</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a549ff9eaef1ee925bff71ecaaaa21a2a"/><section>
    <title>operator*()</title>
<indexterm><primary>operator*</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator* (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00031">31</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1ac624a8f8b7290c295ca265bbf8f07e17"/><section>
    <title>operator/()</title>
<indexterm><primary>operator/</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator/ (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00032">32</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1ad98d5a5c762d0d1662f9df246fa13ebd"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator== (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00033">33</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1a964f2f06ec3cb7823ca13cb21c0e0b22"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::operator!= (const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; other) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00034">34</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1ad51ec271b27d8b4ffee3af3a25be2d5b"/><section>
    <title>pow()</title>
<indexterm><primary>pow</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>pow</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::pow (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> x) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00043">43</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1abe6791d500924668e08cc248d1451ebf"/><section>
    <title>inv()</title>
<indexterm><primary>inv</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>inv</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_struct_mod_int">ModInt</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::inv ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00052">52</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1ac1b44a18ac974f3f34f7ec40edb97761"/><section>
    <title>val()</title>
<indexterm><primary>val</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>val</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::val ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00053">53</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1ab93584e36749073a116d76ead3e8b602"/><section>
    <title>get_mod()</title>
<indexterm><primary>get_mod</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>get_mod</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput>static constexpr <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt;::get_mod ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00054">54</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>フレンドと関連関数の詳解</title>
<anchor xml:id="_struct_mod_int_1a0781c38bd75eafd6bcb5e0ad2f2146b9"/><section>
    <title>operator&lt;&lt;</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput>ostream &amp; operator&lt;&lt; (ostream &amp; os, const <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; x)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00035">35</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_mod_int_1aae4982d90889904faefcab6ee63356dc"/><section>
    <title>operator&gt;&gt;</title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>ModInt&lt; MOD &gt;</secondary></indexterm>
<indexterm><primary>ModInt&lt; MOD &gt;</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> MOD&gt; </computeroutput><para><computeroutput>istream &amp; operator&gt;&gt; (istream &amp; is, <link linkend="_struct_mod_int">ModInt</link>&lt; MOD &gt; &amp; x)<computeroutput>[friend]</computeroutput></computeroutput></para><para>
 <link linkend="_modint_8hpp_source">modint.hpp</link> の <link linkend="_modint_8hpp_source_1l00036">36</link> 行目に定義があります。</para>
</section>
<para>
この構造体詳解は次のファイルから抽出されました:</para>
mod/<link linkend="_modint_8hpp">modint.hpp</link></section>
</section>
