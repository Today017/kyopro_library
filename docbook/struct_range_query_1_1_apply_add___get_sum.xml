<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_range_query_1_1_apply_add___get_sum" xml:lang="ja">
<title>RangeQuery::ApplyAdd_GetSum&lt; T &gt; 構造体テンプレート</title>
<indexterm><primary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</primary></indexterm>
<para>

<para>区間加算 / 区間和 </para>
 
</para>
<para>
<computeroutput>#include &quot;segtree_lazy.hpp&quot;</computeroutput>
</para>
<simplesect>
    <title>公開型    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_struct_range_query_1_1_apply_add___get_sum_1aabaabec75582f39b00bcf0c18801193c">S</link> = typename <link linkend="_struct_monoid_1_1_sum_pair">Monoid::SumPair</link>&lt;T&gt;<link linkend="_struct_range_query_1_1_apply_add___get_sum_1ad71b55b90d25ce8caf078e71213d819a">::Type</link></para>
</listitem>
            <listitem><para>using <link linkend="_struct_range_query_1_1_apply_add___get_sum_1ad71b55b90d25ce8caf078e71213d819a">Type</link> = struct <link linkend="_struct_seg_tree_lazy">SegTreeLazy</link>&lt;<link linkend="_struct_monoid_1_1_sum_pair">Monoid::SumPair</link>&lt;T&gt;,<link linkend="_struct_operator_1_1_add">Operator::Add</link>&lt;T&gt;,<link linkend="_struct_range_query_1_1_apply_add___get_sum_1aa11c84358cc478f8837b10e80eb06945">mapping</link>&gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>静的公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_struct_range_query_1_1_apply_add___get_sum_1aabaabec75582f39b00bcf0c18801193c">S</link> <link linkend="_struct_range_query_1_1_apply_add___get_sum_1aa11c84358cc478f8837b10e80eb06945">mapping</link> (const <link linkend="_struct_range_query_1_1_apply_add___get_sum_1aabaabec75582f39b00bcf0c18801193c">S</link> &amp;a, const T &amp;b)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>
<simplesect><title>template&lt;typename T&gt;<?linebreak?>struct RangeQuery::ApplyAdd_GetSum&lt; T &gt;</title></simplesect>

<para>区間加算 / 区間和 </para>
<para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00246">246</link> 行目に定義があります。</para>
</section>
<section>
<title>型定義メンバ詳解</title>
<anchor xml:id="_struct_range_query_1_1_apply_add___get_sum_1aabaabec75582f39b00bcf0c18801193c"/><section>
    <title>S</title>
<indexterm><primary>S</primary><secondary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</secondary></indexterm>
<indexterm><primary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</primary><secondary>S</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_range_query_1_1_apply_add___get_sum">RangeQuery::ApplyAdd_GetSum</link>&lt; T &gt;::S = typename <link linkend="_struct_monoid_1_1_sum_pair">Monoid::SumPair</link>&lt;T&gt;<link linkend="_struct_range_query_1_1_apply_add___get_sum_1ad71b55b90d25ce8caf078e71213d819a">::Type</link></computeroutput></para><para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00247">247</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_range_query_1_1_apply_add___get_sum_1ad71b55b90d25ce8caf078e71213d819a"/><section>
    <title>Type</title>
<indexterm><primary>Type</primary><secondary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</secondary></indexterm>
<indexterm><primary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</primary><secondary>Type</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_range_query_1_1_apply_add___get_sum">RangeQuery::ApplyAdd_GetSum</link>&lt; T &gt;::Type = struct <link linkend="_struct_seg_tree_lazy">SegTreeLazy</link>&lt;<link linkend="_struct_monoid_1_1_sum_pair">Monoid::SumPair</link>&lt;T&gt;,<link linkend="_struct_operator_1_1_add">Operator::Add</link>&lt;T&gt;,<link linkend="_struct_range_query_1_1_apply_add___get_sum_1aa11c84358cc478f8837b10e80eb06945">mapping</link>&gt;</computeroutput></para><para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00249">249</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_struct_range_query_1_1_apply_add___get_sum_1aa11c84358cc478f8837b10e80eb06945"/><section>
    <title>mapping()</title>
<indexterm><primary>mapping</primary><secondary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</secondary></indexterm>
<indexterm><primary>RangeQuery::ApplyAdd_GetSum&lt; T &gt;</primary><secondary>mapping</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>static <link linkend="_struct_range_query_1_1_apply_add___get_sum_1aabaabec75582f39b00bcf0c18801193c">S</link> <link linkend="_struct_range_query_1_1_apply_add___get_sum">RangeQuery::ApplyAdd_GetSum</link>&lt; T &gt;::mapping (const <link linkend="_struct_range_query_1_1_apply_add___get_sum_1aabaabec75582f39b00bcf0c18801193c">S</link> &amp; a, const T &amp; b)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00248">248</link> 行目に定義があります。</para>
</section>
<para>
この構造体詳解は次のファイルから抽出されました:</para>
data_structure/<link linkend="_segtree__lazy_8hpp">segtree_lazy.hpp</link></section>
</section>
