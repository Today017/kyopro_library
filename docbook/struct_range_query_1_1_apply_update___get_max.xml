<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_range_query_1_1_apply_update___get_max" xml:lang="ja">
<title>RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt; 構造体テンプレート</title>
<indexterm><primary>RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt;</primary></indexterm>
<para>

<para>区間更新 / 区間max </para>
 
</para>
<para>
<computeroutput>#include &quot;segtree_lazy.hpp&quot;</computeroutput>
</para>
<simplesect>
    <title>公開型    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_struct_range_query_1_1_apply_update___get_max_1afde8fc29322fab9724de4b4ffa928d90">Type</link> = struct <link linkend="_struct_seg_tree_lazy">SegTreeLazy</link>&lt;<link linkend="_struct_monoid_1_1_max">Monoid::Max</link>&lt;T,min_value&gt;,<link linkend="_struct_operator_1_1_update">Operator::Update</link>&lt;T,not_exist&gt;,<link linkend="_struct_range_query_1_1_apply_update___get_max_1ac9d2047758175fb5ee7a6b06fa8a640a">mapping</link>&gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>静的公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para>static T <link linkend="_struct_range_query_1_1_apply_update___get_max_1ac9d2047758175fb5ee7a6b06fa8a640a">mapping</link> (const T &amp;a, const T &amp;b)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>
<simplesect><title>template&lt;typename T, T min_value, T not_exist&gt;<?linebreak?>struct RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt;</title></simplesect>

<para>区間更新 / 区間max </para>



<para>
                <formalpara>
                    <title>
テンプレート引数</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>min_value</entry><entry>
<para>最小値 </para>
</entry>
                            </row>
                            <row>
<entry>not_exist</entry><entry>
<para>存在しない値 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00216">216</link> 行目に定義があります。</para>
</section>
<section>
<title>型定義メンバ詳解</title>
<anchor xml:id="_struct_range_query_1_1_apply_update___get_max_1afde8fc29322fab9724de4b4ffa928d90"/><section>
    <title>Type</title>
<indexterm><primary>Type</primary><secondary>RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt;</secondary></indexterm>
<indexterm><primary>RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt;</primary><secondary>Type</secondary></indexterm>
<computeroutput>template&lt;typename T, T min_value, T not_exist&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_range_query_1_1_apply_update___get_max">RangeQuery::ApplyUpdate_GetMax</link>&lt; T, min_value, not_exist &gt;::Type = struct <link linkend="_struct_seg_tree_lazy">SegTreeLazy</link>&lt;<link linkend="_struct_monoid_1_1_max">Monoid::Max</link>&lt;T,min_value&gt;,<link linkend="_struct_operator_1_1_update">Operator::Update</link>&lt;T,not_exist&gt;,<link linkend="_struct_range_query_1_1_apply_update___get_max_1ac9d2047758175fb5ee7a6b06fa8a640a">mapping</link>&gt;</computeroutput></para><para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00218">218</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_struct_range_query_1_1_apply_update___get_max_1ac9d2047758175fb5ee7a6b06fa8a640a"/><section>
    <title>mapping()</title>
<indexterm><primary>mapping</primary><secondary>RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt;</secondary></indexterm>
<indexterm><primary>RangeQuery::ApplyUpdate_GetMax&lt; T, min_value, not_exist &gt;</primary><secondary>mapping</secondary></indexterm>
<computeroutput>template&lt;typename T, T min_value, T not_exist&gt; </computeroutput><para><computeroutput>static T <link linkend="_struct_range_query_1_1_apply_update___get_max">RangeQuery::ApplyUpdate_GetMax</link>&lt; T, min_value, not_exist &gt;::mapping (const T &amp; a, const T &amp; b)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>
 <link linkend="_segtree__lazy_8hpp_source">segtree_lazy.hpp</link> の <link linkend="_segtree__lazy_8hpp_source_1l00217">217</link> 行目に定義があります。</para>
</section>
<para>
この構造体詳解は次のファイルから抽出されました:</para>
data_structure/<link linkend="_segtree__lazy_8hpp">segtree_lazy.hpp</link></section>
</section>
