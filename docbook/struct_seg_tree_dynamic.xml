<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_seg_tree_dynamic" xml:lang="ja">
<title>SegTreeDynamic&lt; Monoid &gt; 構造体テンプレート</title>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary></indexterm>
<para>

<para>動的セグ木 </para>
 
</para>
<para>
<computeroutput>#include &quot;segtree_dynamic.hpp&quot;</computeroutput>
</para>
<simplesect>
    <title>クラス    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_seg_tree_dynamic_1_1_node">Node</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>公開型    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> = typename Monoid::Type</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>公開メンバ関数    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_seg_tree_dynamic_1a59a06ec2a8d6964629a6a789a6d50c6e">SegTreeDynamic</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_seg_tree_dynamic_1a4b665cea167c726d364e045eb2943f00">mx</link>=1e9, int q=5e5)</para>

<para>サイズ mx の動的セグ木を宣言する </para>
</listitem>
            <listitem><para>void <link linkend="_struct_seg_tree_dynamic_1aabe5d1774f4bd10f1d1d23de51c14969">set</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> i, <link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> v)</para>

<para>i 番目の要素を v に変える </para>
</listitem>
            <listitem><para><link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> <link linkend="_struct_seg_tree_dynamic_1a94bcb75b9656636184cf16e39aad8a51">fold</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> l, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> r, int idx, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> left, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> right)</para>

<para>区間 [l, r) のモノイド積を返す </para>
</listitem>
            <listitem><para><link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> <link linkend="_struct_seg_tree_dynamic_1aae80e1181ba66952873e2cfa9b0865f9">fold</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> l, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> r)</para>
</listitem>
            <listitem><para><link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> <link linkend="_struct_seg_tree_dynamic_1aa257624ddaf92d127067a1d950c2c65c">operator[]</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> i)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>公開変数類    </title>
        <itemizedlist>
            <listitem><para>vector&lt; <link linkend="_struct_seg_tree_dynamic_1_1_node">Node</link> &gt; <link linkend="_struct_seg_tree_dynamic_1ac3c641dd98da348fee0d3bea19ccb708">node</link></para>
</listitem>
            <listitem><para><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_seg_tree_dynamic_1a4b665cea167c726d364e045eb2943f00">mx</link> =1e9</para>
</listitem>
            <listitem><para>vector&lt; int &gt; <link linkend="_struct_seg_tree_dynamic_1a64fcf4dcb58a2d8b17592d72110e8e91">route</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>詳解</title>
<simplesect><title>template&lt;typename Monoid&gt;<?linebreak?>struct SegTreeDynamic&lt; Monoid &gt;</title></simplesect>

<para>動的セグ木 </para>
<para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00005">5</link> 行目に定義があります。</para>
</section>
<section>
<title>型定義メンバ詳解</title>
<anchor xml:id="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3"/><section>
    <title>Type</title>
<indexterm><primary>Type</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>Type</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::Type = typename Monoid::Type</computeroutput></para><para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00006">6</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>構築子と解体子</title>
<anchor xml:id="_struct_seg_tree_dynamic_1a59a06ec2a8d6964629a6a789a6d50c6e"/><section>
    <title>SegTreeDynamic()</title>
<indexterm><primary>SegTreeDynamic</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>SegTreeDynamic</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput><link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;<link linkend="_struct_seg_tree_dynamic">::SegTreeDynamic</link> (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> mx = <computeroutput>1e9</computeroutput>
, int q = <computeroutput>5e5</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>サイズ mx の動的セグ木を宣言する </para>
</para>
<para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00023">23</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>関数詳解</title>
<anchor xml:id="_struct_seg_tree_dynamic_1aabe5d1774f4bd10f1d1d23de51c14969"/><section>
    <title>set()</title>
<indexterm><primary>set</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>set</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput>void <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::set (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> i, <link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> v)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>i 番目の要素を v に変える </para>
</para>
<para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00031">31</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_seg_tree_dynamic_1a94bcb75b9656636184cf16e39aad8a51"/><section>
    <title>fold()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>fold</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>fold</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput><link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::fold (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> l, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> r, int idx, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> left, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> right)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>区間 [l, r) のモノイド積を返す </para>
</para>
<para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00067">67</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_seg_tree_dynamic_1aae80e1181ba66952873e2cfa9b0865f9"/><section>
    <title>fold()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>fold</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>fold</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput><link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::fold (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> l, <link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> r)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00082">82</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_seg_tree_dynamic_1aa257624ddaf92d127067a1d950c2c65c"/><section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput><link linkend="_struct_seg_tree_dynamic_1a227357d02ccd09e86117b2bdae1b70e3">Type</link> <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::operator[] (<link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> i)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00084">84</link> 行目に定義があります。</para>
</section>
</section>
<section>
<title>メンバ詳解</title>
<anchor xml:id="_struct_seg_tree_dynamic_1ac3c641dd98da348fee0d3bea19ccb708"/><section>
    <title>node</title>
<indexterm><primary>node</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>node</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput>vector&lt;<link linkend="_struct_seg_tree_dynamic_1_1_node">Node</link>&gt; <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::node</computeroutput></para><para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00017">17</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_seg_tree_dynamic_1a4b665cea167c726d364e045eb2943f00"/><section>
    <title>mx</title>
<indexterm><primary>mx</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>mx</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput><link linkend="_template_8hpp_1adcb0b6ef4cd780a895c7089c0191cd62">ll</link> <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::mx =1e9</computeroutput></para><para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00019">19</link> 行目に定義があります。</para>
</section>
<anchor xml:id="_struct_seg_tree_dynamic_1a64fcf4dcb58a2d8b17592d72110e8e91"/><section>
    <title>route</title>
<indexterm><primary>route</primary><secondary>SegTreeDynamic&lt; Monoid &gt;</secondary></indexterm>
<indexterm><primary>SegTreeDynamic&lt; Monoid &gt;</primary><secondary>route</secondary></indexterm>
<computeroutput>template&lt;typename Monoid&gt; </computeroutput><para><computeroutput>vector&lt;int&gt; <link linkend="_struct_seg_tree_dynamic">SegTreeDynamic</link>&lt; Monoid &gt;::route</computeroutput></para><para>
 <link linkend="_segtree__dynamic_8hpp_source">segtree_dynamic.hpp</link> の <link linkend="_segtree__dynamic_8hpp_source_1l00020">20</link> 行目に定義があります。</para>
</section>
<para>
この構造体詳解は次のファイルから抽出されました:</para>
data_structure/<link linkend="_segtree__dynamic_8hpp">segtree_dynamic.hpp</link></section>
</section>
