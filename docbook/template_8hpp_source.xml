<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_template_8hpp_source" xml:lang="ja">
<title>template.hpp</title>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_template_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">pragma</emphasis>&#32;<emphasis role="preprocessor">once</emphasis>
<anchor xml:id="_template_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis>&#32;<emphasis role="preprocessor">&lt;</emphasis><emphasis role="preprocessor">bits</emphasis><emphasis role="preprocessor">/</emphasis><emphasis role="preprocessor">stdc</emphasis><emphasis role="preprocessor">++</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">h</emphasis><emphasis role="preprocessor">&gt;</emphasis>
<anchor xml:id="_template_8hpp_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;<emphasis role="keyword">namespace</emphasis>&#32;std;
<anchor xml:id="_template_8hpp_source_1l00004"/>00004 
<anchor xml:id="_template_8hpp_source_1l00005"/><link linkend="_template_8hpp_1a7ab29d3bd6e8d66e320f4224e75f6cea">00005</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">ALL</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">x</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">x</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">begin</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">x</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">end</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00006"/><link linkend="_template_8hpp_1affe9a1ffd6cd7b2e404200ef182fa18f">00006</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">IO</emphasis>&#32;<emphasis role="preprocessor">ios</emphasis><emphasis role="preprocessor">::</emphasis><emphasis role="preprocessor">sync_with_stdio</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="keyword">false</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis><emphasis role="preprocessor">cin</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">tie</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="keywordtype">nullptr</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">;</emphasis>
<anchor xml:id="_template_8hpp_source_1l00007"/><link linkend="_template_8hpp_1ab6b1ca645104fc8e3678f999ebe71f41">00007</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">LB</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">,</emphasis>&#32;<emphasis role="preprocessor">x</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">ll</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">lower_bound</emphasis><emphasis role="preprocessor">(</emphasis><link linkend="_template_8hpp_1a7ab29d3bd6e8d66e320f4224e75f6cea">ALL</link><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis><emphasis role="preprocessor">x</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">-</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">begin</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00008"/><link linkend="_template_8hpp_1a6cf4a0f2f552bf0356a95bf621d4a15d">00008</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">UQ</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">sort</emphasis><emphasis role="preprocessor">(</emphasis><link linkend="_template_8hpp_1a7ab29d3bd6e8d66e320f4224e75f6cea">ALL</link><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">erase</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">unique</emphasis><emphasis role="preprocessor">(</emphasis><link linkend="_template_8hpp_1a7ab29d3bd6e8d66e320f4224e75f6cea">ALL</link><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis><emphasis role="preprocessor">v</emphasis><emphasis role="preprocessor">.</emphasis><emphasis role="preprocessor">end</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00009"/><link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">00009</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">REP</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">,</emphasis>&#32;<emphasis role="preprocessor">n</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="keywordflow">for</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">ll</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">=</emphasis>0<emphasis role="preprocessor">;</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">&lt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">ll</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">n</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">;</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">++</emphasis><emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00010"/><link linkend="_template_8hpp_1a9af2de86c4be813e9c60ede438bb4cd7">00010</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">FOR</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">,</emphasis>&#32;<emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">,</emphasis>&#32;<emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="keywordflow">for</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">ll</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">=</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">ll</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">;</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">&lt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">?</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">&lt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">:</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">&gt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">;</emphasis>&#32;<emphasis role="preprocessor">i</emphasis><emphasis role="preprocessor">+=</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">&lt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">?</emphasis>&#32;1&#32;<emphasis role="preprocessor">:</emphasis>&#32;<emphasis role="preprocessor">-</emphasis>1<emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00011"/><link linkend="_template_8hpp_1a4c27eb89ff96e0ad6fda2ea4040816d4">00011</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">chmax</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">,</emphasis>&#32;<emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">&lt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">?</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">=</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis>&#32;1<emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">:</emphasis>&#32;0<emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00012"/><link linkend="_template_8hpp_1afab395ab2eac3679be924c315291bf58">00012</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">chmin</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">,</emphasis>&#32;<emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">&gt;</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">?</emphasis>&#32;<emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">a</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">=</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">b</emphasis><emphasis role="preprocessor">)</emphasis><emphasis role="preprocessor">,</emphasis>&#32;1<emphasis role="preprocessor">)</emphasis>&#32;<emphasis role="preprocessor">:</emphasis>&#32;0<emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00013"/>00013 
<anchor xml:id="_template_8hpp_source_1l00014"/><link linkend="_template_8hpp_1ae5ef38025fe230c42996fedcb333507a">00014</link> <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">using</emphasis>&#32;rpriority_queue=priority_queue&lt;T,vector&lt;T&gt;,greater&lt;T&gt;&gt;;
<anchor xml:id="_template_8hpp_source_1l00015"/><link linkend="_template_8hpp_1a14c9dbab105f1b8b8182a022d73e610c">00015</link> <emphasis role="keyword">using</emphasis>&#32;ll=<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_template_8hpp_1a14c9dbab105f1b8b8182a022d73e610c">INF</link>=1e9+10;&#32;<emphasis role="keyword">const</emphasis>&#32;ll&#32;<link linkend="_template_8hpp_1a1f713edb7a826e3710159658d6ef9815">INFL</link>=4e18;
<anchor xml:id="_template_8hpp_source_1l00016"/><link linkend="_template_8hpp_1a41f1d17ffdc8a7500e7aadc2b7e05a63">00016</link> <emphasis role="keyword">using</emphasis>&#32;ld=<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>;&#32;<emphasis role="keyword">using</emphasis>&#32;ull=uint64_t;&#32;<emphasis role="keyword">using</emphasis>&#32;LL=__int128_t;
<anchor xml:id="_template_8hpp_source_1l00017"/><link linkend="_template_8hpp_1a6a675649b5da3f6454b83fa37d00cc2b">00017</link> <emphasis role="keyword">using</emphasis>&#32;VI=vector&lt;<emphasis role="keywordtype">int</emphasis>&gt;;&#32;<emphasis role="keyword">using</emphasis>&#32;VVI=vector&lt;VI&gt;;&#32;<emphasis role="keyword">using</emphasis>&#32;VL=vector&lt;ll&gt;;&#32;<emphasis role="keyword">using</emphasis>&#32;VVL=vector&lt;VL&gt;;
<anchor xml:id="_template_8hpp_source_1l00018"/><link linkend="_template_8hpp_1a7f582aad13bf86402da717000515ca1c">00018</link> <emphasis role="keyword">using</emphasis>&#32;PL=pair&lt;ll,ll&gt;;&#32;<emphasis role="keyword">using</emphasis>&#32;VP=vector&lt;PL&gt;;&#32;<emphasis role="keyword">using</emphasis>&#32;WG=vector&lt;vector&lt;pair&lt;<emphasis role="keywordtype">int</emphasis>,ll&gt;&gt;&gt;;
<anchor xml:id="_template_8hpp_source_1l00019"/>00019 
<anchor xml:id="_template_8hpp_source_1l00020"/>00020 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">ifdef</emphasis>&#32;<emphasis role="preprocessor">LOCAL</emphasis>
<anchor xml:id="_template_8hpp_source_1l00021"/>00021 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis>&#32;<emphasis role="stringliteral">&quot;./debug.hpp&quot;</emphasis>
<anchor xml:id="_template_8hpp_source_1l00022"/>00022 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">else</emphasis>
<anchor xml:id="_template_8hpp_source_1l00023"/><link linkend="_template_8hpp_1a86ee3ff44c537d94ccbabf941a613688">00023</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">debug</emphasis><emphasis role="preprocessor">(</emphasis><emphasis role="preprocessor">...</emphasis><emphasis role="preprocessor">)</emphasis>
<anchor xml:id="_template_8hpp_source_1l00024"/><link linkend="_template_8hpp_1a03e896b87233163e2dc3399c65cdfc2d">00024</link> <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">define</emphasis>&#32;<emphasis role="preprocessor">print_line</emphasis>
<anchor xml:id="_template_8hpp_source_1l00025"/>00025 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">endif</emphasis>
</programlisting></section>
