<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_zeta__mobius_8hpp_source" xml:lang="ja">
<title>zeta_mobius.hpp</title>
<indexterm><primary>algorithm/zeta_mobius.hpp</primary></indexterm>
[詳解]<programlisting linenumbering="unnumbered"><anchor xml:id="_zeta__mobius_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/template.hpp&quot;</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00002"/>00002 
<anchor xml:id="_zeta__mobius_8hpp_source_1l00003"/>00003 <emphasis role="comment">///&#32;@brief&#32;ゼータ変換・メビウス変換</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00004"/><link linkend="_namespace_zeta_mobius">00004</link> <emphasis role="keyword">namespace</emphasis>&#32;<link linkend="_namespace_zeta_mobius">ZetaMobius</link>&#32;{
<anchor xml:id="_zeta__mobius_8hpp_source_1l00005"/>00005 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;高速ゼータ変換（下位集合）</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@details&#32;v&apos;[s]&#32;=&#32;Σ_{t⊆s}&#32;v[t]&#32;なる&#32;v&apos;&#32;を返す</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;|v|&#32;=&#32;2^N&#32;として&#32;O(N&#32;2^N)</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Monoid&gt;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00009"/><link linkend="_namespace_zeta_mobius_1a96b8a2e447ea6c66bf33a8a0e39e4fcc">00009</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_zeta_mobius_1a96b8a2e447ea6c66bf33a8a0e39e4fcc">vector</link>&lt;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_zeta_mobius_1a96b8a2e447ea6c66bf33a8a0e39e4fcc">Monoid</link>::<link linkend="_namespace_zeta_mobius_1a96b8a2e447ea6c66bf33a8a0e39e4fcc">Type</link>&gt;&#32;<link linkend="_namespace_zeta_mobius_1a96b8a2e447ea6c66bf33a8a0e39e4fcc">SubsetZeta</link>(vector&lt;<emphasis role="keyword">typename</emphasis>&#32;Monoid::Type&gt;&#32;v)&#32;{
<anchor xml:id="_zeta__mobius_8hpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=__lg(v.size());
<anchor xml:id="_zeta__mobius_8hpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(j,1&lt;&lt;n)<emphasis role="keywordflow">if</emphasis>(j&gt;&gt;i&amp;1)&#32;v[j]=Monoid::op(v[j],v[j^(1&lt;&lt;i)]);
<anchor xml:id="_zeta__mobius_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;}
<anchor xml:id="_zeta__mobius_8hpp_source_1l00014"/>00014 
<anchor xml:id="_zeta__mobius_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;高速ゼータ変換（上位集合）</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@details&#32;v&apos;[s]&#32;=&#32;Σ_{t⊇s}&#32;v[t]&#32;なる&#32;v&apos;&#32;を返す</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;|v|&#32;=&#32;2^N&#32;として&#32;O(N&#32;2^N)</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Monoid&gt;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00019"/><link linkend="_namespace_zeta_mobius_1a482f4f29cbbd38287bd6dfa4fa3752bc">00019</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_zeta_mobius_1a482f4f29cbbd38287bd6dfa4fa3752bc">vector</link>&lt;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_zeta_mobius_1a482f4f29cbbd38287bd6dfa4fa3752bc">Monoid</link>::<link linkend="_namespace_zeta_mobius_1a482f4f29cbbd38287bd6dfa4fa3752bc">Type</link>&gt;&#32;<link linkend="_namespace_zeta_mobius_1a482f4f29cbbd38287bd6dfa4fa3752bc">SupersetZeta</link>(vector&lt;<emphasis role="keyword">typename</emphasis>&#32;Monoid::Type&gt;&#32;v)&#32;{
<anchor xml:id="_zeta__mobius_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=__lg(v.size());
<anchor xml:id="_zeta__mobius_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(j,1&lt;&lt;n)&#32;<emphasis role="keywordflow">if</emphasis>(~j&gt;&gt;i&amp;1)&#32;v[j]=Monoid::op(v[j],v[j^(1&lt;&lt;i)]);
<anchor xml:id="_zeta__mobius_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_zeta__mobius_8hpp_source_1l00024"/>00024 
<anchor xml:id="_zeta__mobius_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;高速メビウス変換（下位集合）</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@details&#32;v[s]&#32;=&#32;Σ_{t⊆s}&#32;v&apos;[t]&#32;なる&#32;v&apos;&#32;を返す</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;逆変換が必要なので、v&#32;は可換群の元である必要がある</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;|v|&#32;=&#32;2^N&#32;として&#32;O(N&#32;2^N)</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Abel&gt;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00030"/><link linkend="_namespace_zeta_mobius_1acdbe2642fe5208a44eb861ad2e0666bf">00030</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_zeta_mobius_1acdbe2642fe5208a44eb861ad2e0666bf">vector</link>&lt;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_zeta_mobius_1acdbe2642fe5208a44eb861ad2e0666bf">Abel</link>::<link linkend="_namespace_zeta_mobius_1acdbe2642fe5208a44eb861ad2e0666bf">Type</link>&gt;&#32;<link linkend="_namespace_zeta_mobius_1acdbe2642fe5208a44eb861ad2e0666bf">SubsetMobius</link>(vector&lt;<emphasis role="keyword">typename</emphasis>&#32;Abel::Type&gt;&#32;v)&#32;{
<anchor xml:id="_zeta__mobius_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=__lg(v.size());
<anchor xml:id="_zeta__mobius_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(j,1&lt;&lt;n)&#32;<emphasis role="keywordflow">if</emphasis>(j&gt;&gt;i&amp;1)&#32;v[j]=Abel::op(v[j],Abel::inv(v[j^(1&lt;&lt;i)]));
<anchor xml:id="_zeta__mobius_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;}
<anchor xml:id="_zeta__mobius_8hpp_source_1l00035"/>00035 
<anchor xml:id="_zeta__mobius_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@brief&#32;高速メビウス変換（上位集合）</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@details&#32;v[s]&#32;=&#32;Σ_{t⊇s}&#32;v&apos;[t]&#32;なる&#32;v&apos;&#32;を返す</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;逆変換が必要なので、v&#32;は可換群の元である必要がある</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="comment">///&#32;@note&#32;|v|&#32;=&#32;2^N&#32;として&#32;O(N&#32;2^N)</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Abel&gt;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00041"/><link linkend="_namespace_zeta_mobius_1a2411a0dca9b8ae8e8a4ce4e36683c98c">00041</link> &#32;&#32;&#32;&#32;<link linkend="_namespace_zeta_mobius_1a2411a0dca9b8ae8e8a4ce4e36683c98c">vector</link>&lt;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_zeta_mobius_1a2411a0dca9b8ae8e8a4ce4e36683c98c">Abel</link>::<link linkend="_namespace_zeta_mobius_1a2411a0dca9b8ae8e8a4ce4e36683c98c">Type</link>&gt;&#32;<link linkend="_namespace_zeta_mobius_1a2411a0dca9b8ae8e8a4ce4e36683c98c">SupersetMobius</link>(vector&lt;<emphasis role="keyword">typename</emphasis>&#32;Abel::Type&gt;&#32;v)&#32;{
<anchor xml:id="_zeta__mobius_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n=__lg(v.size());
<anchor xml:id="_zeta__mobius_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(i,n)&#32;<link linkend="_template_8hpp_1a17daffa35db12daabc89c90df168e706">REP</link>(j,1&lt;&lt;n)&#32;<emphasis role="keywordflow">if</emphasis>(~j&gt;&gt;i&amp;1)&#32;v[j]=Abel::op(v[j],Abel::inv(v[j^(1&lt;&lt;i)]));
<anchor xml:id="_zeta__mobius_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v;
<anchor xml:id="_zeta__mobius_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;}
<anchor xml:id="_zeta__mobius_8hpp_source_1l00046"/>00046 }
<anchor xml:id="_zeta__mobius_8hpp_source_1l00047"/>00047 
<anchor xml:id="_zeta__mobius_8hpp_source_1l00048"/>00048 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/others/monoid.hpp&quot;</emphasis>
<anchor xml:id="_zeta__mobius_8hpp_source_1l00049"/>00049 <emphasis role="preprocessor">#</emphasis><emphasis role="preprocessor">include</emphasis><emphasis role="preprocessor">&quot;../../kyopro_library/others/abel.hpp&quot;</emphasis>
</programlisting></section>
