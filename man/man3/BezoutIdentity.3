.TH "BezoutIdentity" 3 "Kyopro Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BezoutIdentity \- 一次不定方程式 ax+by=c を解く \fBverify:\fP https://atcoder.jp/contests/abc340/submissions/62495050  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include 'bezout_identity\&.hpp'\fP
.SS "公開メンバ関数"

.in +1c
.ti -1c
.RI "\fBBezoutIdentity\fP (\fBll\fP a, \fBll\fP b, \fBll\fP c)"
.br
.RI "ax+by=c "
.ti -1c
.RI "bool \fBbuild\fP ()"
.br
.RI "解が存在するか否かを返す "
.ti -1c
.RI "\fBPL\fP \fBgeneral_solution\fP (\fBll\fP t=0)"
.br
.RI "一般解を返す "
.in -1c
.SH "詳解"
.PP 
一次不定方程式 ax+by=c を解く \fBverify:\fP https://atcoder.jp/contests/abc340/submissions/62495050 

g=gcd(a,b) とする。extGCD(a,b) によって、ax'+by'=g を解く。 両辺を c/g 倍し x=x'\fI(c/g),y=y'\fP(c/g) とすると、ax+by=c を満たす。c が g で割り切れない場合、解は存在しない。 ax+by=c の両辺を g で割ると、(a/g)*x + (b/g)*y = c/g となる。方程式の一般解を X,Y とおくと、(a/g)*(X-x) + (b/g)*(Y-y) = 0 を満たす。 a/g と b/g は互いに素なので X-x は b/g の倍数であり、X=(b/g)*t+x となる。 これを再代入すると、Y=-(a/g)*t+y を得る。 
.PP
 \fBbezout_identity\&.hpp\fP の \fB13\fP 行目に定義があります。
.SH "構築子と解体子"
.PP 
.SS "BezoutIdentity::BezoutIdentity (\fBll\fP a, \fBll\fP b, \fBll\fP c)\fR [inline]\fP"

.PP
ax+by=c 
.PP
 \fBbezout_identity\&.hpp\fP の \fB15\fP 行目に定義があります。
.SH "関数詳解"
.PP 
.SS "bool BezoutIdentity::build ()\fR [inline]\fP"

.PP
解が存在するか否かを返す 
.PP
 \fBbezout_identity\&.hpp\fP の \fB22\fP 行目に定義があります。
.SS "\fBPL\fP BezoutIdentity::general_solution (\fBll\fP t = \fR0\fP)\fR [inline]\fP"

.PP
一般解を返す 
.PP
 \fBbezout_identity\&.hpp\fP の \fB33\fP 行目に定義があります。

.SH "著者"
.PP 
 Kyopro Libraryのソースコードから抽出しました。
