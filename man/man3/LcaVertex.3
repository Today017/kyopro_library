.TH "LcaVertex< Monoid >" 3 "Kyopro Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LcaVertex< Monoid > \- 頂点属性 \fBLCA\fP  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include 'lca_vertex\&.hpp'\fP
.SS "公開型"

.in +1c
.ti -1c
.RI "using \fBType\fP = typename Monoid::Type"
.br
.in -1c
.SS "公開メンバ関数"

.in +1c
.ti -1c
.RI "\fBLcaVertex\fP (const \fBVVI\fP &g, const vector< \fBType\fP > &v, int root=0)"
.br
.RI "コンストラクタ "
.ti -1c
.RI "\fBType\fP \fBfold\fP (int u, int v)"
.br
.RI "パス u-v のモノイド積を返す "
.in -1c
.SH "詳解"
.PP 

.SS "template<typename Monoid>
.br
struct LcaVertex< Monoid >"頂点属性 \fBLCA\fP 
.PP
 \fBlca_vertex\&.hpp\fP の \fB5\fP 行目に定義があります。
.SH "型定義メンバ詳解"
.PP 
.SS "template<typename Monoid> using \fBLcaVertex\fP< Monoid >::Type = typename Monoid::Type"

.PP
 \fBlca_vertex\&.hpp\fP の \fB6\fP 行目に定義があります。
.SH "構築子と解体子"
.PP 
.SS "template<typename Monoid> \fBLcaVertex\fP< Monoid >\fB::LcaVertex\fP (const \fBVVI\fP & g, const vector< \fBType\fP > & v, int root = \fR0\fP)\fR [inline]\fP"

.PP
コンストラクタ 
.PP
\fB引数\fP
.RS 4
\fIv\fP 頂点の重み 
.RE
.PP

.PP
 \fBlca_vertex\&.hpp\fP の \fB10\fP 行目に定義があります。
.SH "関数詳解"
.PP 
.SS "template<typename Monoid> \fBType\fP \fBLcaVertex\fP< Monoid >::fold (int u, int v)\fR [inline]\fP"

.PP
パス u-v のモノイド積を返す 
.PP
 \fBlca_vertex\&.hpp\fP の \fB23\fP 行目に定義があります。

.SH "著者"
.PP 
 Kyopro Libraryのソースコードから抽出しました。
