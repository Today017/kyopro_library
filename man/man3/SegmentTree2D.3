.TH "SegmentTree2D< Monoid >" 3 "Kyopro Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SegmentTree2D< Monoid >
.SH SYNOPSIS
.br
.PP
.PP
\fR#include 'segtree_2d\&.hpp'\fP
.SS "公開型"

.in +1c
.ti -1c
.RI "using \fBType\fP = Monoid::Type"
.br
.in -1c
.SS "公開メンバ関数"

.in +1c
.ti -1c
.RI "\fBSegmentTree2D\fP ()=default"
.br
.ti -1c
.RI "\fBSegmentTree2D\fP (int h, int w)"
.br
.RI "サイズ h * w の２次元セグメント木を構築する "
.ti -1c
.RI "void \fBset\fP (int x, int y, \fBType\fP v)"
.br
.RI "位置 (x, y) の要素を v に更新する "
.ti -1c
.RI "\fBType\fP \fBfold\fP (int l, int r, int u, int d)"
.br
.RI "矩形領域 [l, r) × [u, d) のモノイド積を返す "
.in -1c
.SH "詳解"
.PP 

.SS "template<typename Monoid>
.br
struct SegmentTree2D< Monoid >"
.PP
 \fBsegtree_2d\&.hpp\fP の \fB4\fP 行目に定義があります。
.SH "型定義メンバ詳解"
.PP 
.SS "template<typename Monoid> using \fBSegmentTree2D\fP< Monoid >::Type = Monoid::Type"

.PP
 \fBsegtree_2d\&.hpp\fP の \fB5\fP 行目に定義があります。
.SH "構築子と解体子"
.PP 
.SS "template<typename Monoid> \fBSegmentTree2D\fP< Monoid >\fB::SegmentTree2D\fP ()\fR [default]\fP"

.SS "template<typename Monoid> \fBSegmentTree2D\fP< Monoid >\fB::SegmentTree2D\fP (int h, int w)\fR [inline]\fP"

.PP
サイズ h * w の２次元セグメント木を構築する 
.PP
 \fBsegtree_2d\&.hpp\fP の \fB10\fP 行目に定義があります。
.SH "関数詳解"
.PP 
.SS "template<typename Monoid> void \fBSegmentTree2D\fP< Monoid >::set (int x, int y, \fBType\fP v)\fR [inline]\fP"

.PP
位置 (x, y) の要素を v に更新する 
.PP
\fB覚え書き\fP
.RS 4
O(log(h) log(w)) 
.RE
.PP

.PP
 \fBsegtree_2d\&.hpp\fP の \fB17\fP 行目に定義があります。
.SS "template<typename Monoid> \fBType\fP \fBSegmentTree2D\fP< Monoid >::fold (int l, int r, int u, int d)\fR [inline]\fP"

.PP
矩形領域 [l, r) × [u, d) のモノイド積を返す 
.PP
\fB覚え書き\fP
.RS 4
O(log(h) log(w)) 
.RE
.PP

.PP
 \fBsegtree_2d\&.hpp\fP の \fB29\fP 行目に定義があります。

.SH "著者"
.PP 
 Kyopro Libraryのソースコードから抽出しました。
