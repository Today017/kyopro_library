.TH "debug.hpp" 3 "Kyopro Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
debug.hpp
.SH SYNOPSIS
.br
.PP
\fR#include '\&.\&./kyopro_library/data_structure/fenwick_tree\&.hpp'\fP
.br
\fR#include '\&.\&./kyopro_library/data_structure/segtree\&.hpp'\fP
.br
\fR#include '\&.\&./kyopro_library/data_structure/segtree_lazy\&.hpp'\fP
.br
\fR#include '\&.\&./kyopro_library/data_structure/segtree_dual\&.hpp'\fP
.br
\fR#include '\&.\&./kyopro_library/graph/dsu\&.hpp'\fP
.br
\fR#include '\&.\&./kyopro_library/others/int128\&.hpp'\fP
.br
\fR#include '\&.\&./atcoder/modint'\fP
.br
\fR#include '\&.\&./atcoder/segtree'\fP
.br
\fR#include '\&.\&./atcoder/lazysegtree'\fP
.br
\fR#include '\&.\&./atcoder/fenwicktree'\fP
.br
\fR#include '\&.\&./atcoder/dsu'\fP
.br

.SS "マクロ定義"

.in +1c
.ti -1c
.RI "#define \fBprint_line\fP   cerr<<'\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-'<<__LINE__<<'\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-'<<'\\n'"
.br
.ti -1c
.RI "#define \fBdebug\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBgetName\fP(VariableName)"
.br
.in -1c
.SS "関数"

.in +1c
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &os, atcoder::modint998244353 a)"
.br
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &os, atcoder::modint1000000007 a)"
.br
.ti -1c
.RI "template<typename T, T(*)(T, T) op, T(*)() e> ostream & \fBoperator<<\fP (ostream &os, atcoder::segtree< T, op, e > a)"
.br
.ti -1c
.RI "template<typename T, T(*)(T, T) op, T(*)() e, typename F, T(*)(F, T) mapping, F(*)(F, F) composition, F(*)() id> ostream & \fBoperator<<\fP (ostream &os, atcoder::lazy_segtree< T, op, e, F, mapping, composition, id > a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, atcoder::fenwick_tree< T > a)"
.br
.ti -1c
.RI "template<typename T1, typename T2> ostream & \fBoperator<<\fP (ostream &os, const pair< T1, T2 > &p)"
.br
.ti -1c
.RI "template<typename T1, typename T2, typename T3> ostream & \fBoperator<<\fP (ostream &os, const tuple< T1, T2, T3 > &t)"
.br
.ti -1c
.RI "template<typename T1, typename T2, typename T3, typename T4> ostream & \fBoperator<<\fP (ostream &os, const tuple< T1, T2, T3, T4 > &t)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, const vector< vector< vector< T > > > &a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, const vector< vector< T > > &a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, const vector< T > &a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, const set< T > &a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, const multiset< T > &a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, const deque< T > &a)"
.br
.ti -1c
.RI "template<typename T1, typename T2> ostream & \fBoperator<<\fP (ostream &os, const map< T1, T2 > &a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, queue< T > a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, priority_queue< T > a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, \fBrpriority_queue\fP< T > a)"
.br
.ti -1c
.RI "template<typename T, auto N> ostream & \fBoperator<<\fP (ostream &os, array< T, N > a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, \fBFenwickTree\fP< T > a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, \fBSegTree\fP< T > a)"
.br
.ti -1c
.RI "template<typename T, typename U, auto M> ostream & \fBoperator<<\fP (ostream &os, \fBSegTreeLazy\fP< T, U, M > a)"
.br
.ti -1c
.RI "template<typename T> ostream & \fBoperator<<\fP (ostream &os, \fBSegTreeDual\fP< T > a)"
.br
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &os, \fBDSU\fP a)"
.br
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &os, atcoder::dsu a)"
.br
.ti -1c
.RI "template<typename T> void \fBDebugPring\fP (int i, T name)"
.br
.ti -1c
.RI "template<typename T1, typename T2, typename\&.\&.\&. T3> void \fBDebugPring\fP (int i, const T1 &name, const T2 &a, const T3 &\&.\&.\&.b)"
.br
.in -1c
.SH "マクロ定義詳解"
.PP 
.SS "#define print_line   cerr<<'\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-'<<__LINE__<<'\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-'<<'\\n'"

.PP
 \fBdebug\&.hpp\fP の \fB246\fP 行目に定義があります。
.SS "#define debug( \&.\&.\&.)"
\fB値:\fP
.nf
DebugPring(0,#__VA_ARGS__,__VA_ARGS__)
.PP
.fi

.PP
 \fBdebug\&.hpp\fP の \fB247\fP 行目に定義があります。
.SS "#define getName( VariableName)"
\fB値:\fP
.nf
#VariableName
.PP
.fi

.PP
 \fBdebug\&.hpp\fP の \fB248\fP 行目に定義があります。
.SH "関数詳解"
.PP 
.SS "ostream & operator<< (ostream & os, atcoder::modint998244353 a)"

.PP
 \fBdebug\&.hpp\fP の \fB13\fP 行目に定義があります。
.SS "ostream & operator<< (ostream & os, atcoder::modint1000000007 a)"

.PP
 \fBdebug\&.hpp\fP の \fB17\fP 行目に定義があります。
.SS "template<typename T, T(*)(T, T) op, T(*)() e> ostream & operator<< (ostream & os, atcoder::segtree< T, op, e > a)"

.PP
 \fBdebug\&.hpp\fP の \fB22\fP 行目に定義があります。
.SS "template<typename T, T(*)(T, T) op, T(*)() e, typename F, T(*)(F, T) mapping, F(*)(F, F) composition, F(*)() id> ostream & operator<< (ostream & os, atcoder::lazy_segtree< T, op, e, F, mapping, composition, id > a)"

.PP
 \fBdebug\&.hpp\fP の \fB33\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, atcoder::fenwick_tree< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB44\fP 行目に定義があります。
.SS "template<typename T1, typename T2> ostream & operator<< (ostream & os, const pair< T1, T2 > & p)"

.PP
 \fBdebug\&.hpp\fP の \fB55\fP 行目に定義があります。
.SS "template<typename T1, typename T2, typename T3> ostream & operator<< (ostream & os, const tuple< T1, T2, T3 > & t)"

.PP
 \fBdebug\&.hpp\fP の \fB60\fP 行目に定義があります。
.SS "template<typename T1, typename T2, typename T3, typename T4> ostream & operator<< (ostream & os, const tuple< T1, T2, T3, T4 > & t)"

.PP
 \fBdebug\&.hpp\fP の \fB65\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, const vector< vector< vector< T > > > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB70\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, const vector< vector< T > > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB91\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, const vector< T > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB107\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, const set< T > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB118\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, const multiset< T > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB126\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, const deque< T > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB134\fP 行目に定義があります。
.SS "template<typename T1, typename T2> ostream & operator<< (ostream & os, const map< T1, T2 > & a)"

.PP
 \fBdebug\&.hpp\fP の \fB142\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, queue< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB149\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, priority_queue< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB160\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, \fBrpriority_queue\fP< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB171\fP 行目に定義があります。
.SS "template<typename T, auto N> ostream & operator<< (ostream & os, array< T, N > a)"

.PP
 \fBdebug\&.hpp\fP の \fB182\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, \fBFenwickTree\fP< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB192\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, \fBSegTree\fP< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB203\fP 行目に定義があります。
.SS "template<typename T, typename U, auto M> ostream & operator<< (ostream & os, \fBSegTreeLazy\fP< T, U, M > a)"

.PP
 \fBdebug\&.hpp\fP の \fB214\fP 行目に定義があります。
.SS "template<typename T> ostream & operator<< (ostream & os, \fBSegTreeDual\fP< T > a)"

.PP
 \fBdebug\&.hpp\fP の \fB225\fP 行目に定義があります。
.SS "ostream & operator<< (ostream & os, \fBDSU\fP a)"

.PP
 \fBdebug\&.hpp\fP の \fB235\fP 行目に定義があります。
.SS "ostream & operator<< (ostream & os, atcoder::dsu a)"

.PP
 \fBdebug\&.hpp\fP の \fB240\fP 行目に定義があります。
.SS "template<typename T> void DebugPring (int i, T name)"

.PP
 \fBdebug\&.hpp\fP の \fB251\fP 行目に定義があります。
.SS "template<typename T1, typename T2, typename\&.\&.\&. T3> void DebugPring (int i, const T1 & name, const T2 & a, const T3 &\&.\&.\&. b)"

.PP
 \fBdebug\&.hpp\fP の \fB253\fP 行目に定義があります。
.SH "著者"
.PP 
 Kyopro Libraryのソースコードから抽出しました。
