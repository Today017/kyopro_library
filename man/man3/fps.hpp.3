.TH "math/fps.hpp" 3 "Kyopro Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
math/fps.hpp
.SH SYNOPSIS
.br
.PP
\fR#include '\&.\&./\&.\&./kyopro_library/template\&.hpp'\fP
.br
\fR#include <atcoder/convolution>\fP
.br
\fR#include <atcoder/modint>\fP
.br

.SS "名前空間"

.in +1c
.ti -1c
.RI "namespace \fBFPS\fP"
.br
.RI "形式的冪級数 \fBborrowed\fP from:https://potato167\&.github\&.io/po167_library "
.in -1c
.SS "関数"

.in +1c
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Mul\fP (const vector< T > &a, const vector< T > &b)"
.br
.RI "多項式 f, g の積を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Add\fP (const vector< T > &a, const vector< T > &b)"
.br
.RI "多項式 f, g の和を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Sub\fP (const vector< T > &a, const vector< T > &b)"
.br
.RI "多項式 f, g の差を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Inv\fP (vector< T > f, int len=\-1)"
.br
.RI "多項式 f に対し、f*g = 1 なる g を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::CyclicConvolution\fP (vector< T > f, vector< T > g)"
.br
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Integral\fP (vector< T > f)"
.br
.RI "多項式 f の積分を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Differential\fP (vector< T > f)"
.br
.RI "多項式 f の微分を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Exp\fP (vector< T > f, int len=\-1)"
.br
.RI "多項式 f について、e^f を返す "
.ti -1c
.RI "template<typename T> vector< T > \fBFPS::Log\fP (vector< T > f, int len=\-1)"
.br
.RI "多項式 f について、log(f) を返す "
.ti -1c
.RI "template<class T> vector< T > \fBFPS::Pow\fP (vector< T > f, \fBll\fP M, int len=\-1)"
.br
.RI "多項式 f^M を返す "
.ti -1c
.RI "template<typename T> void \fBFPS::Extend\fP (vector< T > &v)"
.br
.ti -1c
.RI "template<typename T> void \fBFPS::PickEvenOdd\fP (vector< T > &v, int odd)"
.br
.ti -1c
.RI "template<typename T> pair< vector< T >, vector< T > > \fBFPS::Div\fP (vector< T > f, vector< T > g)"
.br
.RI "多項式 f, g について、\fRf = gq + r\fP なる q, r を返す "
.ti -1c
.RI "template<typename T> T \fBFPS::BostonMori\fP (\fBll\fP k, vector< T > P, vector< T > Q)"
.br
.RI "\fR[x^k](P/Q)\fP を返す "
.ti -1c
.RI "template<typename T> T \fBFPS::KthLinear\fP (\fBll\fP k, vector< T > a, vector< T > c)"
.br
.in -1c
.SH "著者"
.PP 
 Kyopro Libraryのソースコードから抽出しました。
